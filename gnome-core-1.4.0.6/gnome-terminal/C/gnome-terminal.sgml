<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook V3.1//EN" [
<!ENTITY GNOME-APPS SYSTEM "gnome-terminal.sgml">
<!ENTITY term "<application>GNOME Terminal</application>">
 ]>


<article id="index">
 
  <artheader> 
  <title>GNOME Terminal User's Guide</title>
<!--    <authorgroup>
      <author>
	<firstname>Miguel</firstname>
	<surname>de Icaza</surname>
      </author>
      <author>
	<firstname>Michael</firstname>
	<surname>Zucchi</surname>
      </author>
    </authorgroup> -->
    <copyright>
      <year>2000</year>
      <holder>Miguel de Icaza</holder>
      <holder>Michael Zucchi</holder>
      <holder>Alexander Kirillov</holder>
    </copyright>
 
    <legalnotice id="legalnotice"> 

      <para>Permission is granted to copy, distribute and/or modify
      this document under the terms of the <ulink type="help"
      url="gnome-help:fdl"><citetitle>GNU Free Documentation
      License</citetitle></ulink>, Version 1.1 or any later version
      published by the Free Software Foundation with no Invariant
      Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
      copy of the license can be found <ulink type="help"
      url="gnome-help:fdl">here</ulink>.</para>

      <para>Many of the names used by companies to distinguish their
      products and services are claimed as trademarks. Where those
      names appear in any GNOME documentation, and those trademarks
      are made aware to the members of the GNOME Documentation
      Project, the names have been printed in caps or initial caps.
      </para>

    </legalnotice>

    </artheader>

  
    
    <sect1 id="Description">
      <title>Description</title>
      <para>
	&term;  is a terminal emulator program that is part of the
	GNOME project.  It provides access to the Unix shell on the GNOME
	environment. 
      </para>

      <para>
	&term; supports colour display (see <xref
	linkend="config-colour"> for 
	details) and provides mouse support to applications that are
	aware of mouse events for xterm-like terminals. </para>
	</sect1>
    
    <sect1 id="usage">
      <title> Basic usage</title>
      <sect2 id="shells">
	<title>Shells</title>
	<para> 
	 &term; starts the default shell (command line
	interpreter) for the user. Advanced UNIX shells can
	significantly extend the capabilities of the usual command
	line prompt. For example, 
	<application>bash</application> shell (which is the default
	shell for most Linux distributions) provides command 
	completion (try entering beginning of a command or file name
	and press <keycap>Tab</keycap> key), history buffer (you can
	recall previously entered commands by pressing
	<keycap>Up</keycap> arrow key), and much more.  For complete
	documentation, see the manual pages for appropriate shells. 
	</para>
      </sect2>

      <sect2 id="scrolling"> 
	<title>Scrolling</title> 
	<para>
	  &term; provides scrollbar so that you can scroll
	  back and see previous commands and output; this is
	  especially convenient  when a command output
	  does not fit in one screen. By default, the scrollbar is
	  placed on the right side of the terminal window. You can
	  change its location or remove the scrollbar altogether using
	  the <link linkend="config"><interface>Preferences</interface>
	  dialog</link>.
	</para>
	<para> 
	  You can also use keyboard for scrolling:
	  <keysym>Shift-PgUp</keysym> scrolls up,
	  <keysym>Shift-PgDown</keysym> &mdash; down. 
	</para>
      </sect2>

    <sect2 id="emulation">
      <title>Emulation</title>

      <para>The term is designed to emulate the
      <application>xterm</application> program provided by the X
      Consortium.  The <application>xterm</application> program in
      turn is an almost-complete emulation of the DEC VT102
      terminal.</para>
      
      <para>The GNOME terminal program supports the same extensions to
      the VT102 that the <application>xterm</application> program
      provides, through special escape sequences. The xterm program is
      an evolving program. Recent changes to xterm have been been
      incorporated into &term;. This includes emulation of the newer
      DEC VT220 escape sequences.
      </para>

	<para> In simpler terms, this means that GNOME terminal
	understands all the commands (escape sequences) used by
	VT102/VT220 terminals for things like
	positioning of the cursor on screen. Therefore, you can
	run in &term; any application that is designed to work
	inside VT102/VT220/xterm terminals and all the controls (such as
	arrows, <keycap>PageUp/PageDown</keycap> keys, <keycap>Tab
	</keycap> key, etc) will work as expected.  
	</para>

    </sect2>

    </sect1>

    <sect1 id="menus">
      <title>Menus</title>
      <para>
	&term; provides a number of control features accessible via the
	menus located at the top of the terminal window, and a
	<guimenu>pop-up</guimenu>  menu available by pressing the right
	mouse button while holding the <keycap>CTRL</keycap> key. 
      </para>
      <sect2 id="menu-file">
	<title>File menu</title>
	<variablelist>
	  <varlistentry>
	    <term><guimenuitem>New terminal</guimenuitem></term>
	    <listitem>
	      <para>
		Create a new terminal window.  This is an efficient
		way to create multiple terminals, as this uses less
		system resources than starting a separate copy of
		&term;. (For advanced users: the new terminal window
		created in this way is owned by the same process, with
		the same PID as the original terminal.  Each window
		starts its own sub-shell process, however.)
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><guimenuitem>Hide menubar</guimenuitem></term>
	    <listitem>
	      <para>
		Hides the main menu bar on the terminal, creating a
		neater, smaller terminal.  The menu bar can be
		retrieved using the <link linkend="menu-popup">
		<guimenu>pop-up</guimenu> menu</link>.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><guimenuitem>Close terminal</guimenuitem></term>
	    <listitem>
	      <para>
		Closes the current terminal. It also closes any other 
                terminals opened via the command line in that terminal.
                If this is the last terminal to be closed, then the 
                &term; program exits. 
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </sect2>

      <sect2 id="menu-edit">
	<title>Edit menu</title>
	<variablelist>
	  <varlistentry>
	    <term><guimenuitem>Paste</guimenuitem></term>
	    <listitem>
	      <para>
		Pastes the current selection or clipboard into the
		terminal.  This can also be achieved by pressing the
		middle mouse button.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </sect2>

      <sect2 id="menu-settings">
	<title>Settings menu</title>
	<variablelist>
	  <varlistentry>
	    <term><guimenuitem>Preferences ...</guimenuitem></term>
	    <listitem>
	      <para>
		Displays the <interface>Preferences</interface>
		dialogue,  described in <xref
		linkend="config">.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><guimenuitem>Reset Terminal</guimenuitem></term>
	    <listitem>
	      <para>
		Resets the terminal parameters.  This will not clear
		the screen or move the cursor, but any subsequent
		terminal output will be reset to the default font and
		attributes.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><guimenuitem>Reset and Clear</guimenuitem></term>
	    <listitem>
	      <para>
		Resets the terminal parameters, also clearing the
		screen.  All character fonts and attributes are reset.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><guimenuitem>Colour selector ...</guimenuitem></term>
	    <listitem>
	      <para>
		Can be used to drag-and-drop colours into the
		terminal.  See <xref
		linkend="config-colour"> for details.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </sect2>

      <sect2 id="menu-help">
	<title>Help menu</title>
	<variablelist>
	  <varlistentry>
	    <term><guimenuitem>GNOME terminal users guide ...
                </guimenuitem></term>
	    <listitem>
	      <para>
		How to get to this document from within &term;.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><guimenuitem>About ...</guimenuitem></term>
	    <listitem>
	      <para>
		A little bit of kudos for all of the very hard working
		guys who made it all possible.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </sect2>

      <sect2 id="menu-popup">
	<title>Pop-up menu</title>
	<para>
	  The <guimenu>pop-up</guimenu> control menu can be invoked by
	  clicking with the right mouse button anywhere in the
	  terminal window with the <keycap>CTRL</keycap> key
	  depressed. (It is sometimes not necessary to hold down the
	  <keycap>CTRL</keycap> key to get the pop-up menu, but do not
	  assume this is always so.).  It is provided as a simple
	  short-cut to some of the commands of the main menus; this is
	  especailly useful when the menubar is hidden.  The following
	  items are available:
	</para>
	<variablelist>
	  <varlistentry>
	    <term><guimenuitem>New terminal ...</guimenuitem></term>
	    <listitem>
	      <para>
		Creates a new terminal window.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><guimenuitem>Preferences ...</guimenuitem></term>
	    <listitem>
	      <para>
		Displays the <interface>Preferences</interface>
		dialogue,  described in <xref
		linkend="config">. 
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><guimenuitem>Show menubar</guimenuitem></term>
	    <listitem>
	    <para>
	      Checking/unchecking this option shows or hides the
	      menubar at the top of the terminal window.
	    </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><guimenuitem>Secure keyboard</guimenuitem></term>
	    <listitem>
	    <para>This option forces all the keyboard input to be sent
	      directly to the terminal, and bypass anything else. This
	      is useful in the (rare) situation when the same X server
	      is used by many users, and the X server is not using
	      proper authentication methods, thus making it possible
	      for other users to snoop on what you are typing. In such
	      a situation, it is advised that you switch to "secure
	      keyboard" mode before entering any confidential
	      information, such as passwords.
	    </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><guimenuitem>Reset terminal</guimenuitem></term>
	    <listitem>
	      <para>
		Resets the terminal attributes (font and background)
		without clearing the screen.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><guimenuitem>Reset and Clear</guimenuitem></term>
	    <listitem>
	      <para>
		Resets the terminal attributes and clears the
		screen.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><guimenuitem>Open in browser</guimenuitem></term>
	    <listitem>
	      <para>
	        If the mouse pointer was over a URL (for example, an
		Internet address) when the pop-up menu was invoked,
		then this option is available to launch a browser to
		view the URL.  Using <keycap>CTRL</keycap>-left mouse
		button is a shortcut for this menu item.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </sect2>

    </sect1>



    <sect1 id="config">
      <title>Configurable options</title>
      <para>
	Configurable options are configurable via the preferences
	dialogue, which can be invoked by selecting  <link
	linkend="menu-settings"><guimenuitem>Preferences</guimenuitem>
	menu item </link> in the <guimenu> Settings</guimenu> menu. 
      </para>

      <sect2 id="config-general">
	<title>General options</title>
	<para>
	  While most options are self-explanatory, some are discussed below
	  in more detail.
	</para>
	<variablelist>
	  <varlistentry>
	    <term><guilabel>Terminal Class</guilabel></term>
	    <listitem>
	      <para>Sets the terminal class for the current
	      configuration or terminal.  Refer to the section on
	      <link linkend="classes">classes</link> for further
	      information.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><guilabel>Use --login by default</guilabel></term>
	    <listitem>
	      <para>If this option is selected, &term; will launch the
	       shell in login mode (it will run all of your login
	       initialization scripts in this mode). See also
	       information about <option>--login</option> and
	       <option>--nologin</option> <link
	       linkend="options">command line options</link>.  
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><guilabel>Select-by-word characters</guilabel></term>
	    <listitem>
	      <para>Defines a list of characters (or
		<emphasis>character classes</emphasis>) that should be
		considered 'word characters'.  These are used when
		<link linkend="pointer-select">selecting text</link>
		by word.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </sect2>
    <sect2 id="config-image">
      <title>Background image configuration</title>
      <para>
	In the <guilabel>Image</guilabel> tab, you can set the
	background image to use for the terminal. Possible choices are
	</para>
	<itemizedlist>
	  <listitem> 
            <para><guilabel>None</guilabel> &mdash; in this
	    case, &term; will use the background color as set in
	  <guilabel>Colors</guilabel> tab 
	    </para>
	  </listitem>
	  <listitem> 
	    <para> <guilabel>Background pixmap</guilabel> &mdash; this
	    option allows you to choose an image file to be used as 
	    background. You can press <guibutton>Browse</guibutton>
	    button to choose the image file. 
	    </para>
	  </listitem>
	<listitem> 
	  <para> 
	    <guilabel>Transparent</guilabel> &mdash; this
	    option makes &term; use "transparent"
	    background. It is not really transparent: it
	    just mimics the background of your desktop (root
	    window), much like a chameleon does. Do not expect to see
	    other windows through the &term;, though.
	    </para>
	    </listitem>
	    </itemizedlist>
	      <para> 
		     For <guilabel>Pixmap</guilabel> and
		<guilabel>Transparent</guilabel> 
		backgrounds, you can also check the button
		<guibutton>Shade background</guibutton>, which will
		"shade", or "dim", the background image.  
	   </para> 
     </sect2>

	      
	      
		



      <sect2 id="config-colour">
	<title>Colour configuration</title>
	<para>
	  Gnome terminal fully supports the colour extensions used by
	  <application>xterm</application>.
	  <guilabel>Colors</guilabel> tab allows you
	  to control those colours.
	</para>

	<variablelist>
	  <varlistentry>
	    <term><guilabel>Colour scheme</guilabel></term>
	    <listitem>
	      <para> Some applications are capable of using the colour
	      capabilities of a terminal. The way the interaction
	      between an application and the terminal is set up is
	      that the application can request one of sixteen named
	      colours (ANSI colours), such as "blue" or "bright red":
	      for example, <application>mutt</application> mail reader
	      can use red colour to show urgent messages. However, it
	      is up to the terminal to decide which exact tint to use
	      for "bright red" or "blue". This collection of sixteen
	      colours is called a palette, or "colour scheme".
	      </para>
	      <para>&term; supports four colour schemes: the
		<guilabel>Linux console</guilabel> scheme, the
		<guilabel>Color Xterm</guilabel> scheme, the
		<guilabel>rxvt</guilabel> colour scheme, and a
		completely customizable colour scheme. They all are
		slightly different: for example, Linux console uses
		light gray in place of "white", while rxvt uses real
		white.
	      </para>
	      <para>
		If you have selected the <guilabel>custom</guilabel>
		option, then all 16 colours (nominally 8 colours and 8
		bright colours) can be customized by clicking on the
		colour selector buttons.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><guilabel>Foreground/Background colours</guilabel></term>
	    <listitem>
	      <para>Here you can set the default terminal foreground
		and background colours, which are used when no colours
		have been requested by the application running inside
		of &term;.
		</para>
	      
	      <para>
                The following options are available:
		<guilabel>white on black</guilabel>, <guilabel>black
		on white</guilabel>, <guilabel>green on
		black</guilabel>, <guilabel>black on light
		yellow</guilabel>, and <guilabel>custom</guilabel>.
		How these actually appear depends on the palette
		selected (for the <guilabel>white on black</guilabel>
		and <guilabel>black on white</guilabel> options).
		<guilabel>Custom</guilabel> allows you to select the
		default foreground and background colours individually
		and separate from the palette.
	    </para>

	      <para>Additionally, the user can drag a colour from the
		rectangular box beneath the colour wheel from any GNOME
		colour selector or colour source and drop it into the
		terminal.  If the user drops the colour on a blank space, it
		will set the background, if the user drops the colour on a
		cell that contains a character, it will change the
		foreground.  This will also automatically change
		foreground/background type to <guilabel>Custom
		colours</guilabel>  and set the custom foreground or
		background colour.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </sect2>

    <sect2 id="config-scrolling">  
     <title>Scrolling</title>
      <para>
	In this tab you can set the position of the scrollbar and the
	number of lines to keep in memory for scrolling. 
      </para>
    </sect2>

    </sect1>






    
    <sect1 id="pointerusage">
      <title>Mouse usage</title>
      <para>
	The mouse can be used to select (copy), and extend-select
	text, paste text from other terminals or applications, and
	bring up a menu.
      </para>

      <sect2 id="pointer-select">
	<title>Selection</title>
        <para>
          The following assumes a standard three-button mouse that
          has not been made left-handed via the control center. Left-handed 
          mice will of course work, but with the right button instead of
          the left one, and so on.
        </para>
	<para>
	  The left mouse button can be used to initiate a selection.
	  If the mouse button is clicked once, and dragged, then
	  characters are selected individually.  If you drag past the
	  vertical boundaries of the window it will scroll to keep
	  up.
	</para>
	<para>
	  If the left mouse button is double-clicked, then the
	  selection will be by word-characters.  Hold the mouse button
	  down on the second click to drag the mouse and enlarge the
	  selection.  The word-characters are defined in the
	  <guilabel> General options</guilabel> tab of <link
	  linkend="config-general">Preferences dialogue</link>.
	</para>
	<para>
	  Finally, if the left mouse button is triple-clicked and
	  held, whole lines are selected as you drag the mouse up and
	  down.
	</para>
	<para>
	  The right mouse button can be used to extend the
	  selection.  Simply scroll to where you wish to extend the
	  selection to, and click the right mouse button in the
	  desired place.   Again, single, double and 
          triple clicks will result in by-character, by-word, or 
          by-line selection.
	</para>
	<para>
	  For all cases, releasing the mouse button automatically
	  copies the selected text into the clipboard, so that it may
	  be pasted to other applications.  Note that any screen
	  output will clear the highlighting of the selection, but it
	  will still be kept in the clipboard.
	</para>
      </sect2>

      <sect2 id="pointer-paste">
	<title>Pasting text</title>
	<para>
	  If the middle mouse button is pressed, then the current
	  selection is pasted into the window.  This can be used to
	  transfer text from other applications.
	</para>
	<para>
	  If you only have a two-button mouse, then your X server
	  probably has a method of emulating the middle mouse
	  button. The most common method is to emulate the middle
	  mouse button by simultaneous pressing of left and right
	  mouse buttons.  Refer to your X server documentation for
	  further information.
	</para>
      </sect2>

      <sect2 id="pointer-wheel">
	<title>Wheel mouse</title>
	<para>
	  If you have a wheel mouse (which sends mouse button 4 and
	  mouse button 5 events), then you can use the wheel to scroll
	  up and down through the scrollback buffer.
	</para>
      </sect2>

      <sect2 id="pointer-menu">
	<title>Control Menu</title>
	<para>
	  The pointer can also be used to bring up a <link
	  linkend="menu-popup">control-menu</link>, 
	  which can be used to reset the terminal or bring back the
	  main menu bar, if it has been hidden. To invoke this menu,
	  click anywhere in the terminal with the right mouse button
	  while holding down the <keycap>CTRL</keycap> key.
	</para>
      </sect2>
 
      <sect2 id="url-highlight">
        <title>Launching URL's</title>
        <para>
          Gnome terminal can be used to select URL's (Uniform Resource
          Locators; most commonly, Internet addresses, such as
          <literal>http://www.gnome.org</literal>) from the text
          display, simply by moving the mouse over the URL text.  The
          URL will be highlighted, by being redrawn with an underline,
          and the mouse pointer will change to a pointing hand.
        </para> 
        <para>
          Invoking the <link linkend="menu-popup">control-menu</link>
          while over a highlighted URL will add a new option to load
          that URL into a browser.
	</para>
	<para>
	  Pressing the left mouse button, while holding down the
	  <keycap>CTRL</keycap> 
	  key is a shortcut to launch the URL immediately.
        </para>
      </sect2>

      <sect2 id="pointer-dnd">
	<title>Drag and Drop</title>
	<para>
	  Drag and drop can be used for a number of operations within
	  the terminal.
	</para>
	<variablelist>
	  <varlistentry>
	    <term>Dragging files</term>
	    <listitem>
	      <para>If files are dragged into the terminal, then their
		full filename is pasted into the window.  URL's can also
		be dropped in this way.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Dragging colours</term>
	    <listitem>
	      <para>
		A colour can be dragged from another gnome
		application, or from the
		<link linkend="menu-settings">colour selector</link> into the
		display.  If it lands on a character, it sets the
		foreground colour, otherwise it sets the background
		colour.  Refer to the
		<link linkend="config-colour">colour
		configuration</link> section. 
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </sect2>
   </sect1>
    



    
  <sect1 id="classes">
    <title>Terminal classes</title> 

    <para>The GNOME terminal allows you to have different
      configuration profiles to suit different uses (different
      background colours, presence, absence or position of scrollbars,
      and so on).  To set these up, invoke the
      <interface>Preferences</interface> dialogue from the
      <guimenu>Settings</guimenu> menu of &term;. Select the options
      you prefer (these changes will be made to your currently-open
      terminal, so you can see what they look like), and before
      closing the preferences box, make sure you have put a new name
      in the <guilabel>Terminal Class</guilabel> field.
    </para>
      
    <para>To activate a specific class at program startup you can use
      the <option>--tclass</option> command line option
    </para>
  </sect1>
    
  <sect1 id="options">
    <title>Command line options</title>
    <para>
      <itemizedlist>
	<listitem>
	  <para><option>--background <replaceable>COLOUR</replaceable>
	    </option>
	  </para>
	  
	  <para>Used to specify the 
	    background colour for the terminal at startup.  The
	    <replaceable>COLOUR</replaceable> can be
	    any form accepted by your windowing system.
	  </para>
	</listitem>
	  
	<listitem>
	  <para><option>--tclass <replaceable>CLASSNAME</replaceable>
	    </option></para>
	  <para>
	    Specifies the terminal class used to configure the
	    terminal at startup.
	  </para>
	</listitem>
	
	<listitem>
	  <para><option>--command <replaceable>CMD</replaceable>,
	      -e <replaceable>CMD</replaceable>
	    </option></para>
	  <para>
	    Runs the <replaceable>CMD</replaceable> command at startup time.
	  </para>
	  </listitem>

	<listitem>
	  <para><option>--execute <replaceable>CMD ARGS</replaceable>, 
                        -x <replaceable>CMD ARGS</replaceable>
           </option></para>
	  <para>
	    Executes the command <replaceable>CMD</replaceable> with
	    its arguments <replaceable>ARGS</replaceable> on startup.
	    No arguments beyond this one will be processed by the
	    terminal.  This behaviour mimics the <command>xterm
	    -e</command> behaviour.
	  </para>
	</listitem>
	  
	<listitem>
	  <para><option>--font <replaceable>FONT</replaceable></option></para>
	  <para>
	    Sets the font of the terminal to
	    <replaceable>FONT</replaceable> 
	  </para>
	</listitem>
	  
	<listitem>
	  <para><option>--foreground <replaceable>COLOUR</replaceable>
           </option></para>
	  <para>
	    Sets the foreground of the terminal to
	    <replaceable>COLOUR</replaceable> .
	  </para>
	</listitem>
	  
	<listitem>
	  <para><option>--geometry <replaceable>GEOMETRY</replaceable>
           </option></para>
	  <para>
	    Specifies the startup geometry for this terminal.  The
	    geometry specifies the desired width and height in
	    terminal characters.  For example:
	    <option>--geometry=80x40</option> will create an
	    eighty-column by forty-line terminal. You can also specify
	    the location of the terminal window on the screen; for
	    example, <option>--geometry=80x40+100+200</option> will
	    create a window whose top left corner is 100 pixels to the
	    right and 200 pixels down from the top left corner of the
	    screen, while <option>--geometry=80x40+100-200</option>
	    will give a window whose bottom left corner is 100 pixels to the
	    right and 200 pixels up from the bootm left corner of the
	    screen.   </para>
            <!--
	      <para>FIXME: LInk to gnome-libs document on GEOMETRY
	      specifications when it is written
	    </para> -->
	</listitem>
	  
	<listitem>
	  <para><option>--login</option></para>
	  <para>
	    Make &term; launch the shell in login mode (it will run
	    all of your login initialization scripts in this mode). 
	  </para>
	  </listitem>
	  
	<listitem>
	  <para><option>--nologin</option>
	  </para>
	  <para>
	    Make &term; only launch a shell, without running any
	    login initialization scripts. This is the default, unless
	    you have selected <guilabel>Use --login by
	    default</guilabel> in the <link
	    linkend="config-general">preferences</link> dialog. 
	  </para>
	  </listitem>
	  
	    <listitem>
	    <para><option>--noutmp</option></para>
	    <para>
	      Indicates that this and the associated shell should not be
	      registered in the system database of users logged into the
	      computer. 
	    </para>
	  </listitem>
	  
	  <listitem>
	    <para><option>--utmp</option></para>
	    <para>
	      Indicates that the user wants this terminal to be
	      registered in the system database of users logged into
	      the computer (the utmp database).  This is the default.
	    </para>
	  </listitem>

	  <listitem>
	    <para><option>--lastlog</option></para>
	    <para>
	      Always create a lastlog entry for each terminal login.
	    </para>
	  </listitem>
	  
	  <listitem>
	    <para><option>--nolastlog</option></para>
	    <para>
	      Do not create a lastlog entry for each terminal login.
	    </para>
	  </listitem>
	  	  
	  <listitem>
	    <para><option>--title <replaceable>TITLE</replaceable>,
                           -t <replaceable>TITLE</replaceable>
            </option></para>
	    <para>
	      Makes &term; use <replaceable>TITLE</replaceable> for the
	      window caption.
	    </para>
	  </listitem>

	  <listitem>
	    <para><option>--termname <replaceable>TERMNAME</replaceable>
             </option></para>
	    <para>
	      Makes &term; use
	      <replaceable>TERMNAME</replaceable> as the value of the
	      <envar>TERM</envar> environment variable.
	    </para>
	  </listitem>

	  <listitem>
	    <para><option>--start-factory-server</option></para>
	    <para>
	      Try to start the TerminalFactory service for this
	      terminal (see below). 
	    </para>
	  </listitem>

	  <listitem>
	    <para><option>--use-factory</option></para>
	    <para>
              If there is already a terminal process started with
	      <option>--start-factory-server</option> option, then
	      running the command <command>gnome-terminal
	      --use-factory</command> will create a new terminal
	      window owned by the existing teminal process. In other
	      words, it will have the same effect as choosing
	      <link linkend="menu-file">
              <menuchoice><guimenu>File</guimenu>
              <guimenuitem>New
              terminal</guimenuitem></menuchoice></link> in the
              existing terminal. 
	    </para>
            <para> 
             If there is no TerminalFactory running, then this option has no
             effect. 
	    </para>
	  </listitem>
	</itemizedlist>		
      </para>
      <para>You can use more than one option at once: for example, on
            a machine with the text-based web browser
            <application>Lynx</application> installed, <command>gnome-terminal
            --title Web --command lynx</command> will open a &term; which
            starts up <application>Lynx</application> and has a
            titlebar which says "Web".
      </para>

    </sect1>
    
    <sect1 id="environment">
      <title>Environment</title>
      <para>
	The following variables are set by &term;: 
	<itemizedlist>
	  <listitem>
	    <para><envar>TERM</envar></para>

	    <para>
	      This variable is set to "xterm" by default.  Some curses
	      implementations and applications based on curses might want
	      the value to be xterm-color, color-xterm or xterm-debian to
	      support colour.  You might need to change this setting if
	      your application does not display in colour to one of those
	      values.  This can now be set via the
	      <option>--termname </option> <link linkend="options">command
	      line option</link>.
	    </para>
	  </listitem>

	  <listitem>
	    <para><envar>COLORTERM</envar></para>

	    <para>
	      This variable is set to "gnome-terminal".
	      Various applications (especially the
	      Slang-based applications) use this setting to determine 
	      whether the terminal supports colour.
	    </para>
	  </listitem>

	  <listitem>
	    <para><envar>WINDOWID</envar></para>

	    <para>
	      This variable contains the X11 Window identifier.
	      This is used sometimes by applications to modify the
	      contents of this window or provide special effects.
	    </para>
	  </listitem>
	</itemizedlist>
      </para>
    </sect1>
    
    <sect1 id="Authors">
      <title>Authors</title>

      <para>
	A large number of people work together to bring you the
	&term;:</para>

      <para>
	Michael Zucchi coded the Zvt widget engine; Miguel de Icaza
	and Jay Painter improved it and did further debugging and
	maintenance.   George Lebl added transparency and backing
	pixmap support to the widget.  Michael Zucchi later
	significantly improved the transparency and pixmap support,
	adding smoother/faster display and an optional scrolling mode.
	</para>

      <para>
	Miguel did the main gnome terminal program, and Erik Troan
	provided the terminal class support along with various other
	features.  Jeff Garzik, Jay, Christopher Blizzard, Michael,
	Jens Lautenbacher, Tom Tromey, Tristan Tarrant, Jonathan
	Blandford and Michael Zucchi provided extra bug fixes and
	minor enhancements.  Nat Friedman reviewed the user interface to
	conform to the GNOME guidelines.  Felix Bellaby, Tom Tromey
	and Manish Vachharajani implemented and improved the session
	management code.
      </para>

    <para> Please send all comments, suggestions, and bug reports to
      the <ulink url="http://bugs.gnome.org/" type="http">GNOME bug
      tracking database</ulink>. Instructions for submitting bug
      reports can be found on-line at <ulink
      url="http://bugs.gnome.org/Reporting.html" type="http">
      http://bugs.gnome.org/Reporting.html</ulink>. You can also use
      <application>Bug Report Tool</application>
      (<command>bug-buddy</command>), available in the
      <guisubmenu>Utilities</guisubmenu> submenu of <guimenu>Main
      Menu</guimenu>, for submitting bug reports.
      </para>
    <para>
      This manual was written by Miguel de Icaza and Michael Zucchi
      with minor contributions by Alexander Kirillov.  Please send all
      comments and suggestions regarding this manual to the <ulink
      type="http" url="http://developer.gnome.org/projects/gdp/">GNOME Documentation
      Project</ulink> by sending an email to
      <email>docs@gnome.org</email>. You can also add your comments
      online by using the <ulink type="http"
      url="http://developer.gnome.org/projects/gdp/doctable/">GNOME Documentation
      Status Table</ulink>.
    </para>
  </sect1>


  <sect1 id="license">
   <title>License</title>
    <para>
      This program is free software; you can redistribute it and/or
      modify it under the terms of the <ulink url="gnome-help:gpl"
      type="help"><citetitle>GNU General Public License</citetitle></ulink> as
      published by the Free Software Foundation; either version 2 of
      the License, or (at your option) any later version.
  </para>
  <para>
   This program is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   <ulink type="help" url="gnome-help:gpl"><citetitle>GNU General
   Public License</citetitle></ulink> for more details.
  </para>
  <para>
   A copy of the <ulink type="help"
   url="gnome-help:gpl"><citetitle>GNU General Public
   License</citetitle></ulink> is included as an appendix to the
   <citetitle>GNOME Users Guide</citetitle>.  You may also obtain a
   copy of the <ulink type="help" url="gnome-help:gpl"><citetitle>GNU
   General Public License</citetitle></ulink> from the Free Software
   Foundation by visiting <ulink type="http"
   url="http://www.fsf.org/">their Web site</ulink> or by writing to
   <address>
    Free Software Foundation, Inc.
    <street>59 Temple Place</street> - Suite 330
    <city>Boston</city>, <state>MA</state> <postcode>02111-1307</postcode>
    <country>USA</country>
   </address>
  </para>
 </sect1>
  
</article>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
