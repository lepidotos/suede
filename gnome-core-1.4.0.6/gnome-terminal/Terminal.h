/*
 * This file was generated by orbit-idl - DO NOT EDIT!
 */

#include <glib.h>
#define ORBIT_IDL_SERIAL 9
#include <orb/orbit.h>

#ifndef Terminal_H
#define Terminal_H 1
#ifdef __cplusplus
extern "C"
{
#endif				/* __cplusplus */

/** typedefs **/
#include <libgnorba/gnome-factory.h>
#if !defined(ORBIT_DECL_GNOME_Terminal_Terminal) && !defined(_GNOME_Terminal_Terminal_defined)
#define ORBIT_DECL_GNOME_Terminal_Terminal 1
#define _GNOME_Terminal_Terminal_defined 1
#define GNOME_Terminal_Terminal__free CORBA_Object__free
   typedef CORBA_Object GNOME_Terminal_Terminal;
   extern CORBA_unsigned_long GNOME_Terminal_Terminal__classid;
#if !defined(TC_IMPL_TC_GNOME_Terminal_Terminal_0)
#define TC_IMPL_TC_GNOME_Terminal_Terminal_0 'T'
#define TC_IMPL_TC_GNOME_Terminal_Terminal_1 'e'
#define TC_IMPL_TC_GNOME_Terminal_Terminal_2 'r'
#define TC_IMPL_TC_GNOME_Terminal_Terminal_3 'm'
#define TC_IMPL_TC_GNOME_Terminal_Terminal_4 'i'
#define TC_IMPL_TC_GNOME_Terminal_Terminal_5 'n'
#define TC_IMPL_TC_GNOME_Terminal_Terminal_6 'a'
#define TC_IMPL_TC_GNOME_Terminal_Terminal_7 'l'
   extern const struct CORBA_TypeCode_struct
      TC_GNOME_Terminal_Terminal_struct;
#define TC_GNOME_Terminal_Terminal ((CORBA_TypeCode)&TC_GNOME_Terminal_Terminal_struct)
#endif
#endif
#if !defined(ORBIT_DECL_GNOME_Terminal_TerminalFactory) && !defined(_GNOME_Terminal_TerminalFactory_defined)
#define ORBIT_DECL_GNOME_Terminal_TerminalFactory 1
#define _GNOME_Terminal_TerminalFactory_defined 1
#define GNOME_Terminal_TerminalFactory__free CORBA_Object__free
   typedef CORBA_Object GNOME_Terminal_TerminalFactory;
   extern CORBA_unsigned_long GNOME_Terminal_TerminalFactory__classid;
#if !defined(TC_IMPL_TC_GNOME_Terminal_TerminalFactory_0)
#define TC_IMPL_TC_GNOME_Terminal_TerminalFactory_0 'T'
#define TC_IMPL_TC_GNOME_Terminal_TerminalFactory_1 'e'
#define TC_IMPL_TC_GNOME_Terminal_TerminalFactory_2 'r'
#define TC_IMPL_TC_GNOME_Terminal_TerminalFactory_3 'm'
#define TC_IMPL_TC_GNOME_Terminal_TerminalFactory_4 'i'
#define TC_IMPL_TC_GNOME_Terminal_TerminalFactory_5 'n'
#define TC_IMPL_TC_GNOME_Terminal_TerminalFactory_6 'a'
#define TC_IMPL_TC_GNOME_Terminal_TerminalFactory_7 'l'
   extern const struct CORBA_TypeCode_struct
      TC_GNOME_Terminal_TerminalFactory_struct;
#define TC_GNOME_Terminal_TerminalFactory ((CORBA_TypeCode)&TC_GNOME_Terminal_TerminalFactory_struct)
#endif
#endif

/** POA structures **/
   typedef struct
   {
      void *_private;
   }
   POA_GNOME_Terminal_Terminal__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_GNOME_Terminal_Terminal__epv *GNOME_Terminal_Terminal_epv;
   }
   POA_GNOME_Terminal_Terminal__vepv;
   typedef struct
   {
      void *_private;
      POA_GNOME_Terminal_Terminal__vepv *vepv;
   }
   POA_GNOME_Terminal_Terminal;
   extern void POA_GNOME_Terminal_Terminal__init(PortableServer_Servant
						 servant,
						 CORBA_Environment * ev);
   extern void POA_GNOME_Terminal_Terminal__fini(PortableServer_Servant
						 servant,
						 CORBA_Environment * ev);
   typedef struct
   {
      void *_private;
       GNOME_Terminal_Terminal(*create_terminal) (PortableServer_Servant
						  _servant,
						  const CORBA_char * geometry,
						  CORBA_Environment * ev);
   }
   POA_GNOME_Terminal_TerminalFactory__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_GNOME_GenericFactory__epv *GNOME_GenericFactory_epv;
      POA_GNOME_Terminal_TerminalFactory__epv
	 *GNOME_Terminal_TerminalFactory_epv;
   }
   POA_GNOME_Terminal_TerminalFactory__vepv;
   typedef struct
   {
      void *_private;
      POA_GNOME_Terminal_TerminalFactory__vepv *vepv;
   }
   POA_GNOME_Terminal_TerminalFactory;
   extern void POA_GNOME_Terminal_TerminalFactory__init(PortableServer_Servant
							servant,
							CORBA_Environment *
							ev);
   extern void POA_GNOME_Terminal_TerminalFactory__fini(PortableServer_Servant
							servant,
							CORBA_Environment *
							ev);

/** prototypes **/
#define GNOME_Terminal_TerminalFactory_supports GNOME_GenericFactory_supports
#define GNOME_Terminal_TerminalFactory_create_object GNOME_GenericFactory_create_object
   GNOME_Terminal_Terminal
      GNOME_Terminal_TerminalFactory_create_terminal
      (GNOME_Terminal_TerminalFactory _obj, const CORBA_char * geometry,
       CORBA_Environment * ev);

   void
      _ORBIT_skel_GNOME_Terminal_TerminalFactory_create_terminal
      (POA_GNOME_Terminal_TerminalFactory * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       GNOME_Terminal_Terminal(*_impl_create_terminal) (PortableServer_Servant
							_servant,
							const CORBA_char *
							geometry,
							CORBA_Environment *
							ev));
#ifdef __cplusplus
}
#endif				/* __cplusplus */

#endif
#undef ORBIT_IDL_SERIAL
