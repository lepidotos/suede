/*
 * This file was generated by orbit-idl - DO NOT EDIT!
 */

#include <glib.h>
#define ORBIT_IDL_SERIAL 9
#include <orb/orbit.h>

#ifndef help_browser_H
#define help_browser_H 1
#ifdef __cplusplus
extern "C"
{
#endif				/* __cplusplus */

/** typedefs **/
#if !defined(ORBIT_DECL_help_browser_simple_browser) && !defined(_help_browser_simple_browser_defined)
#define ORBIT_DECL_help_browser_simple_browser 1
#define _help_browser_simple_browser_defined 1
#define help_browser_simple_browser__free CORBA_Object__free
   typedef CORBA_Object help_browser_simple_browser;
   extern CORBA_unsigned_long help_browser_simple_browser__classid;
#if !defined(TC_IMPL_TC_help_browser_simple_browser_0)
#define TC_IMPL_TC_help_browser_simple_browser_0 'h'
#define TC_IMPL_TC_help_browser_simple_browser_1 'e'
#define TC_IMPL_TC_help_browser_simple_browser_2 'l'
#define TC_IMPL_TC_help_browser_simple_browser_3 'p'
#define TC_IMPL_TC_help_browser_simple_browser_4 '_'
#define TC_IMPL_TC_help_browser_simple_browser_5 'b'
#define TC_IMPL_TC_help_browser_simple_browser_6 'r'
#define TC_IMPL_TC_help_browser_simple_browser_7 'o'
#define TC_IMPL_TC_help_browser_simple_browser_8 'w'
#define TC_IMPL_TC_help_browser_simple_browser_9 's'
#define TC_IMPL_TC_help_browser_simple_browser_10 'e'
#define TC_IMPL_TC_help_browser_simple_browser_11 'r'
   extern const struct CORBA_TypeCode_struct
      TC_help_browser_simple_browser_struct;
#define TC_help_browser_simple_browser ((CORBA_TypeCode)&TC_help_browser_simple_browser_struct)
#endif
#endif

/** POA structures **/
   typedef struct
   {
      void *_private;
      void (*fetch_url) (PortableServer_Servant _servant,
			 const CORBA_char * URL, CORBA_Environment * ev);
       help_browser_simple_browser(*show_url) (PortableServer_Servant
					       _servant,
					       const CORBA_char * URL,
					       CORBA_Environment * ev);
   }
   POA_help_browser_simple_browser__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_help_browser_simple_browser__epv *help_browser_simple_browser_epv;
   }
   POA_help_browser_simple_browser__vepv;
   typedef struct
   {
      void *_private;
      POA_help_browser_simple_browser__vepv *vepv;
   }
   POA_help_browser_simple_browser;
   extern void POA_help_browser_simple_browser__init(PortableServer_Servant
						     servant,
						     CORBA_Environment * ev);
   extern void POA_help_browser_simple_browser__fini(PortableServer_Servant
						     servant,
						     CORBA_Environment * ev);

/** prototypes **/
   void help_browser_simple_browser_fetch_url(help_browser_simple_browser
					      _obj, const CORBA_char * URL,
					      CORBA_Environment * ev);
   help_browser_simple_browser
      help_browser_simple_browser_show_url(help_browser_simple_browser _obj,
					   const CORBA_char * URL,
					   CORBA_Environment * ev);

   void
      _ORBIT_skel_help_browser_simple_browser_fetch_url
      (POA_help_browser_simple_browser * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl_fetch_url) (PortableServer_Servant _servant,
				const CORBA_char * URL,
				CORBA_Environment * ev));
   void
      _ORBIT_skel_help_browser_simple_browser_show_url
      (POA_help_browser_simple_browser * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       help_browser_simple_browser(*_impl_show_url) (PortableServer_Servant
						     _servant,
						     const CORBA_char * URL,
						     CORBA_Environment * ev));
#ifdef __cplusplus
}
#endif				/* __cplusplus */

#endif
#undef ORBIT_IDL_SERIAL
