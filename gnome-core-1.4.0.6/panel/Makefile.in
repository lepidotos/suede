# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# CFLAGS += -Wall  \
# 	            -Wpointer-arith  	\
# 	-Wmissing-prototypes -Wmissing-declarations 


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AS = @AS@
BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@
BZ_LIBS = @BZ_LIBS@
CANVAS_PIXBUF_CFLAGS = @CANVAS_PIXBUF_CFLAGS@
CANVAS_PIXBUF_LIBS = @CANVAS_PIXBUF_LIBS@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CFLAGS = @CFLAGS@
CONTROL_CENTER_REQUIRED = @CONTROL_CENTER_REQUIRED@
CPPFLAGS = @CPPFLAGS@
DATADIRNAME = @DATADIRNAME@
DLLTOOL = @DLLTOOL@
DL_LIB = @DL_LIB@
ECHO = @ECHO@
ESD_CFLAGS = @ESD_CFLAGS@
ESD_CONFIG = @ESD_CONFIG@
ESD_LIBS = @ESD_LIBS@
EXEEXT = @EXEEXT@
GDK_PIXBUF_REQUIRED = @GDK_PIXBUF_REQUIRED@
GENCAT = @GENCAT@
GLADE_CFLAGS = @GLADE_CFLAGS@
GLADE_LIBS = @GLADE_LIBS@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GNOMEGNORBA_LIBS = @GNOMEGNORBA_LIBS@
GNOMEUI_LIBS = @GNOMEUI_LIBS@
GNOME_APPLETS_LIBS = @GNOME_APPLETS_LIBS@
GNOME_CAPPLET_LIBS = @GNOME_CAPPLET_LIBS@
GNOME_CONFIG = @GNOME_CONFIG@
GNOME_DOCKLETS_LIBS = @GNOME_DOCKLETS_LIBS@
GNOME_INCLUDEDIR = @GNOME_INCLUDEDIR@
GNOME_LIBDIR = @GNOME_LIBDIR@
GNOME_LIBS = @GNOME_LIBS@
GNOME_LIBS_REQUIRED = @GNOME_LIBS_REQUIRED@
GNOME_PRINT_CFLAGS = @GNOME_PRINT_CFLAGS@
GNOME_PRINT_LIBS = @GNOME_PRINT_LIBS@
GNOME_PRINT_PREFIX = @GNOME_PRINT_PREFIX@
GNOME_TERMINAL_CFLAGS = @GNOME_TERMINAL_CFLAGS@
GNOME_TERMINAL_LIBS = @GNOME_TERMINAL_LIBS@
GNOME_XML_CFLAGS = @GNOME_XML_CFLAGS@
GNOME_XML_LIB = @GNOME_XML_LIB@
GNORBA_CFLAGS = @GNORBA_CFLAGS@
GNORBA_LIBS = @GNORBA_LIBS@
GTKDOC = @GTKDOC@
GTKXMHTML_LIBS = @GTKXMHTML_LIBS@
GTK_CFLAGS = @GTK_CFLAGS@
GTK_CONFIG = @GTK_CONFIG@
GTK_HTML_PREFIX = @GTK_HTML_PREFIX@
GTK_LIBS = @GTK_LIBS@
GTK_REQUIRED = @GTK_REQUIRED@
GT_NO = @GT_NO@
GT_YES = @GT_YES@
HAVE_GTK_DOC = @HAVE_GTK_DOC@
HAVE_JW = @HAVE_JW@
INCLUDE_LOCALE_H = @INCLUDE_LOCALE_H@
INSTOBJEXT = @INSTOBJEXT@
INTLDEPS = @INTLDEPS@
INTLLIBS = @INTLLIBS@
INTLOBJS = @INTLOBJS@
INTLTOOL_PERL = @INTLTOOL_PERL@
JW = @JW@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LIBGLADE_REQUIRED = @LIBGLADE_REQUIRED@
LIBTOOL = @LIBTOOL@
LIBWRAP_LIBS = @LIBWRAP_LIBS@
LN_S = @LN_S@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKINSTALLDIRS = @MKINSTALLDIRS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ORBIT_CFLAGS = @ORBIT_CFLAGS@
ORBIT_CONFIG = @ORBIT_CONFIG@
ORBIT_IDL = @ORBIT_IDL@
ORBIT_LIBS = @ORBIT_LIBS@
ORBIT_REQUIRED = @ORBIT_REQUIRED@
ORB_CFLAGS = @ORB_CFLAGS@
ORB_LIBS = @ORB_LIBS@
PACKAGE = @PACKAGE@
PATH_TO_XRDB = @PATH_TO_XRDB@
PIXBUF_CFLAGS = @PIXBUF_CFLAGS@
PIXBUF_LIBS = @PIXBUF_LIBS@
PNG_LIBS = @PNG_LIBS@
POFILES = @POFILES@
POSUB = @POSUB@
PTHREAD_LIB = @PTHREAD_LIB@
RANLIB = @RANLIB@
RES_LIBS = @RES_LIBS@
SCROLLKEEPER_CONFIG = @SCROLLKEEPER_CONFIG@
SCROLLKEEPER_REQUIRED = @SCROLLKEEPER_REQUIRED@
STRIP = @STRIP@
USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
WINDOW_MANAGER = @WINDOW_MANAGER@
XINERAMA_LIBS = @XINERAMA_LIBS@
XML_I18N_EXTRACT = @XML_I18N_EXTRACT@
XML_I18N_MERGE = @XML_I18N_MERGE@
XML_I18N_MERGE_DESKTOP_RULE = @XML_I18N_MERGE_DESKTOP_RULE@
XML_I18N_MERGE_DIRECTORY_RULE = @XML_I18N_MERGE_DIRECTORY_RULE@
XML_I18N_MERGE_KEYS_RULE = @XML_I18N_MERGE_KEYS_RULE@
XML_I18N_MERGE_OAF_RULE = @XML_I18N_MERGE_OAF_RULE@
XML_I18N_MERGE_PONG_RULE = @XML_I18N_MERGE_PONG_RULE@
XML_I18N_MERGE_SERVER_RULE = @XML_I18N_MERGE_SERVER_RULE@
XML_I18N_MERGE_SHEET_RULE = @XML_I18N_MERGE_SHEET_RULE@
XML_I18N_MERGE_SOUNDLIST_RULE = @XML_I18N_MERGE_SOUNDLIST_RULE@
XML_I18N_MERGE_XML_RULE = @XML_I18N_MERGE_XML_RULE@
XML_I18N_UPDATE = @XML_I18N_UPDATE@
XPM_LIBS = @XPM_LIBS@
YACC = @YACC@
ZVT_LIBS = @ZVT_LIBS@
cflags_set = @cflags_set@
cxxflags_set = @cxxflags_set@
gnomelocaledir = @gnomelocaledir@
l = @l@

AUTOMAKE_OPTIONS = 1.3

SUBDIRS = config doc help

INCLUDES = \
	-I.			\
	-I$(srcdir)		\
	-I$(top_srcdir)/intl	\
	-I$(top_builddir)/intl	\
	-I$(top_builddir)/panel	\
	-DGNOMELOCALEDIR=\""$(datadir)/locale"\" \
	-DGNOME_DATADIR=\""$(datadir)"\" \
	-DGLADEDIR=\""$(datadir)/gnome/panel"\" \
	-DGLOBAL_CONFDIR=\""$(sysconfdir)/gnome/panel-config"\" \
	-I$(includedir)		\
	$(GNOME_INCLUDEDIR)	\
	$(ORB_CFLAGS)		\
	$(GNOME_PRINT_CFLAGS)	\
	$(GLADE_CFLAGS)		\
	$(PIXBUF_CFLAGS)


gwmh_dir = $(top_srcdir)/applets/desk-guide

bin_PROGRAMS = \
	panel				\
	gnome-panel-properties-capplet	\
	gnome-panel-add-launcher	\
	gnome-panel-screenshot


noinst_PROGRAMS = bad-applet

libpanel_appletincludedir = $(includedir)
libpanel_statusincludedir = $(includedir)

lib_LTLIBRARIES = libpanel_applet.la libpanel_status.la

CORBA_SRCLIST = \
	gnome-panel-stubs.c	\
	gnome-panel-skels.c	\
	gnome-panel-common.c	\
	gnome-panel.h


# try to make these get cleaned properly
CLEANFILES =  $(CORBA_SRCLIST) my_gnome_panel_idl

libpanel_applet_la_SOURCES = \
	applet-widget.c \
	$(CORBA_SRCLIST)


libpanel_appletinclude_HEADERS = \
	applet-widget.h		\
	gnome-panel.h


libpanel_applet_la_LDFLAGS = -version-info 0:1:0 -rpath $(libdir)
libpanel_applet_la_LIBADD = $(ORB_LIBS) -lm $(DL_LIB)

libpanel_status_la_SOURCES = \
	status-docklet.c \
	$(CORBA_SRCLIST)


libpanel_statusinclude_HEADERS = \
	status-docklet.h


libpanel_status_la_LDFLAGS = -version-info 0:0:0 -rpath $(libdir)
libpanel_status_la_LIBADD = $(ORB_LIBS) -lm $(DL_LIB)

bad_applet_SOURCES = bad-applet.c

bad_applet_LDADD = \
	libpanel_applet.la	\
	$(GNOME_LIBDIR) 	\
	$(GNORBA_LIBS)		\
	$(INTLLIBS)


GWMH_SRCLIST = \
	gwmh.c		\
	gwmh.h		\
	gstc.c		\
	gstc.h


BUILT_SOURCES = $(CORBA_SRCLIST) $(GWMH_SRCLIST)

panel_SOURCES = \
	$(GWMH_SRCLIST)		\
	panel-include.h		\
	panel-types.h		\
	main.c			\
	main.h			\
	applet.c		\
	applet.h         	\
	panel.c			\
	panel.h         	\
	session.c		\
	session.h		\
	panel_config.c  	\
	panel_config.h		\
	panel_config_global.h  	\
	distribution.c		\
	distribution.h		\
	menu.c  		\
	menu.h  		\
	menu-fentry.c  		\
	menu-fentry.h  		\
	menu-rh.c  		\
	menu-rh.h  		\
	menu-properties.c	\
	menu-properties.h	\
	menu-util.c		\
	menu-util.h		\
	launcher.c		\
	launcher.h		\
	logout.c		\
	logout.h		\
	extern.c  		\
	extern.h  		\
	status.c  		\
	status.h  		\
	swallow.c  		\
	swallow.h  		\
	drawer.c  		\
	drawer.h  		\
	panel-widget.c  	\
	panel-widget.h		\
	basep-widget.c  	\
	basep-widget.h		\
	border-widget.c		\
	border-widget.h		\
	edge-widget.c		\
	edge-widget.h		\
	aligned-widget.c	\
	aligned-widget.h	\
	sliding-widget.c	\
	sliding-widget.h	\
	floating-widget.c	\
	floating-widget.h	\
	drawer-widget.c		\
	drawer-widget.h		\
	button-widget.c  	\
	button-widget.h		\
	panel-util.c		\
	panel-util.h		\
	tearoffitem.c		\
	tearoffitem.h		\
	rgb-stuff.h		\
	rgb-stuff.c		\
	global-keys.c		\
	global-keys.h		\
	gnome-run.c		\
	gnome-run.h		\
	xstuff.c		\
	xstuff.h		\
	foobar-widget.h		\
	foobar-widget.c		\
	tasklist_icon.c		\
	tasklist_icon.h		\
	title-item.h		\
	title-item.c		\
	title-item-private.h	\
	scroll-menu.h		\
	scroll-menu.c		\
	icon-entry-hack.c	\
	icon-entry-hack.h	\
	multiscreen-stuff.c	\
	multiscreen-stuff.h	\
	conditional.c		\
	conditional.h


man_MANS = panel.1			\
	gnome-panel-add-launcher.1	\
	gnome-panel-properties-capplet.1


panel_LDADD = \
	libpanel_applet.la	\
	$(GNOME_LIBDIR)		\
	$(GNORBA_LIBS)		\
	$(ORB_LIBS)		\
	$(GNOMEUI_LIBS)		\
	$(INTLLIBS)		\
	$(PIXBUF_LIBS)		\
	$(XINERAMA_LIBS)


panel_LDFLAGS = -export-dynamic

gnome_panel_properties_capplet_SOURCES = \
	gnome-panel-properties.c	\
	panel-util.c			\
	icon-entry-hack.c		\
	conditional.c			\
	$(CORBA_SRCLIST)


gnome_panel_properties_capplet_LDADD = \
	$(GNOME_LIBDIR)		\
	$(GNOME_CAPPLET_LIBS)	\
	$(INTLLIBS)		\
	$(PIXBUF_LIBS)


gnome_panel_add_launcher_SOURCES = \
	gnome-panel-add-launcher.c	\
	$(CORBA_SRCLIST)


gnome_panel_screenshot_SOURCES = \
	gnome-panel-screenshot.c


gnome_panel_add_launcher_LDADD = \
	$(GNOME_LIBDIR)		\
	$(GNOMEUI_LIBS)		\
	$(GNORBA_LIBS)		\
	$(ORB_LIBS)		\
	$(INTLLIBS)		\
	$(PIXBUF_LIBS)


gnome_panel_screenshot_LDADD = \
	$(GNOME_LIBDIR)		\
	$(GNOMEUI_LIBS)		\
	$(GLADE_LIBS)		\
	$(GNOME_PRINT_LIBS)	\
	$(INTLLIBS)		\
	$(PNG_LIBS)		\
	$(PIXBUF_LIBS)


MAINTAINERCLEANFILES = $(CORBA_SRCLIST)

EXTRA_DIST = \
	appletsConf.sh.in		\
	dockletsConf.sh.in		\
	panel.gnorba			\
	panel.soundlist.in		\
	APPLET_WRITING			\
	panel.hints			\
	gnome-panel-properties.desktop.in	\
	nothing.cP			\
	title-item.gob			\
	gnome-panel-screenshot.glade	\
	gnome-panel-screenshot.glade.h	\
	$(man_MANS)


confexecdir = $(libdir)
confexec_DATA = appletsConf.sh dockletsConf.sh

panelgnorbadir = $(sysconfdir)/CORBA/servers
panelgnorba_DATA = panel.gnorba

soundlistdir = $(sysconfdir)/sound/events
soundlist_in_files = panel.soundlist.in
soundlist_DATA = $(soundlist_in_files:.soundlist.in=.soundlist)

gladedir = $(datadir)/gnome/panel
glade_DATA = gnome-panel-screenshot.glade

hintsdir = $(datadir)/gnome/hints
hints_DATA = panel.hints

sysdir = $(datadir)/control-center/Desktop/
sys_in_files = gnome-panel-properties.desktop.in
sys_DATA = $(sys_in_files:.desktop.in=.desktop)

deskdir = $(datadir)/gnome/apps/Settings/Desktop/
desk_in_files = gnome-panel-properties.desktop.in
desk_DATA = $(desk_in_files:.desktop.in=.desktop)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
LTLIBRARIES =  $(lib_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
LIBS = @LIBS@
libpanel_applet_la_DEPENDENCIES = 
libpanel_applet_la_OBJECTS =  applet-widget.lo gnome-panel-stubs.lo \
gnome-panel-skels.lo gnome-panel-common.lo
libpanel_status_la_DEPENDENCIES = 
libpanel_status_la_OBJECTS =  status-docklet.lo gnome-panel-stubs.lo \
gnome-panel-skels.lo gnome-panel-common.lo
bin_PROGRAMS =  panel$(EXEEXT) gnome-panel-properties-capplet$(EXEEXT) \
gnome-panel-add-launcher$(EXEEXT) gnome-panel-screenshot$(EXEEXT)
noinst_PROGRAMS =  bad-applet$(EXEEXT)
PROGRAMS =  $(bin_PROGRAMS) $(noinst_PROGRAMS)

panel_OBJECTS =  gwmh.$(OBJEXT) gstc.$(OBJEXT) main.$(OBJEXT) \
applet.$(OBJEXT) panel.$(OBJEXT) session.$(OBJEXT) \
panel_config.$(OBJEXT) distribution.$(OBJEXT) menu.$(OBJEXT) \
menu-fentry.$(OBJEXT) menu-rh.$(OBJEXT) menu-properties.$(OBJEXT) \
menu-util.$(OBJEXT) launcher.$(OBJEXT) logout.$(OBJEXT) \
extern.$(OBJEXT) status.$(OBJEXT) swallow.$(OBJEXT) drawer.$(OBJEXT) \
panel-widget.$(OBJEXT) basep-widget.$(OBJEXT) border-widget.$(OBJEXT) \
edge-widget.$(OBJEXT) aligned-widget.$(OBJEXT) sliding-widget.$(OBJEXT) \
floating-widget.$(OBJEXT) drawer-widget.$(OBJEXT) \
button-widget.$(OBJEXT) panel-util.$(OBJEXT) tearoffitem.$(OBJEXT) \
rgb-stuff.$(OBJEXT) global-keys.$(OBJEXT) gnome-run.$(OBJEXT) \
xstuff.$(OBJEXT) foobar-widget.$(OBJEXT) tasklist_icon.$(OBJEXT) \
title-item.$(OBJEXT) scroll-menu.$(OBJEXT) icon-entry-hack.$(OBJEXT) \
multiscreen-stuff.$(OBJEXT) conditional.$(OBJEXT)
panel_DEPENDENCIES =  libpanel_applet.la
gnome_panel_properties_capplet_OBJECTS =  \
gnome-panel-properties.$(OBJEXT) panel-util.$(OBJEXT) \
icon-entry-hack.$(OBJEXT) conditional.$(OBJEXT) \
gnome-panel-stubs.$(OBJEXT) gnome-panel-skels.$(OBJEXT) \
gnome-panel-common.$(OBJEXT)
gnome_panel_properties_capplet_DEPENDENCIES = 
gnome_panel_properties_capplet_LDFLAGS = 
gnome_panel_add_launcher_OBJECTS =  gnome-panel-add-launcher.$(OBJEXT) \
gnome-panel-stubs.$(OBJEXT) gnome-panel-skels.$(OBJEXT) \
gnome-panel-common.$(OBJEXT)
gnome_panel_add_launcher_DEPENDENCIES = 
gnome_panel_add_launcher_LDFLAGS = 
gnome_panel_screenshot_OBJECTS =  gnome-panel-screenshot.$(OBJEXT)
gnome_panel_screenshot_DEPENDENCIES = 
gnome_panel_screenshot_LDFLAGS = 
bad_applet_OBJECTS =  bad-applet.$(OBJEXT)
bad_applet_DEPENDENCIES =  libpanel_applet.la
bad_applet_LDFLAGS = 
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
man1dir = $(mandir)/man1
MANS = $(man_MANS)

NROFF = nroff
DATA =  $(confexec_DATA) $(desk_DATA) $(glade_DATA) $(hints_DATA) \
$(panelgnorba_DATA) $(soundlist_DATA) $(sys_DATA)

HEADERS =  $(libpanel_appletinclude_HEADERS) \
$(libpanel_statusinclude_HEADERS)

DIST_COMMON =  AUTHORS ChangeLog Makefile.am Makefile.in TODO


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(libpanel_applet_la_SOURCES) $(libpanel_status_la_SOURCES) $(panel_SOURCES) $(gnome_panel_properties_capplet_SOURCES) $(gnome_panel_add_launcher_SOURCES) $(gnome_panel_screenshot_SOURCES) $(bad_applet_SOURCES)
OBJECTS = $(libpanel_applet_la_OBJECTS) $(libpanel_status_la_OBJECTS) $(panel_OBJECTS) $(gnome_panel_properties_capplet_OBJECTS) $(gnome_panel_add_launcher_OBJECTS) $(gnome_panel_screenshot_OBJECTS) $(bad_applet_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps panel/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libpanel_applet.la: $(libpanel_applet_la_OBJECTS) $(libpanel_applet_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libpanel_applet_la_LDFLAGS) $(libpanel_applet_la_OBJECTS) $(libpanel_applet_la_LIBADD) $(LIBS)

libpanel_status.la: $(libpanel_status_la_OBJECTS) $(libpanel_status_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libpanel_status_la_LDFLAGS) $(libpanel_status_la_OBJECTS) $(libpanel_status_la_LIBADD) $(LIBS)

mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

mostlyclean-noinstPROGRAMS:

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

distclean-noinstPROGRAMS:

maintainer-clean-noinstPROGRAMS:

panel$(EXEEXT): $(panel_OBJECTS) $(panel_DEPENDENCIES)
	@rm -f panel$(EXEEXT)
	$(LINK) $(panel_LDFLAGS) $(panel_OBJECTS) $(panel_LDADD) $(LIBS)

gnome-panel-properties-capplet$(EXEEXT): $(gnome_panel_properties_capplet_OBJECTS) $(gnome_panel_properties_capplet_DEPENDENCIES)
	@rm -f gnome-panel-properties-capplet$(EXEEXT)
	$(LINK) $(gnome_panel_properties_capplet_LDFLAGS) $(gnome_panel_properties_capplet_OBJECTS) $(gnome_panel_properties_capplet_LDADD) $(LIBS)

gnome-panel-add-launcher$(EXEEXT): $(gnome_panel_add_launcher_OBJECTS) $(gnome_panel_add_launcher_DEPENDENCIES)
	@rm -f gnome-panel-add-launcher$(EXEEXT)
	$(LINK) $(gnome_panel_add_launcher_LDFLAGS) $(gnome_panel_add_launcher_OBJECTS) $(gnome_panel_add_launcher_LDADD) $(LIBS)

gnome-panel-screenshot$(EXEEXT): $(gnome_panel_screenshot_OBJECTS) $(gnome_panel_screenshot_DEPENDENCIES)
	@rm -f gnome-panel-screenshot$(EXEEXT)
	$(LINK) $(gnome_panel_screenshot_LDFLAGS) $(gnome_panel_screenshot_OBJECTS) $(gnome_panel_screenshot_LDADD) $(LIBS)

bad-applet$(EXEEXT): $(bad_applet_OBJECTS) $(bad_applet_DEPENDENCIES)
	@rm -f bad-applet$(EXEEXT)
	$(LINK) $(bad_applet_LDFLAGS) $(bad_applet_OBJECTS) $(bad_applet_LDADD) $(LIBS)

install-man1:
	$(mkinstalldirs) $(DESTDIR)$(man1dir)
	@list='$(man1_MANS)'; \
	l2='$(man_MANS)'; for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  if test -f $(srcdir)/$$i; then file=$(srcdir)/$$i; \
	  else file=$$i; fi; \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " $(INSTALL_DATA) $$file $(DESTDIR)$(man1dir)/$$inst"; \
	  $(INSTALL_DATA) $$file $(DESTDIR)$(man1dir)/$$inst; \
	done

uninstall-man1:
	@list='$(man1_MANS)'; \
	l2='$(man_MANS)'; for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f $(DESTDIR)$(man1dir)/$$inst"; \
	  rm -f $(DESTDIR)$(man1dir)/$$inst; \
	done
install-man: $(MANS)
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-man1
uninstall-man:
	@$(NORMAL_UNINSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-man1

install-confexecDATA: $(confexec_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(confexecdir)
	@list='$(confexec_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(confexecdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(confexecdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(confexecdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(confexecdir)/$$p; \
	  fi; fi; \
	done

uninstall-confexecDATA:
	@$(NORMAL_UNINSTALL)
	list='$(confexec_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(confexecdir)/$$p; \
	done

install-deskDATA: $(desk_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(deskdir)
	@list='$(desk_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(deskdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(deskdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(deskdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(deskdir)/$$p; \
	  fi; fi; \
	done

uninstall-deskDATA:
	@$(NORMAL_UNINSTALL)
	list='$(desk_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(deskdir)/$$p; \
	done

install-gladeDATA: $(glade_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(gladedir)
	@list='$(glade_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(gladedir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(gladedir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(gladedir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(gladedir)/$$p; \
	  fi; fi; \
	done

uninstall-gladeDATA:
	@$(NORMAL_UNINSTALL)
	list='$(glade_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(gladedir)/$$p; \
	done

install-hintsDATA: $(hints_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(hintsdir)
	@list='$(hints_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(hintsdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(hintsdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(hintsdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(hintsdir)/$$p; \
	  fi; fi; \
	done

uninstall-hintsDATA:
	@$(NORMAL_UNINSTALL)
	list='$(hints_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(hintsdir)/$$p; \
	done

install-panelgnorbaDATA: $(panelgnorba_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(panelgnorbadir)
	@list='$(panelgnorba_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(panelgnorbadir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(panelgnorbadir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(panelgnorbadir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(panelgnorbadir)/$$p; \
	  fi; fi; \
	done

uninstall-panelgnorbaDATA:
	@$(NORMAL_UNINSTALL)
	list='$(panelgnorba_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(panelgnorbadir)/$$p; \
	done

install-soundlistDATA: $(soundlist_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(soundlistdir)
	@list='$(soundlist_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(soundlistdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(soundlistdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(soundlistdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(soundlistdir)/$$p; \
	  fi; fi; \
	done

uninstall-soundlistDATA:
	@$(NORMAL_UNINSTALL)
	list='$(soundlist_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(soundlistdir)/$$p; \
	done

install-sysDATA: $(sys_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(sysdir)
	@list='$(sys_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(sysdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(sysdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(sysdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(sysdir)/$$p; \
	  fi; fi; \
	done

uninstall-sysDATA:
	@$(NORMAL_UNINSTALL)
	list='$(sys_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(sysdir)/$$p; \
	done

install-libpanel_appletincludeHEADERS: $(libpanel_appletinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libpanel_appletincludedir)
	@list='$(libpanel_appletinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libpanel_appletincludedir)/$$p"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libpanel_appletincludedir)/$$p; \
	done

uninstall-libpanel_appletincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	list='$(libpanel_appletinclude_HEADERS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(libpanel_appletincludedir)/$$p; \
	done

install-libpanel_statusincludeHEADERS: $(libpanel_statusinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libpanel_statusincludedir)
	@list='$(libpanel_statusinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libpanel_statusincludedir)/$$p"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libpanel_statusincludedir)/$$p; \
	done

uninstall-libpanel_statusincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	list='$(libpanel_statusinclude_HEADERS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(libpanel_statusincludedir)/$$p; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.

@SET_MAKE@

all-recursive install-data-recursive install-exec-recursive \
installdirs-recursive install-recursive uninstall-recursive  \
check-recursive installcheck-recursive info-recursive dvi-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	rev=''; list='$(SUBDIRS)'; for subdir in $$list; do \
	  rev="$$subdir $$rev"; \
	  test "$$subdir" != "." || dot_seen=yes; \
	done; \
	test "$$dot_seen" = "no" && rev=". $$rev"; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
   if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
   fi; \
	done; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = panel

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	for subdir in $(SUBDIRS); do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    chmod 777 $(distdir)/$$subdir; \
	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(top_distdir) distdir=../$(distdir)/$$subdir distdir) \
	      || exit 1; \
	  fi; \
	done
aligned-widget.o: aligned-widget.c ../config.h aligned-widget.h \
	border-widget.h basep-widget.h panel-widget.h button-widget.h \
	panel-types.h gnome-panel.h panel_config_global.h \
	foobar-widget.h gwmh.h multiscreen-stuff.h
applet-widget.lo applet-widget.o : applet-widget.c ../config.h \
	applet-widget.h gnome-panel.h
applet.o: applet.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h scroll-menu.h
bad-applet.o: bad-applet.c applet-widget.h gnome-panel.h
basep-widget.o: basep-widget.c ../config.h panel-widget.h \
	button-widget.h panel-types.h gnome-panel.h basep-widget.h \
	panel-util.h panel_config_global.h foobar-widget.h gwmh.h \
	drawer-widget.h drawer.h panel.h applet.h panel_config.h \
	border-widget.h aligned-widget.h sliding-widget.h edge-widget.h \
	xstuff.h multiscreen-stuff.h
border-widget.o: border-widget.c ../config.h border-widget.h \
	basep-widget.h panel-widget.h button-widget.h panel-types.h \
	gnome-panel.h panel_config_global.h multiscreen-stuff.h
button-widget.o: button-widget.c ../config.h button-widget.h \
	panel-types.h gnome-panel.h panel-widget.h basep-widget.h \
	panel-util.h panel_config_global.h rgb-stuff.h
conditional.o: conditional.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h conditional.h
distribution.o: distribution.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h
drawer-widget.o: drawer-widget.c ../config.h drawer-widget.h \
	basep-widget.h panel-widget.h button-widget.h panel-types.h \
	gnome-panel.h drawer.h panel.h applet.h panel_config.h \
	border-widget.h aligned-widget.h sliding-widget.h panel-util.h \
	floating-widget.h panel_config_global.h multiscreen-stuff.h
drawer.o: drawer.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h icon-entry-hack.h \
	xstuff.h
edge-widget.o: edge-widget.c ../config.h edge-widget.h border-widget.h \
	basep-widget.h panel-widget.h button-widget.h panel-types.h \
	gnome-panel.h panel_config_global.h foobar-widget.h gwmh.h \
	multiscreen-stuff.h
extern.o: extern.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h gnome-run.h
floating-widget.o: floating-widget.c ../config.h floating-widget.h \
	basep-widget.h panel-widget.h button-widget.h panel-types.h \
	gnome-panel.h border-widget.h panel_config_global.h \
	foobar-widget.h gwmh.h panel-util.h multiscreen-stuff.h
foobar-widget.o: foobar-widget.c ../config.h foobar-widget.h \
	panel-types.h gnome-panel.h gwmh.h menu.h panel-widget.h \
	button-widget.h applet.h menu-util.h session.h xstuff.h \
	basep-widget.h panel_config_global.h panel-util.h \
	drawer-widget.h drawer.h panel.h panel_config.h border-widget.h \
	aligned-widget.h sliding-widget.h gnome-run.h scroll-menu.h \
	tasklist_icon.h multiscreen-stuff.h
global-keys.o: global-keys.c ../config.h global-keys.h applet.h \
	panel-widget.h button-widget.h panel-types.h gnome-panel.h \
	panel-include.h basep-widget.h edge-widget.h border-widget.h \
	aligned-widget.h sliding-widget.h floating-widget.h \
	drawer-widget.h drawer.h panel.h panel_config.h panel-util.h \
	foobar-widget.h gwmh.h session.h main.h panel_config_global.h \
	distribution.h menu.h menu-fentry.h menu-rh.h menu-properties.h \
	menu-util.h swallow.h launcher.h logout.h extern.h status.h \
	gnome-run.h
gnome-panel-add-launcher.o: gnome-panel-add-launcher.c ../config.h \
	gnome-panel.h
gnome-panel-common.lo gnome-panel-common.o : gnome-panel-common.c \
	gnome-panel.h
gnome-panel-properties.o: gnome-panel-properties.c ../config.h \
	global-keys.h panel-types.h gnome-panel.h panel_config_global.h \
	panel-widget.h button-widget.h panel-util.h session.h \
	icon-entry-hack.h conditional.h menu.h applet.h nothing.cP
gnome-panel-screenshot.o: gnome-panel-screenshot.c ../config.h
gnome-panel-skels.lo gnome-panel-skels.o : gnome-panel-skels.c \
	gnome-panel.h
gnome-panel-stubs.lo gnome-panel-stubs.o : gnome-panel-stubs.c \
	gnome-panel.h
gnome-run.o: gnome-run.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h multiscreen-stuff.h \
	gnome-run.h
gstc.o: gstc.c gstc.h
gwmh.o: gwmh.c gwmh.h gstc.h
icon-entry-hack.o: icon-entry-hack.c ../config.h icon-entry-hack.h
launcher.o: launcher.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h icon-entry-hack.h
logout.o: logout.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h
main.o: main.c ../config.h panel-include.h panel-types.h gnome-panel.h \
	panel-widget.h button-widget.h basep-widget.h edge-widget.h \
	border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h xstuff.h \
	multiscreen-stuff.h conditional.h
menu-fentry.o: menu-fentry.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h
menu-properties.o: menu-properties.c ../config.h panel-include.h \
	panel-types.h gnome-panel.h panel-widget.h button-widget.h \
	basep-widget.h edge-widget.h border-widget.h aligned-widget.h \
	sliding-widget.h floating-widget.h drawer-widget.h drawer.h \
	panel.h applet.h panel_config.h panel-util.h foobar-widget.h \
	gwmh.h session.h main.h panel_config_global.h distribution.h \
	menu.h menu-fentry.h menu-rh.h menu-properties.h menu-util.h \
	swallow.h launcher.h logout.h extern.h status.h \
	icon-entry-hack.h
menu-rh.o: menu-rh.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h
menu-util.o: menu-util.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h multiscreen-stuff.h
menu.o: menu.c ../config.h panel-include.h panel-types.h gnome-panel.h \
	panel-widget.h button-widget.h basep-widget.h edge-widget.h \
	border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h tearoffitem.h gnome-run.h \
	title-item.h scroll-menu.h icon-entry-hack.h \
	multiscreen-stuff.h conditional.h
multiscreen-stuff.o: multiscreen-stuff.c ../config.h panel-include.h \
	panel-types.h gnome-panel.h panel-widget.h button-widget.h \
	basep-widget.h edge-widget.h border-widget.h aligned-widget.h \
	sliding-widget.h floating-widget.h drawer-widget.h drawer.h \
	panel.h applet.h panel_config.h panel-util.h foobar-widget.h \
	gwmh.h session.h main.h panel_config_global.h distribution.h \
	menu.h menu-fentry.h menu-rh.h menu-properties.h menu-util.h \
	swallow.h launcher.h logout.h extern.h status.h \
	multiscreen-stuff.h
panel-util.o: panel-util.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h icon-entry-hack.h
panel-widget.o: panel-widget.c ../config.h panel-widget.h \
	button-widget.h panel-types.h gnome-panel.h panel-util.h \
	rgb-stuff.h
panel.o: panel.c ../config.h panel-include.h panel-types.h gnome-panel.h \
	panel-widget.h button-widget.h basep-widget.h edge-widget.h \
	border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h gnome-run.h
panel_config.o: panel_config.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h rgb-stuff.h \
	multiscreen-stuff.h nothing.cP
rgb-stuff.o: rgb-stuff.c ../config.h rgb-stuff.h
scroll-menu.o: scroll-menu.c scroll-menu.h
session.o: session.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h gnome-run.h global-keys.h \
	xstuff.h multiscreen-stuff.h conditional.h
sliding-widget.o: sliding-widget.c ../config.h sliding-widget.h \
	border-widget.h basep-widget.h panel-widget.h button-widget.h \
	panel-types.h gnome-panel.h panel_config_global.h \
	foobar-widget.h gwmh.h panel-util.h multiscreen-stuff.h
status-docklet.lo status-docklet.o : status-docklet.c ../config.h \
	status-docklet.h gnome-panel.h
status.o: status.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h xstuff.h
swallow.o: swallow.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h xstuff.h
tasklist_icon.o: tasklist_icon.c ../config.h gwmh.h xstuff.h \
	tasklist_icon.h
tearoffitem.o: tearoffitem.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h tearoffitem.h
title-item.o: title-item.c title-item.h title-item-private.h
xstuff.o: xstuff.c ../config.h panel-include.h panel-types.h \
	gnome-panel.h panel-widget.h button-widget.h basep-widget.h \
	edge-widget.h border-widget.h aligned-widget.h sliding-widget.h \
	floating-widget.h drawer-widget.h drawer.h panel.h applet.h \
	panel_config.h panel-util.h foobar-widget.h gwmh.h session.h \
	main.h panel_config_global.h distribution.h menu.h \
	menu-fentry.h menu-rh.h menu-properties.h menu-util.h swallow.h \
	launcher.h logout.h extern.h status.h global-keys.h xstuff.h \
	multiscreen-stuff.h

info-am:
info: info-recursive
dvi-am:
dvi: dvi-recursive
check-am: all-am
check: check-recursive
installcheck-am:
installcheck: installcheck-recursive
install-exec-am: install-libLTLIBRARIES install-binPROGRAMS \
		install-confexecDATA
install-exec: install-exec-recursive

install-data-am: install-man install-deskDATA install-gladeDATA \
		install-hintsDATA install-panelgnorbaDATA \
		install-soundlistDATA install-sysDATA \
		install-libpanel_appletincludeHEADERS \
		install-libpanel_statusincludeHEADERS
install-data: install-data-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-recursive
uninstall-am: uninstall-libLTLIBRARIES uninstall-binPROGRAMS \
		uninstall-man uninstall-confexecDATA uninstall-deskDATA \
		uninstall-gladeDATA uninstall-hintsDATA \
		uninstall-panelgnorbaDATA uninstall-soundlistDATA \
		uninstall-sysDATA \
		uninstall-libpanel_appletincludeHEADERS \
		uninstall-libpanel_statusincludeHEADERS
uninstall: uninstall-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(MANS) $(DATA) $(HEADERS)
all-redirect: all-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(bindir) \
		$(DESTDIR)$(mandir)/man1 $(DESTDIR)$(confexecdir) \
		$(DESTDIR)$(deskdir) $(DESTDIR)$(gladedir) \
		$(DESTDIR)$(hintsdir) $(DESTDIR)$(panelgnorbadir) \
		$(DESTDIR)$(soundlistdir) $(DESTDIR)$(sysdir) \
		$(DESTDIR)$(libpanel_appletincludedir) \
		$(DESTDIR)$(libpanel_statusincludedir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "$(BUILT_SOURCES)$(MAINTAINERCLEANFILES)" || rm -f $(BUILT_SOURCES) $(MAINTAINERCLEANFILES)
mostlyclean-am:  mostlyclean-libLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-binPROGRAMS \
		mostlyclean-noinstPROGRAMS mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-recursive

clean-am:  clean-libLTLIBRARIES clean-compile clean-libtool \
		clean-binPROGRAMS clean-noinstPROGRAMS clean-tags \
		clean-generic mostlyclean-am

clean: clean-recursive

distclean-am:  distclean-libLTLIBRARIES distclean-compile \
		distclean-libtool distclean-binPROGRAMS \
		distclean-noinstPROGRAMS distclean-tags \
		distclean-generic clean-am
	-rm -f libtool

distclean: distclean-recursive

maintainer-clean-am:  maintainer-clean-libLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-binPROGRAMS \
		maintainer-clean-noinstPROGRAMS maintainer-clean-tags \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-recursive

.PHONY: mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile \
mostlyclean-libtool distclean-libtool clean-libtool \
maintainer-clean-libtool mostlyclean-binPROGRAMS distclean-binPROGRAMS \
clean-binPROGRAMS maintainer-clean-binPROGRAMS uninstall-binPROGRAMS \
install-binPROGRAMS mostlyclean-noinstPROGRAMS distclean-noinstPROGRAMS \
clean-noinstPROGRAMS maintainer-clean-noinstPROGRAMS install-man1 \
uninstall-man1 install-man uninstall-man uninstall-confexecDATA \
install-confexecDATA uninstall-deskDATA install-deskDATA \
uninstall-gladeDATA install-gladeDATA uninstall-hintsDATA \
install-hintsDATA uninstall-panelgnorbaDATA install-panelgnorbaDATA \
uninstall-soundlistDATA install-soundlistDATA uninstall-sysDATA \
install-sysDATA uninstall-libpanel_appletincludeHEADERS \
install-libpanel_appletincludeHEADERS \
uninstall-libpanel_statusincludeHEADERS \
install-libpanel_statusincludeHEADERS install-data-recursive \
uninstall-data-recursive install-exec-recursive \
uninstall-exec-recursive installdirs-recursive uninstalldirs-recursive \
all-recursive check-recursive installcheck-recursive info-recursive \
dvi-recursive mostlyclean-recursive distclean-recursive clean-recursive \
maintainer-clean-recursive tags tags-recursive mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs-am \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


$(CORBA_SRCLIST): my_gnome_panel_idl

my_gnome_panel_idl: $(top_srcdir)/idl/gnome-panel.idl $(ORBIT_IDL)
	if $(ORBIT_IDL) `@GNOME_CONFIG@ --cflags idl` $< ; then touch my_gnome_panel_idl; else /bin/false; fi

# We need explicit dependencies here for people building out
# of the tarballs.

extern.c: gnome-panel.h

$(GWMH_SRCLIST):
	for file in $(GWMH_SRCLIST); do \
		echo $$file ; \
		ln -sf $(gwmh_dir)/$$file . ; \
	done

#
# Create the appletsConf.sh file from the .sh.in file
#
appletsConf.sh: appletsConf.sh.in Makefile
	sed -e 's?\@GNOME_LIBDIR\@?$(GNOME_LIBDIR)?g' \
	    -e 's?\@GNOME_INCLUDEDIR\@?$(GNOME_INCLUDEDIR)?g' \
	    -e 's?\@GNOMEGNORBA_LIBS\@?$(GNOMEGNORBA_LIBS)?g' \
	    -e 's?\@VERSION\@?$(VERSION)?g' \
	    < $(srcdir)/appletsConf.sh.in > appletsConf.tmp \
	  && mv appletsConf.tmp appletsConf.sh

#
# Create the dockletsConf.sh file from the .sh.in file
#
dockletsConf.sh: dockletsConf.sh.in Makefile
	sed -e 's?\@GNOME_LIBDIR\@?$(GNOME_LIBDIR)?g' \
	    -e 's?\@GNOME_INCLUDEDIR\@?$(GNOME_INCLUDEDIR)?g' \
	    -e 's?\@GNOMEGNORBA_LIBS\@?$(GNOMEGNORBA_LIBS)?g' \
	    -e 's?\@VERSION\@?$(VERSION)?g' \
	    < $(srcdir)/dockletsConf.sh.in > dockletsConf.tmp \
	  && mv dockletsConf.tmp dockletsConf.sh
@XML_I18N_MERGE_SOUNDLIST_RULE@
@XML_I18N_MERGE_DESKTOP_RULE@
@XML_I18N_MERGE_DESKTOP_RULE@

$(srcdir)/panel-util.c: $(CORBA_SRCLIST)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
