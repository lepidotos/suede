2000-11-12  Ariel Rios  <ariel@arcavia.com>

	* translate.scm (guile-gtk-grammar-object): Add call to guile-gtk-func-final-format

2000-11-12  Ariel Rios  <ariel@arcavia.com>

	* translate.scm (translate-all): Add a nice for-each for applying translate.
	General clean up in the script was done.

2000-11-12  Ariel Rios  <ariel@arcavia.com>

	* translate.scm (regexp-enum): Enum regular expression covers case 1 only. 
	(translate-all): Also translates enums now. =)

2000-11-12  Ariel Rios  <ariel@arcavia.com>

	* translate.scm (translate): Receive the output file as a parameter
	so we do not delete the content of the already written defs file.
	(translate-all): Open the output file here and close it after finishing.
	We write now here the emacs ";; -*- scheme -*-\n\n" command here and only
	once in the defs file.

2000-11-11  Ariel Rios  <ariel@arcavia.com>

	* translate.scm (translate-all): Also translate objects now.
	(regexp-obj): Object regular expression.

2000-11-11  Ariel Rios  <ariel@arcavia.com>

	* translate.scm (translate): Add an argument for the path where the files are located...
	(translate-all): Ditto
	(main): Ditto.

2000-11-10  Ariel Rios  <ariel@arcavia.com>

	* translate.scm (main): Main function to translate all the header files
	from a given directory.
	* support.scm (get-header-files): Get all the C header files from a
	given directory.
	(c-header?): Do I need to say more? =)

2000-11-09  Ariel Rios  <ariel@arcavia.com>

	* translate.scm (translate): Add ;; -*- scheme -*- to the 
        top of the defs files.

2000-11-08  Ariel Rios  <ariel@arcavia.com>

	* translate.scm (regexp-func): Correct regular expression.
	(translate): Correct the for-each call to write-char.

2000-11-08  Ariel Rios  <ariel@arcavia.com>

	* case.scm (do-read): Reads char from an input port.
	(read-string): Calls do-read and opens the input port.
	* translate.scm (translate): Use read-string function.
	We need to check the regular expression to ensure that
	only funcs are passed!
	
2000-11-08  Ariel Rios  <ariel@arcavia.com>

	* translate.scm (regexp-func): New function that adds the regexp to match functions
	(regexp-do-list): Generates a list of matching regular expressions
	(translate): Writes the file.
	(translate-all): This function will call translate for object, enum, func, etc.

2000-11-07  Ariel Rios  <ariel@arcavia.com>

	* translate.scm (guile-gtk-grammar-func): Be more clever with format output.
	(guile-gtk-grammar-val-str): Ditto
	(guile-gtk-grammar-val-types-only-one-space): Trim unecessary space, not completely
	clever but as best as I can right now.
	(guile-gtk-grammar-val-types): Use guile-gtk-grammar-val-types-only-one-space.	
        (guile-gtk-grammar-val-func-name): Ditto.
	(guile-gtk-grammar-func-final-format): Add last touches to the fial output of
	function format. Still we need to pass these one time into emacs to
	achieve indentation...
	 

2000-10-29 Ariel Rios  <ariel@arcavia.com>

	* translate.scm (guile-gtk-grammar-split-at-semicolon): Added a lambda expression
	that checks whether the character is a newline char or not. We need to keep things
	in proper format.

2000-10-29  Ariel Rios  <ariel@arcavia.com>

	* translate.scm (guile-gtk-grammar-split-at-semicolon): Gets the whole
	string and returns at list for each function it finds.
	(define-apply-func): Nice macro that is used to creating the functions
	that return obj, enum or func.
	(object): Function defined with macro
	(enum): Ditto.
	(func): Ditto.

2000-10-29  Ariel Rios <ariel@arcavia.com>

	* translate.scm (guile-gtk-grammar-val-func-name): Remove call to 
	guile-gtk-grammar-val-trim that was generating wrong define-func
	names.
	(guile-gtk-translate): Remove function. Script is now intended to run manually.
	(guile-gtk-translate-lexer): Ditto
	(guile-gtk-translate-single-write): Ditto 
	(guile-gtk-translate-regexp-exec): Ditto
	(guile-gtk-translate-single): Ditto
	(regexp-enum): Removed regexp. 
	(regexp-func): Ditto.
	(regexp-obj): Ditto.

2000-10-29  Ariel Rios  <ariel@arcavia.com>

	* translate.scm (guile-gtk-translate-regexp-exec): New function.

2000-10-20  Ariel Rios  <ariel@arcavia.com>

	* translate.scm (guile-gtk-translate-lexer): Fetches the index of the desired token.
	(guile-gtk-translate-single-write): Writes the translation provided by func.
	Still need to check how to correctly handle the ls parameter.
	(guile-gtk-translate-single): Write a single defs file.
	(regexp-obj): Change the name of the regexp for consistency.

2000-08-07  Ariel Rios  <ariel@arcavia.com>

	* translate.scm (guile-gtk-grammar-object-find-index): New Function that gets the type of the new created object.
	(guile-gtk-grammar-object-type): Now calls the previous and functions.

2000-08-06 Ariel Rios   <ariel@arcavia.com>

	* translate.scm (guile-gtk-grammar-enum-val): Replaced the string function with string-append.
	Enum case seems to work fine.

2000-06-04  Ariel Rios  <ariel@arcavia.com>

	* translate.scm (guile-gtk-grammar-val-param-list): Changed the string function into an string-append
	Necesary due to R5RS changes in CVS guile.
	(guile-gtk-grammar-val-str): Ditto
	(guile-gtk-grammar-object): Ditto.
	(guile-gtk-translate-single): Change the binding of input and output ports.

