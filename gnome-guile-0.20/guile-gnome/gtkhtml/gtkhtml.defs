;; -*- scheme -*-

(import "gtk-1.2.defs")

;;defintion of objects and libraries

;;(define-object GtkHTMLStream)
  
(define-struct GtkHTMLStream
  (copy gtk_html_stream_copy)
  (free gtk_html_stream_destroy))

(define-enum GtkHTMLStreamStatus
  (ok GTK_HTML_STREAM_OK)
  (error GTK_HTML_STREAM_ERROR))

(define-enum GtkHTMLParagraphStyle
  (normal GTK_HTML_PARAGRAPH_STYLE_NORMAL)
  (h1 GTK_HTML_PARAGRAPH_STYLE_H1)
  (h2 GTK_HTML_PARAGRAPH_STYLE_H2)
  (h3 GTK_HTML_PARAGRAPH_STYLE_H3)
  (h4 GTK_HTML_PARAGRAPH_STYLE_H4)
  (h5 GTK_HTML_PARAGRAPH_STYLE_H5)
  (h6 GTK_HTML_PARAGRAPH_STYLE_H6)
  (address GTK_HTML_PARAGRAPH_STYLE_ADDRESS)
  (pre GTK_HTML_PARAGRAPH_STYLE_PRE)
  (itemdotted GTK_HTML_PARAGRAPH_STYLE_ITEMDOTTED)
  (itemroman GTK_HTML_PARAGRAPH_STYLE_ITEMROMAN)
  (itemdigit GTK_HTML_PARAGRAPH_STYLE_ITEMDIGIT))

(define-enum GtkHTMLParagraphAlignment
  (left GTK_HTML_PARAGRAPH_ALIGNMENT_LEFT)
  (right GTK_HTML_PARAGRAPH_ALIGNMENT_RIGHT)
  (center GTK_HTML_PARAGRAPH_ALIGNMENT_CENTER))

(define-object GtkHTML (GtkLayout))

;;gtkhtml-private.h (only functions)

;(define-func gtk_html_stream_ref
;  GtkHTMLStreamHandle
;  ((GtkHTMLStreamHandle handle)))

;(define-func gtk_html_stream_unref
;  none
;  ((GtkHTMLStreamHandle handle)))

;(define-func gtk_html_stream_write
;  none
;  ((GtkHTMLStream handle)
;   (string buffer)
;   (int size)))

;(define-func gtk_html_stream_end
;  none
;  ((GtkHTMLStream handle)
;   (GtkHTMLStreamStatus status)))

(define-func gtk_html_construct
  none
  ((GtkWidget html)))

(define-func gtk_html_new
  GtkWidget
  ())

(define-func gtk_html_new_from_string
  GtkWidget
  ((cstring str)
   (int len)))

;;(define-func gtk_html_set_editor_api 
;;  none
;;  ((GtkHTML html)
;;   (GtkHTMLEditorAPI api)
;;   (gpointer data)))

(define-func gtk_html_set_iframe_parent 
  none
  ((GtkHTML html)
   (GtkWidget parent)))

(define-func gtk_html_enable_debug
  none
  ((GtkHTML html)
   (bool debug)))

(define-func gtk_html_allow_selection
  none
  ((GtkHTML html)
   (bool allow)))

(define-func gtk_html_select_word 
  none
  ((GtkHTML html)))

(define-func gtk_html_select_line
  none
  ((GtkHTML html)))

(define-func gtk_html_request_paste
  int
  ((GtkHTML html)
   (int type)
   (int time)))

(define-func gtk_html_parse
  none
  ((GtkHTML html)))

(define-func gtk_html_begin
  GtkHTMLStream 
  ((GtkHTML html)))

(define-func gtk_html_begin_content
  GtkHTMLStream
  ((GtkHTML html)
   (string content_type)))

(define-func gtk_html_write
  none
  ((GtkHTML html)
   (GtkHTMLStream handle)
   (string buffer)
   (int size)))

(define-func gtk_html_end
  none
  ((GtkHTML html)
   (GtkHTMLStream handle)
   (GtkHTMLStreamStatus status)))

(define-func gtk_html_load_empty
  none
  ((GtkHTML html)))

;;FIXME: cstring
(define-func gtk_html_load_from_string
  none
  ((GtkHTML html)
   (string str)
   (int len)))

;(define-func gtk_html_save
;  bool
;  ((GtkHTML html)
;   (GtkHTMLReceiverFn receiver)
;   (pointer data)))

;;(define-func gtk_html_export 
;;  bool
;;  ((GtkHTML html)
;;   (cstring type)
;;   (GtkHTMLSaveReceiverFn receiver)
;;   (gpointer data)

(define-func gtk_html_set_editable
  none
  ((GtkHTML html)
   (bool editable)))

(define-func gtk_html_get_editable
  bool
  ((GtkHTML html)))

;(define-func gtk_html_print
;  none
;  ((GtkHTML html)
;   (GnomePrintContext print_context)))


(define-func gtk_html_get_title
  cstring
  ((GtkHTML html)))

;;FIXME: cstring
(define-func gtk_html_jump_to_anchor
  bool
  ((GtkHTML html)
   (string anchor)))
  
;;(define-func gtk_html_toggle_font_style 
;;  none
;;  ((GtkHTML html)
;;   (GtkHTMLFontStyle style)))


;;(define-func gtk_html_toggle_font_style 
;;  none
;;  ((GtkHTML html)
;;   (GtkHTMLFontStyle style)))

(define-func gtk_html_get_paragraph_alignment 
  GtkHTMLParagraphAlignment
  ((GtkHTML html)))

(define-func gtk_html_cut 
  none
  ((GtkHTML html)))

(define-func gtk_html_copy 
  none
  ((GtkHTML html)))

(define-func gtk_html_paste 
  none
  ((GtkHTML html)))

(define-func gtk_html_undo 
  none
  ((GtkHTML html)))

(define-func gtk_html_redo 
  none
  ((GtkHTML html)))

(define-func gtk_html_set_default_background_color 
  none
  ((GtkHTML html)
   (GdkColor c)))

;;(define-func gtk_html_get_object_by_id 
;;  gpointer
;;  ((GtkHTML html)
;;   (cstring id)))

(define-func gtk_html_edit_make_cursor_visible 
  bool
  ((GtkHTML html)))

(define-func gtk_html_calc_scrollbars
  none
  ((GtkHTML html)))

(options
 (includes "#include <gtkhtml/gtkhtml.h>
	    #include \"gtkhtml-support.h\"")
 (init-func "gtkhtml_init_glue")
 (libs ""))








