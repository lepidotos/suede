2001-11-07  Darin Adler  <darin@bentspoon.com>

	* configure.in: Update version to 1.0.6.
	* NEWS: Prepare for 1.0.6 release.

	* components/help/Makefile.am: Must distribute the new
	data file.

2001-11-01  Louise Miller  <louise.miller@sun.com>

        * Lots of files in components/help
        Intregation of scrollkeeper indexing capabilities
        into nautilus.

2001-10-31  Darin Adler  <darin@bentspoon.com>

	* README: This isn't HEAD any more.
	
	* libnautilus-private/nautilus-link-desktop-file.c:
	* libnautilus-private/nautilus-link-historical.c:
	Fix libxml include paths.
	
	* libnautilus-private/nautilus-monitor.c:
	(process_fam_notifications): Tweak comment.
	
	* src/nautilus-window-manage-views.c:
	(cancel_viewed_file_changed_callback), (update_for_new_location):
	Monitor the existence of the currently viewed file, so we notice
	when the file is deleted.

2001-10-25  Darin Adler  <darin@bentspoon.com>

	* src/file-manager/fm-directory-view.c: Oops! Left in the 5 second
	hysteresis that I was using for testing. Back to 1 second.

2001-10-25  Darin Adler  <darin@bentspoon.com>

	* libnautilus-private/nautilus-directory.c:
	(call_files_changed_common), (call_files_changed_free_list),
	(call_files_changed_unref_free_list),
	(nautilus_directory_notify_files_changed): Move call to
	nautilus_directory_add_file_to_work_queue into a better
	bottleneck; now it catches all the notify cases, not just changed.
	Also tell it to re-get top-left text and link info too when we get
	a changed notice.
	
	* src/file-manager/fm-directory-view.c: (queue_pending_files):
	Don't use the timeout (and the hysteresis) when queuing files once
	the initial directory load is complete. Doing this was causing
	delays processing changes that came in later, which we don't want.
	
	* src/nautilus-sidebar-title.c: (item_count_ready), (monitor_add),
	(update_all), (nautilus_sidebar_title_set_file): Monitor the
	directory count once we get it the first time. This makes sure
	that changes in the directory count get reflected in the sidebar
	without creating a race with the main view to see who calculates
	it first.

2001-10-25  Alex Larsson  <alexl@redhat.com>

        * src/file-manager/fm-directory-view.h:
	Add emblems_changes method.

        * src/file-manager/fm-directory-view.c:
	(file_changed_callback): Call emblems_changed.
	(fm_directory_view_add_relative_emblems_to_exclude,
	real_get_emblem_names_to_exclude):
	exclude non-writable emblems if directory is not
	writable.
	
	* src/file-manager/fm-icon-view.c:
	* src/file-manager/fm-list-view.c:
	Implement emblem_changes.
	
2001-10-25  Alex Larsson  <alexl@redhat.com>

	* configure.in:
	* libnautilus-private/Makefile.am:
	Check for libiconv. I couldn't test it, but
	Remi@Cohen-Scali.com says it works.
	
2001-10-25  Alex Larsson  <alexl@redhat.com>

	* libnautilus-private/nautilus-directory.c (nautilus_directory_notify_files_changed):
	Call nautilus_directory_add_file_to_work_queue() when file_info is invalidated.
	Otherwise it will not be read again.

2001-10-21  Benedikt Roth  <Benedikt.Roth@gmx.net>

	* libnautilus-private/nautilus-link-desktop-file.c:
	(nautilus_link_desktop_file_get_link_name_from_desktop):
	Use the localized string

=== nautilus 1.0.5 ===

2001-10-19  Darin Adler  <darin@bentspoon.com>

	* NEWS: Add mention of Mozilla 0.9.5.
	* THANKS: Thank Frank.
	* README: Make a little more up to date, but still needs work.

2001-10-18  Darin Adler  <darin@bentspoon.com>

	Fixed a bunch of bugs that were causing directory display to be
	even slower than it ought to be. The hysteresis wasn't working at
	all because of the confusion about when files were ready for
	display. Also changed hysteresis to 1 second and file chunk to 300
	files instead of 100.

	* libnautilus-private/nautilus-directory-async.c:
	(link_info_gmc_link_read_callback): Fix function so it uses the
	actual URI, not the thing that starts with URL. The old way it
	was always failing to read. There were some other backwards if
	statements in here too.
	
	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize): Create "non-ready files" hash.
	(fm_directory_view_destroy): Destroy it.
	(real_file_still_belongs): Move this here from FMListView.
	(still_should_show_file): New function, used to decide whether to
	keep a file in the window or not.
	(ready_to_load): New function, used to decide whether a file is
	ready enough to show in the window.
	(process_new_files): Move files from the "new files" lists to the
	"old files" lists, filtering out ones that are not ready to load
	and putting those into the "non-ready files" hash. Also sort the
	added files so the ones that show up at the top are the first to
	be added.
	(split_off_first_n): Renamed to eliminate the "g" namespace.
	(process_old_files): The guts of what used to be in
	display_pending_files. Now we use a separate signal for remove
	instead of just reusing the changed signal.
	(display_pending_files): We're not done loading until all the
	"non-ready files" are ready. Also reverse the sense of the return
	value, so it returns TRUE if there is more work to do.
	(display_pending_idle_callback): Don't zero out the idle ID if we
	are going to return TRUE.
	(display_pending_timeout_callback): If there are more files than
	we can handle, do the remainder at idle time, not in another
	timeout.
	(schedule_idle_display_of_pending_files): Lower the priority so we
	are more likely to get canvas updates between idles.
	(done_loading_callback): We're not done until there are no
	"non-ready files" left.
	(fm_directory_view_queue_file_change): Tiny optimization.
	(unref_key_and_remove): Helper function for clearing out the
	"non-ready files" hash.
	(fm_directory_view_stop): Clear out the 4 lists and the hash (it
	used to just be 2 lists).
	(real_sort_files): Default implementation, doesn't sort.
	(fm_directory_view_initialize_class): Various new methods.
	
	* src/file-manager/fm-icon-view.c: (fm_icon_view_add_file): Do
	less work, since the rules about which files should be shown and
	which files are ready to be seen are now in FMDirectoryView.
	(fm_icon_view_remove_file): New function.
	(fm_icon_view_file_changed): Do way less work, since
	FMDirectoryView does the heavy lifting now.
	(play_file), (preview_audio): Some rudimentary fixes, still seems
	to be broken.
	(compare_files): New function.
	(compare_files_cover): New function.
	(fm_icon_view_sort_files): If automatic layout is on, sort the
	files on their way in so the first ones displayed are the top left
	ones.
	(icon_container_compare_icons_callback): Share code by using the
	new compare_files function.
	(fm_icon_view_initialize_class): Various new methods.

	* src/file-manager/fm-list-view.h:
	* src/file-manager/fm-list-view.c:
	(fm_list_view_initialize_class): Various new methods.
	(fm_list_view_add_file): Do less work, since the rules about which
	files should be shown and which files are ready to be seen are now
	in FMDirectoryView.
	(fm_list_view_file_changed): Do way less work, since
	FMDirectoryView does the heavy lifting now.
	(fm_list_view_remove_file): New function.
	(fm_list_view_sort_files): This replaces the old override of
	display_pending_files.
	
	* src/file-manager/fm-search-list-view.c:
	(fm_search_list_view_initialize_class): The file_still_belongs
	method moved to FMDirectoryView.

2001-10-15  Darin Adler  <darin@bentspoon.com>

	Switch to require Mozilla 0.9.5 -- sadly this means we are
	now incompatible with any older verion. Thanks to frb@ximian.com
	for his patch and help making it compile with 0.9.5.

	* README: Tell people 0.9.5 is needed.
	* configure.in: Various cleanup, and ask for 0.9.5.
	* components/mozilla/mozilla-events.cpp:
	* components/mozilla/nautilus-mozilla-embed-extensions.cpp:
	Work around gcc bug with the directory named string. Switch to use
	new calls in cases where the old ones are gone.
	
2001-10-13  Carlos Perelló Marín <carlos@gnome-db.org>

        * configure.in (ALL_LINGUAS): Added pt

2001-10-12  Darin Adler  <darin@bentspoon.com>

	* src/file-manager/fm-directory-view.c: Change hysteresis value
	from .1 second to 4 seconds. I think this will get rid of the
	slowness people have been reporting.

2001-10-12  Darin Adler  <darin@bentspoon.com>

	* configure.in: Bumped gnome-vfs requirement to 1.0.3.

2001-10-11  Darin Adler  <darin@bentspoon.com>

	* Makefile.am: Remove RPMs-README.
	
	* libnautilus/Makefile.am: -I$(builddir)
	
	* libnautilus/nautilus-undo-private.h:
	* libnautilus/nautilus-undo-transaction.h:
	Use #include <libnautilus/x.h> rather than #include "x.h".

	* NEWS: Some refinement.

2001-10-11  Darin Adler  <darin@bentspoon.com>

	* NEWS: Add a first cut at Nautilus 1.0.5 release notes.
	* THANKS: Updated to match change log better.
	* configure.in: Bumped version to 1.0.5 in preparation for the
	release.

2001-10-09  Alex Larsson  <alexl@redhat.com>

	* libnautilus-private/nautilus-find-icon-image.c:
	Include libgnomevfs/gnome-vfs-utils.h, needed for
	gnome_vfs_icon_path_from_filename().

	* libnautilus-private/nautilus-volume-monitor.c (copy_volume):
	Copy is_read_only.

2001-10-09  Darin Adler  <darin@bentspoon.com>

	* configure.in: Require newer versions of various libraries to
	cut down on the bug reports with people using newer nautilus
	and older versions of those libraries. Including bonobo 1.0.9,
	eel 1.0.2, librsvg 1.0.1. Remove the freetype stuff here, since
	that's all taken care of in librsvg. Remove old GNOME2_PATH thing
	that is definitely not needed. Remove gnome_canvas_set_dither
	check which is now in eel if needed at all. Remove ammonite
	configure flags.

	* nautilus.spec.in: Remove freetype dependencies. This is now
	handled in librsvg.
	
	* components/mozilla/Makefile.am:
	* components/mozilla/main.c: (main):
	* components/mozilla/nautilus-mozilla-content-view.c:
	(mozilla_location_callback), (mozilla_link_message_callback),
	(mozilla_dom_mouse_click_callback),
	(navigate_mozilla_to_nautilus_uri), (post_widget_initialize):
	* src/Makefile.am:
	Remove dependencies on ammonite and some more remnants of
	Eazel services code.

2001-10-09  Darin Adler  <darin@bentspoon.com>

	* libnautilus-private/nautilus-find-icon-image.c:
	(get_themed_icon_file_path): Fix typo.

2001-10-09  Darin Adler  <darin@bentspoon.com>

	* libnautilus-private/nautilus-find-icon-image.c:
	(get_themed_icon_file_path): Fix problem with NULL themes.

2001-10-08  Darin Adler  <darin@bentspoon.com>

	* libnautilus-private/nautilus-file.c:
	(get_automatic_emblems_as_integer),
	(prepend_automatic_emblem_names): Bend to the forces of
	practicality and mediocrity and turn off the trash emblem until we
	can make the "in trash" check fast.
	
	* libnautilus-private/nautilus-icon-factory.c:
	Tweak formatting.

2001-10-08  Darin Adler  <darin@bentspoon.com>

	Separate out the part of the code that locates icons.

	* libnautilus-private/Makefile.am: New source files.
	
	* libnautilus-private/nautilus-find-icon-image.h: New.
	* libnautilus-private/nautilus-find-icon-image.c: New.

	* libnautilus-private/nautilus-icon-factory.c:
	(cache_icon_new): Use new theme structure.
	(nautilus_icon_factory_destroy): Use new theme structure.
	(get_mime_type_icon_without_suffix): Use suffix remove function
	moved into new file by its new name.
	(set_theme_name): Helper function to keep the theme change code
	simpler.
	(icon_theme_changed_callback): Rewrote to get rid of confused
	juxtaposition of old and new theme concepts.
	(image_uri_to_name_or_uri): Use suffix remove function moved into
	new file by its new name.
	(nautilus_icon_factory_get_emblem_icon_by_name): Use emblem prefix
	by new name.
	(load_named_icon): Use nautilus_get_icon_file_name function in new
	source file.
	(load_specific_icon), (scale_icon), (load_icon_with_embedded_text):
	IconDetails is now NautilusIconDetails.

2001-10-07  Darin Adler  <darin@bentspoon.com>

	* Makefile.am:
	* data/Makefile.am:
	* helper-scripts/Makefile.am:
	A few DESTDIR fixes.

	* libnautilus-private/nautilus-icon-factory.c:
	Cache more icons. The old number was arbitrary and way too small.

2001-10-05  Darin Adler  <darin@bentspoon.com>

	* libnautilus-private/nautilus-icon-factory.c: Remove gratuitous
	suffixes from the icon file search. We now look only for .svg and
	.png and .jpg files. Lets use .png files most of the time.

2001-10-05  Darin Adler  <darin@bentspoon.com>

	* eazel-logos: removed
	* libnautilus-private/nautilus-file-utilities.c:
	(nautilus_pixmap_file): Remove the code to look for Eazel logos.

	* configure.in:
	* Makefile.am:
	* nautilus.spec.in:
	Remove the code to include the Eazel logos in the tarball and
	the package.

	* HACKING: Remove the instructions on how to omit the Eazel logos.

2001-10-05  Benedikt Roth  <Benedikt.Roth@gmx.net>

 	* src/file-manager/fm-properties-window.c: (uri_is_local_image),
 	(fm_properties_window_drag_data_received),
 	(create_image_widget_for_file):
 	Implemented DnD for the icon in the file properties dialog

2001-10-04  Darin Adler  <darin@bentspoon.com>

	A bit more renaming to be explicit about "display name".
	This is slightly gratuitious, because we don't really need to be
	explicit about which name in every case, but it does no harm and
	a tiny bit of good.

	* components/tree/nautilus-tree-view.c: (ctree_compare_rows):
	* libnautilus-private/nautilus-file.c: (compare_by_display_name),
	(compare_by_full_path), (nautilus_file_compare_for_sort_internal),
	(compare_by_display_name_cover),
	(nautilus_file_list_sort_by_display_name),
	(nautilus_self_check_file):
	* libnautilus-private/nautilus-file.h:
	* libnautilus-private/nautilus-global-preferences.c:
	(default_icon_view_sort_order_or_manual_layout_changed_callback):
	* src/file-manager/fm-desktop-icon-view.c:
	(desktop_icons_compare_callback):
	* src/file-manager/fm-directory-view.c:
	(update_directory_in_scripts_menu):
	* src/file-manager/fm-icon-view.c: (get_default_sort_order),
	(icon_container_compare_icons_by_name_callback):
	* src/file-manager/fm-list-view.c: (compare_rows_by_name),
	(get_attribute_from_sort_type), (real_get_column_specification):
	* src/file-manager/fm-search-list-view.c:
	(real_get_column_specification):
	Change NAUTILUS_FILE_SORT_BY_NAME to NAUTILUS_FILE_SORT_BY_DISPLAY_NAME
	and compare_by_name to compare_by_display_name and
	nautilus_file_list_sort_by_name to nautilus_file_list_sort_by_display_name.

2001-10-04  Maciej Stachowiak  <mjs@noisehavoc.org>

	* libnautilus-private/nautilus-file-attributes.h,
	libnautilus-private/nautilus-file-private.h: Rename CUSTOM_NAME
	attribute to DISPLAY_NAME.

	* libnautilus-private/nautilus-file.h,
	libnautilus-private/nautilus-file.c:
	(nautilus_file_get_name): Always return the real name of the file.
	(nautilus_file_get_display_name): New function which returns the
	display name of the file, taking into account special names that
	may be set for .desktop files or gmc-style links, as
	nautilus_file_get_name formerly did.
	(nautilus_file_compare_display_name): Use display name and rename
	for clarity.
	
	(destroy, compare_by_name, nautilus_file_get_string_attribute,
	nautilus_file_get_all_attributes, nautilus_self_check_file):
	Adjust for custom_name->display_name change, use
	nautilus_file_get_display_name instead of nautilus_file_get_name
	where appropriate.
	
	* libnautilus-private/nautilus-directory-async.c:
	(nautilus_directory_set_up_request), (link_info_done,
	(link_info_gmc_link_read_callback): Adjust for custom_name->display_name change.

	
	In all the places below, use nautilus_file_get_display_name
	instead of nautilus_file_get_name:
	
	* components/text/nautilus-text-view.c: (file_read_callback):
	* components/tree/nautilus-tree-model.c:
	(nautilus_tree_model_monitor_add),
	(nautilus_tree_model_node_begin_monitoring_no_connect):
	* components/tree/nautilus-tree-view.c:
	(nautilus_tree_view_insert_model_node),
	(nautilus_tree_view_update_model_node):
	* libnautilus-private/nautilus-program-chooser.c:
	(get_file_name_for_display):
	* libnautilus-private/nautilus-program-choosing.c:
	(application_cannot_open_location):
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_display_selection_info),
	(real_file_limit_reached), (file_name_from_uri),
	(add_script_to_script_menus), (add_submenu_to_script_menus),
	(copy_or_cut_files), (get_executable_text_file_action),
	(fm_directory_view_activate_file), (finish_loading):
	* src/file-manager/fm-error-reporting.c:
	(fm_report_error_loading_directory),
	(fm_report_error_renaming_file), (fm_report_error_setting_group),
	(fm_report_error_setting_owner),
	(fm_report_error_setting_permissions), (fm_rename_file):
	* src/file-manager/fm-icon-view.c:
	(icon_container_preview_callback), (get_icon_text_callback):
	* src/file-manager/fm-list-view.c: (match_row_name):
	* src/file-manager/fm-properties-window.c:
	(name_field_update_to_match_file),
	(update_properties_window_title), (create_permissions_page),
	(create_properties_window):
	* src/file-manager/fm-search-list-view.c: (real_adding_file):
	* src/nautilus-window-manage-views.c: (compute_default_title):
	* src/nautilus-window.c: (nautilus_window_set_viewed_file):

2001-10-02  Darin Adler  <darin@bentspoon.com>

	Fix the longstanding problem where the Notes and History sidebar
	panels failed to load.

	* libnautilus-private/nautilus-directory-metafile.c:
	(die_on_failed_activation): Give better error messages.
	(get_factory): Check the ev result from oaf_activate_from_id
	rather than relying on getting NIL when it fails.
	(open_metafile): New helper function.
	(get_metafile): Don't complain if the open call fails the first
	time, and re-get the factory and retry before doing a g_error.

2001-10-02  Darin Adler  <darin@bentspoon.com>

	* src/nautilus-window.c: (nautilus_window_destroy),
	(nautilus_window_set_viewed_file): Fix bug where we would leave a
	file monitored when we closed the window.

	* libnautilus-private/nautilus-volume-monitor.c:
	(mount_unmount_callback): Formatting tweaks.

2001-10-02  Frederic Crozat  <fcrozat@mandrakesoft.com>

	* libnautilus-private/filesystem-attributes.xml: add support for JFS
	* libnautilus-private/nautilus-volume-monitor.c:
	(close_error_pipe), (mount_unmount_callback): Set locale to "C"
	before running mount/umoun to be able to parse mount message in english

2001-10-01  Darin Adler  <darin@bentspoon.com>

	* libnautilus-private/nautilus-directory-async.c:
	(deep_count_start): Say that the deep count of a non-directory is
	"done" rather "not started". This was causing an infinite loop when
	doing the directory self-check.

2001-10-01  Benedikt Roth  <Benedikt.Roth@gmx.net>

	* libnautilus-private/nautilus-file-operations.c:
	(parse_previous_duplicate_name), (make_next_duplicate_name),
	(nautilus_self_check_file_operations):
	Fix #47701, Duplicate numbering scheme does not correctly number 
	the 11th, 12th, and 13th copies

2001-10-01  Alex Larsson  <alexl@redhat.com>

	* data/Makefile.am (install-data-local):
	Move sysconfig and serverconfig out of starthere.
	That was a merge error.

2001-10-01  Darin Adler  <darin@bentspoon.com>

	* README: Updated tags and build order in the README to match
	what Nautilus hackers really use.

2001-09-28  Darin Adler  <darin@bentspoon.com>

	* configure.in: Bump gnome-vfs requirement to 1.0.2, since we
	use new APIs that aren't in 1.0.1.

2001-09-27  Benedikt Roth  <Benedikt.Roth@gmx.net>

	* components/hardware/nautilus-hardware-view.c:
	(get_CPU_description):
	i18n fixes for cpu speed and cache size (fixes #45298)
	* icons/gnome/gnome.xml:
	Fix #48322, Theme description for new Gnome theme lacks a dot

2001-09-27  Darin Adler  <darin@bentspoon.com>

	* components/news/nautilus-news.c: (draw_rss_logo_image):
	Format time using eel_strdup_strftime so we don't have
	a fixed maximum buffer size and marked the time format
	for localization.

2001-09-26  Alex Larsson  <alexl@redhat.com>

	* components/mozilla/nautilus-mozilla-content-view.c:
	Allow the mozilla component to open Chrome windows.
	This is needed for simple dialogs when e.g. submitting
	forms.

2001-09-26  Alex Larsson  <alexl@redhat.com>

	Merged more patches from the Red Hat branch.

	2001-09-20  Alex Larsson  <alexl@redhat.com>
	
	* libnautilus-private/nautilus-desktop-file-loader.c:
	Correct filename in header.
	(nautilus_desktop_file_new): Use g_new0
	(nautilus_desktop_file_load):
	Don't initialize contents. Don't need to check contents
	for NULL.
	(nautilus_desktop_file_foreach_section):
	Coding style fix.

	* libnautilus-private/nautilus-link-desktop-file.c
	(nautilus_link_desktop_file_local_create): Use fputs instead
	of fwrite.
	
	2001-09-19  Alex Larsson  <alexl@redhat.com>
	
	* libnautilus-private/nautilus-link-desktop-file.c
	(nautilus_link_desktop_file_get_link_uri_from_desktop):
	Handle broken .desktop file with type "URL".

	* libnautilus-private/nautilus-icon-factory.c:
	Load the default icon name even when we have a custom icon uri.
	It may be needed if the custom icon was not there.

	2001-09-19  Alex Larsson  <alexl@redhat.com>

	* libnautilus-private/nautilus-directory-async.c
	(make_dot_directory_uri): gnome_vfs_uri_new() may fail.
	(link_info_start): Handle make_dot_directory_uri failing.
	
	* libnautilus-private/nautilus-icon-container.c:
	Remove fixed FIXME.
	
	* libnautilus-private/nautilus-link-desktop-file.c
	(slurp_key_string): Pass uris to nautilus_desktop_file_load ().
	(nautilus_link_desktop_file_local_create): Create files
	using FILE * instead of GnomeVFS.
	(nautilus_link_desktop_file_local_set_icon,
	nautilus_link_desktop_file_local_get_link_uri):
	The argument is a path, not a uri.
	(nautilus_link_desktop_file_local_set_type,
	nautilus_link_desktop_file_local_set_link_uri): Remove failing functions.
	(nautilus_link_desktop_file_local_get_additional_text): Comment
	out additional text for now.

	* libnautilus-private/nautilus-link-desktop-file.h
	  (nautilus_link_desktop_file_local_set_type,
           nautilus_link_desktop_file_local_set_link_uri): Remove failing functions.

	* libnautilus-private/nautilus-link-historical.c:
	  (local_get_root_property):
	  Always use paths for the arguments.

	* libnautilus-private/nautilus-link.c:
	Make nautilus_link_local_set_link_uri and nautilus_link_local_set_type
	not be called for .desktop files.

	* src/file-manager/fm-directory-view.c:
	Remove unnecessary include

	* src/file-manager/fm-icon-view.c:
	Re-enable additional text.
	
	2001-09-19  Alex Larsson  <alexl@redhat.com>

	* libnautilus-private/Makefile.am:
	* libnautilus-private/nautilus-desktop-file-loader.[ch]:
	* libnautilus-private/nautilus-link-historical.[ch]:
	Rename nautilus-link-impl to nautilus-link-historical
	and nauitlus-link-desktop to nautilus-link-desktop-file.

	* libnautilus-private/nautilus-link-impl-desktop.[ch]:
	* libnautilus-private/nautilus-link-impl.[ch]:
	Removed old files.

	* libnautilus-private/nautilus-link.c:
	* libnautilus-private/nautilus-file.c:
	* libnautilus-private/nautilus-icon-factory.c:
	Update for the renames.

	* libnautilus-private/nautilus-desktop-file-loader.c:
	Some coding style changes.
	
	2001-09-18  Alex Larsson  <alexl@redhat.com>

	* libnautilus-private/desktop-file-loader.[ch],
	libnautilus-private/nautilus-desktop-file.[ch]:
	Removed files.
	* libnautilus-private/nautilus-desktop-file-loader.[ch],
	libnautilus-private/Makefile.am:
	New, cleaned up version of the desktop-file loader.

	* libnautilus-private/nautilus-link-impl-desktop.c:
	Update to the new desktop file parser names.

	2001-09-13  Maciej Stachowiak  <mjs@noisehavoc.org>

	* libnautilus-private/nautilus-file.c
	(nautilus_file_contains_text): Fix test for NULL mime type with
	reverse polarity; don't free the mime type string since we are not
	copying it. I could have sworn I fixed both of these problems
	before merging my changes to the RH branch!

	2001-09-01  Maciej Stachowiak  <mjs@noisehavoc.org>

	Merged changes from mjs-patches-to-redhat-patches branch to
	redhat-outstanding-patches:

	2001-08-27  Maciej Stachowiak  <mjs@noisehavoc.org>

	* libnautilus-private/nautilus-directory-async.c
	(nautilus_directory_invalidate_count_and_mime_list): Fix a
	reference count underflow.

	2001-08-27  Maciej Stachowiak  <mjs@noisehavoc.org>

	* libnautilus-private/nautilus-directory-async.c:
	(link_info_read_done, start_or_stop_io,
	file_needs_high_priority_work_done,
	file_needs_low_priority_work_done, file_needs_work_done,
	nautilus_directory_add_file_to_work_queue,
	nautilus_directory_remove_file_from_work_queue,
	move_file_to_low_priority_queue): Use two queues instead of one
	for file attributes. The high priority attributes are ones needed
	to display an icon at all (file_info and link_info), the rest are
	things that can be displayed later. This change makes directory
	counts and top left text generally get loaded after all the files
	appear, instead of slowing down the load.
	* libnautilus-private/nautilus-directory-private.h: Adjusted
	for the two queue change.
	libnautilus-private/nautilus-directory.c
	(nautilus_directory_initialize, nautilus_directory_destroy):
	Likewise.
	* libnautilus-private/nautilus-file-queue.h,
	libnautilus-private/nautilus-file-queue.c:
	(nautilus_file_queue_new, nautilus_file_queue_destroy,
	nautilus_file_queue_enqueue, nautilus_file_queue_dequeue,
	nautilus_file_queue_remove, nautilus_file_queue_head,
	nautilus_file_queue_is_empty): New data structure that provides a
	queue of NautilusFiles that allows constant time removal from an
	arbitrary point in the list and avoids storing duplicates
	(basically factored out this code from nautilus-direcvtory-async).
	* libnautilus-private/Makefile.am: Add nautilus-file-queue.[ch] to
	build.

	2001-08-27  Maciej Stachowiak  <mjs@noisehavoc.org>

	* libnautilus-private/nautilus-directory-async.c
	(lacks_link_info): If we can determine here that link info will
	not be applicable to this file, set the proper flags and say it's
	not wanted. This removes much of the chunky loading effect the
	previous changes were causing.
	(link_info_start): Make test for gmc link more efficient by using
	nutilus_file_is_mime_type for mime type checking.

	* libnautilus-private/nautilus-file.c:
	(nautilus_file_contains_text): Speed this check up by avoiding
	memory allocation.

	2001-08-25  Maciej Stachowiak  <mjs@noisehavoc.org>

	Reworked nautilus-directory-async to maintain a queue of files
	that need some async I/O done, to avoid n^2 behavior on large
	directory loads.
	
	* libnautilus-private/nautilus-directory-private.h: Added
	declarations of file queue data structures and functions.

	* libnautilus-private/nautilus-directory-async.c:
	(nautilus_directory_add_file_to_work_queue,
	add_all_files_to_work_queue,
	nautilus_directory_remove_file_from_work_queue): New functions for
	managing work queue.
	(file_needs_work_done): New function to determine when a file
	needs async I/O of any kind done.
	(nautilus_directory_monitor_add_internal,
	nautilus_directory_monitor_remove_internal,
	nautilus_directory_remove_file_monitors,
	nautilus_directory_add_file_monitors,
	nautilus_directory_call_when_ready_internal,
	nautilus_directory_force_reload_internal): Add files to work
	queue or remove files from work queue as appropriate.
	(nautilus_directory_invalidate_count_and_mime_list): Invalidate
	using the generic file attribute invalidation code, to make sure
	the right file is added to the work queue.
	(lacks_directory_count, lacks_deep_count, lacks_mime_list): Don't
	bother to check if it's a directory, since the relevant `_start'
	functions will check for that case and set the flag that says the
	data is up to date.
	(file_list_start_or_stop): Renamed to make effects more clear.
	(directory_count_callback): Set directory count info properly in
	the failure case.
	(link_info_done): Don't send a file changed notification
	here, since this might be called in cases where link info doesn't
	apply, and we don't want to send a notice in that case. 
	(link_info_read_done): Instead, send it here, since cases where
	the link info applies all go through here.
	(top_left_read_done): Don't say we got the top left text when it
	failed.
	(directory_count_stop, directory_count_start, deep_count_stop,
	deep_count_start, mime_list_stop, mime_list_start,
	top_left_read_callback, top_left_stop, top_left_start),
	file_info_stop, file_info_start, link_info_stop, link_info_start):
	Split start and stop functions; make start functions take a file
	to start work on, if applicable, instead of searching the file
	list for a needy file.
	(start_or_stop_io): Revise algorithm as follows: stop all I/O that
	is no longer wanted; remove all files from the head of the queue
	that need no more I/O; and start any needed I/O for the file
	currently at the head of the queue.

	* libnautilus-private/nautilus-directory.c:
	(nautilus_directory_initialize, nautilus_directory_destroy):
	Create and destroy work queue hash table.
	(nautilus_directory_add_file, nautilus_directory_remove_file): Add
	file to or remove file from work queue.
	* libnautilus-private/nautilus-file.c
	(nautilus_file_invalidate_attributes): Add file to work queue.

	2001-08-22  Maciej Stachowiak  <mjs@noisehavoc.org>

	* libnautilus-private/nautilus-icon-factory.c:
	(image_uri_to_name_or_uri,
	nautilus_icon_factory_get_icon_for_file): Don't crash (oops).

	2001-08-21  Maciej Stachowiak  <mjs@noisehavoc.org>

	* libnautilus-private/nautilus-icon-factory.c
	(nautilus_icon_factory_get_icon_for_file): Fix slight merge
	problem.

	2001-08-21  Maciej Stachowiak  <mjs@noisehavoc.org>

	These changes are meant to fix some of the areas of slowness
	uncovered by getting the link info asynchronously. They don't do
	the job all the way though.

	* libnautilus-private/nautilus-directory-async.c: (lacks_top_left,
	lacks_link_info, top_left_start): Fix these up a bit to avoid
	doing the more expensive mime type comparing checks too
	frequently.

	* libnautilus-private/nautilus-icon-private.h,
	libnautilus-private/nautilus-icon-container.c: (destroy),
	(nautilus_icon_container_initialize),
	(nautilus_icon_container_clear), (icon_destroy),
	(nautilus_icon_container_add), (nautilus_icon_container_remove),
	(nautilus_icon_container_request_update),
	(nautilus_icon_container_reveal): Add a hashtable mapping from
	icon data to icons, to make some formerly linear operations
	constant time and so hopefully avoid N^2 behavior. Manage the
	hashtable properly.

	* libnautilus-private/nautilus-icon-factory.h,
	libnautilus-private/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_for_file,
	nautilus_icon_factory_get_required_file_attributes): Tweak a bit.
	(nautilus_icon_factory_get_basic_file_attributes,
	nautilus_icon_factory_is_basic_icon_ready_for_file): New functions
	that let you determine if most of the info needed to get an icon
	is ready - "most" being everything but top left text right now.
	
	* libnautilus-private/nautilus-link-impl-desktop.c
	(nautilus_link_impl_desktop_get_link_icon_from_desktop): Remove
	stray printf.

	2001-08-21  Maciej Stachowiak  <mjs@noisehavoc.org>

	* src/file-manager/fm-icon-view.c: (fm_icon_view_add_file,
	fm_icon_view_file_changed): Try to avoid displaying the generic
	icon before custom icon data is read.

	2001-08-21  Maciej Stachowiak  <mjs@noisehavoc.org>

	* libnautilus-private/nautilus-file-attributes.h: Add
	NAUTILUS_FILE_CUSTOM_NAME attribute.

	* libnautilus-private/nautilus-directory-private.h,
	libnautilus-private/nautilus-directory-async.c:
	(link_info_cancel), (nautilus_directory_set_up_request),
	(nautilus_async_destroying_file), (lacks_link_info),
	(wants_link_info), (request_is_satisfied), (link_info_done),
	(link_info_read_done), (link_info_nautilus_link_read_callback),
	(link_info_gmc_link_read_callback),
	(link_info_gmc_link_read_more_callback), (make_dot_directory_uri),
	(link_info_start), (start_or_stop_io),
	(nautilus_directory_cancel),
	(cancel_link_info_for_file), (cancel_loading_attributes),
	(nautilus_directory_cancel_loading_file_attributes): Changes to
	get the custom name and custom icon out of a link files and
	.directory files asynchronously and with caching. The I/O is
	shared with the fetching of the activation URI. 

	* libnautilus-private/nautilus-file-private.h,
	libnautilus-private/nautilus-file.c: (destroy),
	(nautilus_file_get_name), (nautilus_file_get_activation_uri),
	(nautilus_file_get_custom_icon_uri), (invalidate_link_info),
	(nautilus_file_invalidate_attributes_internal),
	(nautilus_file_get_all_attributes): Handle new custom_name and
	custom_icon_uri attributes and link_info internal attribute
	properly.

	* libnautilus-private/nautilus-file.h: Prototype new
	nautilus_file_get_custom_icon_uri call.

	* libnautilus-private/nautilus-icon-factory.c
	(nautilus_icon_factory_get_icon_for_file): Remove code for reading
	icons from .directory files and various kinds of links. Instead
	rely on nautilus_file_get_custom_icon_uri.

	* libnautilus-private/nautilus-link.h,
	libnautilus-private/nautilus-link.c:
	(nautilus_link_get_link_uri_given_file_contents): Fix to work for
	classic nautilus links.
	(nautilus_link_get_link_name_given_file_contents): New call to get
	a custom name given link contents. (Actually does nothing for
	old-style nautilus links).
	(nautilus_link_get_link_icon_given_file_contents): New call to get
	a custom icon given link contents.
	(nautilus_link_local_set_icon, nautilus_link_local_set_link_uri):
	Invalidate the relevant file attributes.

	* libnautilus-private/nautilus-link-impl-desktop.h,
	libnautilus-private/nautilus-link-impl-desktop.c:

	* libnautilus-private/nautilus-link-impl-desktop.h,
	libnautilus-private/nautilus-link-impl-desktop.c:
	(nautilus_link_impl_desktop_local_set_icon): Remve attempt at
	notification (now done by generic layer).
	(nautilus_link_impl_desktop_get_link_name_from_desktop,
	nautilus_link_impl_desktop_get_link_name_given_file_contents):
	Implement getting the custom name.
	(nautilus_link_impl_desktop_get_link_icon_from_desktop,
	nautilus_link_impl_desktop_get_link_icon_given_file_contents):
	Implement getting the custom icon. This no longer attempts the
	hack of asynchronously downloading and caching remote
	icons. Nothing uses this feature and it should really be done in
	the icon factory, not here.

	* libnautilus-private/nautilus-link-impl.h,
	libnautilus-private/nautilus-link-impl.c:
	(nautilus_link_impl_local_set_link_uri): Remove attempt at
	notification (done by generic layer now).
	(nautilus_link_impl_get_link_icon_given_file_contents): Implement
	getting the custom icon. This no longer attempts the hack of
	asynchronously downloading and caching remote icons. Nothing uses
	this feature and it should really be done in the icon factory, not
	here.

	* components/tree/nautilus-tree-model.c:
	(nautilus_tree_model_monitor_add,
	nautilus_tree_model_node_begin_monitoring_no_connect): Monitor
	custom_name and attributes required by icon factory.
	
	* src/file-manager/fm-directory-view.c (finish_loading): Monitor
	custom name attribute.

	* src/file-manager/fm-properties-window.c
	(create_properties_window): Monitor custom name attribute.
	
	* src/file-manager/fm-search-list-view.c (real_adding_file):
	Monitor custom name attribute.

	* src/nautilus-window-manage-views.c
	(viewed_file_changed_callback): Always update title even if URI
	did not change because custom name may have changed or just been
	retrieved.

	* src/nautilus-window.c: (nautilus_window_set_viewed_file):
	Monitor custom name attribute.

	2001-08-20  Havoc Pennington  <hp@redhat.com>

	* libnautilus-private/nautilus-icon-factory.c
	(nautilus_icon_factory_get_icon_for_file):
	add a nautilus_file_is_local() before loading desktop files; this
	breaks Nautilus links, which are actually async. We lost the 
	is_local() check on .desktop files because the .desktop files were
	added as a nautilus link backend, and nautilus links were async,
	so people were using them in nonlocal cases, but we deleted the
	.desktop codepath in favor of the nautilus link codepath.

	(nautilus_icon_factory_get_icon_for_file): Do same processing for
	.directory image URI that we do for .desktop image URI, allowing
	us to handle X-Nautilus-Icon in .directory
	(image_uri_to_name_or_uri): function with the common processing

	Wed Aug  8 21:02:33 2001  Jonathan Blandford  <jrb@redhat.com>

	* libnautilus-private/nautilus-link-impl-desktop.c
	(nautilus_link_impl_desktop_local_create): fix to really work with
	gnome_vfs.

	Mon Aug  6 15:04:14 2001  Jonathan Blandford  <jrb@redhat.com>

	* libnautilus-private/nautilus-link-impl-desktop.c
	(nautilus_link_impl_desktop_local_create): write nautilus files
	using gnome-vfs instead of FILE.

	2001-08-01  Havoc Pennington  <hp@redhat.com>
	
	* libnautilus-private/nautilus-link-impl-desktop.c: use 
	desktop_file_get_locale_string() instead of
	desktop_file_get_string() to get the names from the desktop files.

	Wed Aug  1 04:58:35 2001  Jonathan Blandford  <jrb@redhat.com>

	* libnautilus-private/nautilus-link.c: Fix a crash when some files
	could return NULL as a mime-type.

	* src/file-manager/fm-icon-view.c (get_icon_text_callback):
	Disable additional_text for .desktop files.

	2001-07-31  Alex Larsson  <alexl@redhat.com>

	* libnautilus-private/nautilus-link-impl-desktop.c
	(nautilus_link_impl_desktop_get_link_uri_from_desktop):
	Handle FSType desktop files here to. To allow unmounts.

	2001-07-31  Havoc Pennington  <hp@redhat.com>

	* libnautilus-private/nautilus-file.c (nautilus_file_get_name):
	get_text, not get_additional_text, for .directory files. fixes
	sidebar names hopefully.
	
	Fri Jul 27 16:03:12 2001  Jonathan Blandford  <jrb@redhat.com>

	* libnautilus-private/nautilus-link.c (get_uri_mime_type_full):
	check the file for the mime-type rather then just the file name.
	Grabs old nautilus-link files.

	Thu Jul 26 19:09:48 2001  Jonathan Blandford  <jrb@redhat.com>

	* src/file-manager/fm-desktop-icon-view.c
	(update_trash_link_and_delete_copies): fix Trash.desktop file.

	* libnautilus-private/nautilus-link-impl-desktop.c
	(slurp_uri_contents): '\000' terminate buffer read in.
	(nautilus_link_impl_desktop_local_set_icon): Implement.

	2001-07-26  Havoc Pennington  <hp@redhat.com>

	* src/file-manager/fm-directory-view.c
	(activate_callback): remove the hack for .desktop files, we now 
	do them the same way as Nautilus link files

	* libnautilus-private/nautilus-icon-factory.c
	(nautilus_icon_factory_get_icon_for_file):
	get icons for .desktop files and .directory files
	
	* libnautilus-private/nautilus-file.c
	(nautilus_file_get_name): handle .desktop files using the 
	desktop loader that works on non-file: URIs

	* libnautilus-private/desktop-file-loader.h, 
	libnautilus-private/desktop-file-loader.c: lame desktop file
	parser to be used temporarily until George finishes the Ultimate 
	Desktop File Loader.

	* libnautilus-private/Makefile.am: Add files for link file
	abstraction, intended to allow use of .desktop files in place of 
	Nautilus link files.

2001-09-25  Darin Adler  <darin@bentspoon.com>

	* components/adapter/nautilus-adapter.c:
	(nautilus_adapter_initialize): Ref and sink the new adapter.
	(nautilus_adapter_new): Remove unused CORBA_Environment.
	* components/adapter/nautilus-adapter.h: Whitespace tweak.

	* libnautilus-private/nautilus-directory-metafile.c:
	(nautilus_directory_get_integer_file_metadata):
	* libnautilus-private/nautilus-file.c: (get_id_from_digit_string):
	* libnautilus-private/nautilus-icon-factory.c:
	(parse_attach_points):
	* libnautilus-private/nautilus-thumbnails.c:
	(nautilus_thumbnail_load_framed_image):
	* src/file-manager/fm-icon-view.c:
	(get_stored_icon_position_callback):
	A bunch of places were trying to use %*s to detect whether there
	were stray characters at the end of a string when doing an sscanf.
	I wrote that code. But it doesn't work. A similar technique that
	does work is to use %c, and ignore the parsed character.

	* src/nautilus-search-bar-criterion.c:
	(nautilus_search_uri_get_first_criterion):
	This place wasn't using the %*s at all, so just remove it.

2001-09-24  Fabrice Bellet  <fabrice@gnu.org>

	* Reviewed by Darin Adler <darin@bentspoon.com> (Bug 44402)
	* components/adapter/bonobo-stream-vfs.c: vfs_get_info()
	needs to be implemented to make the EOG component happy.

2001-09-21  Philip Langdale  <philipl@mail.utexas.edu>

	* Reviewed by John Fleck <jfleck@inkstain.net> (Bug 60511)
        * components/help/converters/gnome-info2html2/html.c
        * components/help/converters/gnome-info2html2/html.h
        * components/help/converters/gnome-info2html2/main.c: Added optional
        "galeon mode" invoked with -g command line param. This involves writing 
        fully qualified info: hrefs instead of just the #nodename target,  
        which appears to me to be a bug, but might have negative effects on
        nautilus. It also uses ? queries instead of # refs when forming hrefs.

2001-09-20  Darin Adler  <darin@bentspoon.com>

	* components/help/hyperbola-nav-index.c:
	* components/help/hyperbola-nav-search.c:
	* components/news/nautilus-news.c:
	* components/text/nautilus-text-view.c:
	* libnautilus-private/nautilus-customization-data.c:
	* libnautilus-private/nautilus-directory-async.c:
	* libnautilus-private/nautilus-directory-private.h:
	* libnautilus-private/nautilus-file.c:
	* libnautilus-private/nautilus-icon-factory.c:
	* libnautilus-private/nautilus-link-set.c:
	* libnautilus-private/nautilus-link.c:
	* libnautilus-private/nautilus-metafile.c:
	* libnautilus-private/nautilus-metafile.h:
	* libnautilus-private/nautilus-theme.c:
	* libnautilus-private/nautilus-volume-monitor.c:
	* src/nautilus-bookmark-list.c:
	* src/nautilus-bookmark-parsing.c:
	* src/nautilus-bookmark-parsing.h:
	* src/nautilus-link-set-window.c:
	* src/nautilus-main.c:
	* src/nautilus-property-browser.c:
	* src/nautilus-sidebar.c:
	* src/nautilus-window-menus.c:
	Change all libxml includes to use #include <libxml/*>
	instead of #include <gnome-xml/*>.

2001-09-15  Darin Adler  <darin@bentspoon.com>

	Updated bugzilla.eazel.com references to refer to the
	corresponding bugzilla.gnome.org bug. Also updated my
	email address.

2001-09-14  Darin Adler  <darin@bentspoon.com>

	* libnautilus-private/nautilus-monitor.c:
	(path_is_on_readonly_volume): Move inside #ifdef HAVE_FAM.

2001-09-05  Alex Larsson  <alexl@redhat.com>
	
	Merge some stuff from the redhat-outstanding-patches branch

	* eazel-logos/default.xml:
	* icons/default.xml:
	don't hardcode the title, title info, and
	shadow colors; this prevented the auto-color-selection stuff
	in nautilus-sidebar-title.c from working properly.
	And the hardcoded values were the same thing the autoselector
	would have chosen anyhow.

	* libnautilus-private/nautilus-monitor.c:
	Don't monitor files on read only volumes, they never change, and
	will keep cdroms from being unmounted because fam has open file
	descriptors on them.

	* libnautilus-private/nautilus-thumbnails.c:
	Always look for local thumbnails first.

	* libnautilus-private/nautilus-volume-monitor.[ch]:
	Add nautilus_volume_is_read_only() and
	nautilus_volume_monitor_get_volume_for_path()

	* src/nautilus-desktop-window.c:
	(set_wmspec_desktop_hint): function to set _NET_WM_WINDOW_TYPE, to
	avoid confusing kwin so badly, and also to go ahead and support
	the Window Manager Hints Of The Future.
	(set_gdk_window_background): only set root background to a pixel
	if we retrieved a pixel property
	(map): Set background of our child widgets in addition to our
	own background. This gets rid of the last of the ugliness during
	Nautilus startup, I believe.

	* src/file-manager/fm-icon-view.c:
	Don't read GMC position meta data -- it is never right for nautilus,
	due to different size icons, additional icons, different placement
	policies, so falling back to normal automatic placement works better.
	
2001-09-07  Darin Adler  <darin@bentspoon.com>

	* .cvsignore:
	* data/.cvsignore:
	Ignore .desktop and .directory files generated by the
	xml-18n-merge process.

2001-09-07  Darin Adler  <darin@bentspoon.com>

	* libnautilus-private/nautilus-volume-monitor.c:
	(verify_current_mount_state): Remove unused variable.

2001-09-06  Owen Taylor  <otaylor@redhat.com>

	* libnautilus-private/nautilus-volume-monitor.c
	(verify_current_mount_state): 
	Fix bug where the mount list was stored without full mount
	names. Don't call mount_volume_make_name() on volumes that
	might not be on the system any more. Remove code that 
	(unsuccesfully) tried to fix the old volume names up, since
	we now have the correct old volume names.

	Effect of these changes is to fix a race condition where
	'unmount /mnt/cdrom; eject /dev/cdrom' would leave a left-over
	icon on the deskop.

2001-09-05  Maciej Stachowiak  <mjs@noisehavoc.org>

	* libnautilus-private/nautilus-authn-manager.c:
	(construct_password_dialog,
	present_authentication_dialog_blocking, mark_callback_completed,
	authentication_dialog_button_clicked,
	present_authentication_dialog_nonblocking,
	vfs_async_authentication_callback, vfs_authentication_callback,
	nautilus_authentication_manager_initialize): Converted to use the
	new module callback API. Use async callbacks instead of our own
	mechanism to achieve the same effect.

2001-09-04  Alex Larsson  <alexl@redhat.com>
	
	Merge some stuff from the redhat-outstanding-patches branch

	* libnautilus-private/nautilus-file-utilities.[ch]
	(nautilus_user_main_directory_exists, nautilus_get_user_main_directory):
	Get rid of these. No more ~/Nautilus

	* libnautilus-private/nautilus-global-preferences.c:
	(default_home_location_callback): Always use your normal homedir
	as the home dir.

	* src/nautilus-application.c (check_required_directories): Don't
	create ~/Nautilus.
	(create_starthere_link_callback, nautilus_application_startup):
	Create a start here icon on the desktop.
	Turn of first time druid (by setting first time flag).
	(nautilus_application_startup, check_for_kdesktop, look_for_kdesktop_recursive,
	has_wm_state, get_self_typed_prop)
	Don't manage the desktop if kdesktop is running.

	* src/nautilus-first-time-druid.[ch]:
	Remove ~/Nautilus handling.
	s/druid_set_first_time_file_flag/nautilus_set_first_time_file_flag/

	* src/nautilus-shell-ui.xml:
	* src/nautilus-window-menus.c:
	Add start here to the go menu. Remove leftovers of the "support" menu item.

	* src/file-manager/fm-directory-view.c:
	Move scripts to ~/.gnome/nautilus-scripts

	* Makefile.am:
	Add starthere icons

	* data/Makefile.am:
	* data/*.desktop.in:
	* data/*.directory.in:
	Add starthere desktop files.
	
2001-09-04  Alex Larsson  <alexl@redhat.com>
	
	Merge some stuff from the redhat-outstanding-patches branch

	* libnautilus-private/nautilus-icon-container.c:
	* libnautilus-private/nautilus-icon-dnd.c:
	Change signature of the "handle_uri_list" callback to include the
	drag action.
	
	* src/file-manager/fm-icon-view.c (icon_view_handle_uri_list):
	Handle uri's more gracefully.

	* src/file-manager/fm-desktop-icon-view.c:
	(icon_view_handle_uri_list): Remove.  Now handled in the
	parent class.

2001-09-03  Alex Larsson  <alexl@redhat.com>

	Merge some stuff from the redhat-outstanding-patches branch

	* components/mozilla/nautilus-mozilla-embed-extensions.cpp
	(mozilla_get_document_title): add this from Galeon
	
	* components/mozilla/nautilus-mozilla-embed-extensions.cpp
	(mozilla_unicode_to_locale): copy code from Galeon to use Mozilla
	conversion features to convert unicode to locale encoding

	* components/mozilla/nautilus-mozilla-content-view.c
	(mozilla_title_changed_callback): set title in locale encoding
	
	* libnautilus-private/nautilus-directory-metafile.c
	(get_metafile): print error and exit if we fail to open the
	metafile factory; somewhat cleaner than segfaulting.
	
	* libnautilus-private/nautilus-file.c:
	Cache user information to avoid many getpwuid calls etc.

	* src/nautilus-complex-search-bar.c (load_find_them_pixmap_widget):
	Don't leak pixmap and mask.

	* libnautilus-private/nautilus-icon-container.c (lay_down_icons_tblr):
	64bit clean. Use sizeof (int *), not sizeof (int). 


	* Makefile.am, nautilus-help.desktop.in: Add a help icon that uses
	Nautilus

	* components/help/help-method.c (help_name_to_local_path): 
	handle ghelp:toc to go to the default page gnome-help-browser used
	to go to. kind of a lame hack, but so is this whole vfs module ;-)

2001-09-01  Maciej Stachowiak  <mjs@noisehavoc.org>

	* libnautilus-private/nautilus-authn-manager.h,
	libnautilus-private/nautilus-authn-manager.c:
	(construct_password_dialog),
	(present_authentication_dialog_blocking),
	(authentication_dialog_button_clicked),
	(authentication_dialog_closed), (authentication_dialog_destroyed),
	(present_authentication_dialog_nonblocking),
	(run_authentication_dialog_on_main_thread),
	(vfs_authentication_callback),
	(nautilus_authentication_manager_initialize):

	Replace authn with authentication throughout.

	* src/nautilus-application.c (finish_startup): Adjust to rename.

	* RENAMING: Suggest renaming nautilus-authn-manager to
	nautillus-authentication-manager.c

2001-08-31  Darin Adler  <darin@bentspoon.com>

	* components/adapter/Makefile.am:
	* components/image-viewer/Makefile.am:
	* components/loser/content/Makefile.am:
	* components/loser/sidebar/Makefile.am:
	Don't link in the libnautilus-private library for components that
	don't use it.
	* components/sample/Makefile.am: Pretty up the sample a bit.
	Don't link with GConf since we're not using it directly.
	
	* components/shell/shell.oafinfo: Remove this obsolete file.
	
	* components/news/nautilus-news.c: (draw_rss_items): Fix a leak
	by unref'ing the text layout object instead of just destroying it.
	* src/nautilus-complex-search-bar.c:
	(search_bar_criterion_type_changed_callback): Fix leak of the
	criterion object by sinking it instead of destroying it. The
	criterion object seems to be a widget that's never used as one.
	It should be a GtkObject instead.
	
	* src/nautilus-location-bar.c:
	(nautilus_location_bar_set_location): Simplified code a bit by
	getting rid of special cases for NULL.

2001-09-01  Wang Jian  <lark@linux.net.cn>

	* configure.in: zh_CN (Simplified Chinese) added in ALL_LINGUAS

2001-08-31  Abel Cheung  <maddog@linux.org.hk>

	* configure.in (ALL_LINGUAS): zh_TW.Big5 -> zh_TW

2001-08-30  Darin Adler  <darin@bentspoon.com>

	* src/nautilus-main.c: (main): Add workaround for gnome-metadata bug
	that was causing a stat and mkdir of NULL. (Yoann helped me find this).

	* src/nautilus-window-manage-views.c: (update_title): Fix code that
	was freeing the title and then using it afterward. (Yoann helped me
	find this).

	* src/nautilus-window.c: (refresh_stored_viewers): Fix code so that
	it uses g_list_prepend and g_list_reverse instead of using
	g_list_append, which is a bad habit.

2001-08-30  Darin Adler  <darin@bentspoon.com>

	* src/nautilus-search-bar-criterion.c:
	(nautilus_search_bar_criterion_new_from_values): Fix a storage
	leak that Yoann helped me find.

2001-08-28  Darin Adler  <darin@bentspoon.com>

	* components/help/hyperbola-filefmt.c: (get_locale_score),
	(locale_score): Fix unused variable and expression warnings, and
	fix to match Nautilus coding style.

2001-08-27  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* libnautilus-private/nautilus-link.c (nautilus_link_local_get_image_uri): 
	avoid un-needed string copy.

	* components/help/hyperbola-filefmt.c (locale_score): 
	free return of xmlGetProp on return. Do not use a char pointer 
	to point on the returned value, use an xmlChar pointer.

	* libnautilus-private/nautilus-link.c (nautilus_link_local_get_link_type): 
	Free the value returned by local_get_root_property.

2001-08-27  Seth Nickell  <snickell@stanford.edu>

	reviewed by: Maciej

	* libnautilus-private/nautilus-link.c: (local_set_root_property):

	change a const char * to an xmlChar *, since its being assigned
	a newly allocated xml property and promptly freed (and hence isn't 
	being treated as a const at all).

2001-08-27  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/nautilus-switchable-search-bar.c (nautilus_switchable_search_bar_new): 
	Don't leak a GtkBox.

	* src/nautilus-complex-search-bar.c (load_find_them_pixmap_widget): 
	Do not check pixmap, check pixbuf. This also fix a leak.

	* libnautilus-private/nautilus-link.c (local_set_root_property): 
	Fix a leak of the xmlProp returned data.

2001-08-27  Darin Adler  <darin@bentspoon.com>

	* helper-utilities/error-dialog/Makefile.am:
	Define VERSION for the preprocessor.

2001-08-26  Darin Adler  <darin@bentspoon.com>

	Some makefile cleanup.

	* Makefile.am: Don't build intl since we don't need it the way we
	use gettext.
	* applets/launcher/Makefile.am: Remove redundant -I$(srcdir).
	* applets/preferences-applet/Makefile.am: Remove redundant
	-I$(srcdir).
	* components/adapter/Makefile.am: Remove redundant -I.
	* components/mozilla/Makefile.am: Mark private headers as SOURCES,
	not noinst_HEADERS, as suggested by automake book and manual.
	* components/news/Makefile.am: Remove unneeded
	-I$(top_srcdir)/components/news.
	* configure.in: Don't build intl since we don't need it the way we
	use gettext.
	* libnautilus-adapter/Makefile.am: Remove redundant -I.
	* libnautilus-private/Makefile.am: Change -I for new
	cut-n-paste-code scheme. Also mark private headers as SOURCES, not
	noinst_HEADERS, as suggested by automake book and manual.
	* libnautilus/Makefile.am: Remove redundant -I.
	* src/Makefile.am: Change -I for new cut-n-paste-code scheme. Also
	mark private headers as SOURCES, not noinst_HEADERS, as suggested
	by automake book and manual.
	* src/file-manager/Makefile.am: Mark private headers as SOURCES,
	not noinst_HEADERS, as suggested by automake book and manual.
	
	* check-THANKS.pl: Change Seth's preferred email address.

	* cut-n-paste-code/widgets/e-paned/Makefile.am:
	* cut-n-paste-code/widgets/gimphwrapbox/Makefile.am:
	Don't use -static, since we plan to link 
	Remove unneeded -I directives now that we handle includes
	differently. Also mark private headers as SOURCES, not
	noinst_HEADERS, as suggested by automake book and manual.

	* cut-n-paste-code/widgets/e-paned/e-hpaned.h:
	* cut-n-paste-code/widgets/e-paned/e-vpaned.h:
	* libnautilus-private/nautilus-horizontal-splitter.h:
	* src/nautilus-complex-search-bar.c:
	* src/nautilus-search-bar-criterion.c:
	Simpler include scheme for cut-n-paste code.

2001-08-24  Darin Adler  <darin@bentspoon.com>

	* libnautilus-private/nautilus-file.c:
	(is_special_desktop_gmc_file), (nautilus_file_get_name):
	Some new FIXMEs for I/O that's done at bad times -- these could
	contribute to the performance problems that Alan Cox reported.

2001-08-24  Darin Adler  <darin@bentspoon.com>

	* src/file-manager/fm-directory-view.c:
	(set_up_scripts_directory_global): Separate this from the code to
	create the scripts directory.
	(create_scripts_directory): New function.
	(fm_directory_view_initialize): Use set_up_scripts_directory_global.
	(open_scripts_folder_callback): Use create_scripts_directory.

2001-08-24  Darin Adler  <darin@bentspoon.com>

	Added support for nested directories inside the scripts directory,
	starting with a patch by David Emory Watson <dwatson@cs.ucr.edu>.

	* src/file-manager/fm-directory-view.c: (get_scripts_directory):
	Keep the scripts directory URI and string length in a global
	variable.
	(add_scripts_directory): New function, replaces
	connect_script_handlers. Refs the directory, puts it on the
	scripts directory list, and monitors more attributes than before.
	(fm_directory_view_initialize): Use add_scripts_directory instead
	of connect_script_handlers.
	(fm_directory_view_destroy): Use remove_scripts_directory on the
	entire list instead of disconnect_script_handlers.
	(add_submenu): New function.
	(add_script_to_script_menus): Change name, pass in path.
	(add_submenu_to_script_menus): New function.
	(directory_belongs_in_scripts_menu): New function.
	(add_directory_to_scripts_directory_list): New function, high
	level call used to turn a NautilusFile into a NautilusDirectory
	and call add_scripts_directory.
	(update_directory_in_scripts_menu): New function.
	(update_scripts_menu): New function, replaces reset_scripts_menu
	and uses new nautilus_directory_get_files_list rather than
	nautilus_directory_call_when_ready.
	(open_scripts_folder_callback): Use new global variable instead
	of calling get_scripts_directory.
	(real_update_menus): Call update_scripts_menu instead of
	schedule_reset_scripts_menu.
	(remove_scripts_directory): New function, replaces
	disconnect_script_handlers. Removes the directory from the scripts
	directory list and unrefs it after disconnecting handlers.

	* libnautilus-private/nautilus-directory.h:
	* libnautilus-private/nautilus-directory.c: (is_tentative): Moved
	from nautilus-directory-async.c.
	(nautilus_directory_get_file_list): New, made from formerly-
	private get_non_tentative_file_list in nautilus-directory-async.c.
	(nautilus_directory_list_ref): New.
	(nautilus_directory_list_unref): New.
	(nautilus_directory_list_free): New.
	(nautilus_directory_list_copy): New.
	(compare_by_uri), (compare_by_uri_cover),
	(nautilus_directory_list_sort_by_uri): New. Sorrts directories by
	URI, parents before children, and children sorted as if by
	nautilus_file_list_sort_by_name.
	* libnautilus-private/nautilus-directory-async.c:
	(nautilus_directory_monitor_add_internal), (ready_callback_call):
	Use nautilus_directory_get_file_list instead of
	get_non_tentative_file_list.
	
2001-08-23  Anders Carlsson  <andersca@gnu.org>

	* nautilus.spec.in: Remove CONTROL_CENTER_REQUIRED since nautilus
	doesn't require control-center anymore.

 	* configure.in: Remove CONTROL_CENTER_REQUIRED since nautilus
 	doesn't require control-center anymore.
 
 	* src/nautilus-window.c (nautilus_window_constructed): 
 	Set shrink to TRUE when adding the sidebar since it'll look
 	better when the splitter is collapsed.
 	(nautilus_window_destroy): Free the window title.
 
 	* src/nautilus-window-manage-views.c (begin_location_change): 
 	Unref the directory when we're done using it.
 
 	* src/nautilus-sidebar.c (nautilus_sidebar_destroy): Sink
 	the title tab so it'll destroyed even if it hasn't got a parent.
 
 	* libnautilus-private/nautilus-vfs-file.c (vfs_destroy): 
 	Free details struct.
 
 	* libnautilus-private/nautilus-vfs-directory.c (vfs_destroy): 
 	Free details struct.
 
 	* libnautilus-private/nautilus-mime-actions.c 
 	(nautilus_mime_get_short_list_applications_for_file): 
 	Free uri_scheme.
 	(make_oaf_query_with_uri_scheme_only): Free explicit_iid_query.
 
 	* libnautilus-private/nautilus-metafile.c (destroy): 
 	Unref the private vfs uri, and free the directory uri.
 
 	* libnautilus-private/nautilus-file.c (nautilus_file_get_internal): 
 	Free the string returned by nautilus_directory_get_name_for_self_as_new_file.
 
 	* libnautilus-private/nautilus-file-changes-queue.c 
 	(nautilus_file_changes_consume_changes): 
 	Free the change struct.
 
 	* libnautilus-private/nautilus-directory-async.c 
 	(nautilus_directory_invalidate_count_and_mime_list): 
 	Unref the file after using it.
 
 	* libnautilus/nautilus-idle-queue.c (execute_queued_functions): 
 	Free each list node.
 	(nautilus_idle_queue_destroy): Likewise.

2001-08-22  Ramiro Estrugo  <ramiro@fateware.com>

	* src/nautilus-main.c: (main):
	No longer need to check that we want to kill the nautilus shell
	before initializing preferences.  I used to do this because of the
	way visibilities and defaults were stored using gconf - which led
	to problems about too early initialization for gconf.   It also
	happens that some desktop prefernece checking code was just added
	for a situation when the nautilus shell is about to be killed.
	That was causing criticals, so thats the end of this now uneeded
	check.

2001-08-22  Christian Meyer  <chrisime@gnome.org>

	* src/nautilus-window.c: Removes header includes for eazel services.
	(nautilus_window_constructed): Services part removed.

	* src/nautilus-window-menus.c: Removed header includes for eazel
	services.
	(services_button_callback): Removed.
	(nautilus_window_initialize_menus_part_1): Removed eazel services.

	* src/nautilus-window­toolbars.c: Rmoved header includes for eazel
	services.
	(set_up_toolbar_images): Services removed.

	* src/Makefile.am: Removal of: nautilus-services.[ch],
	nautilus-window-services-ui.[ch], nautilus-servics-ui.xml

	* src/nautilus-services.[ch], src/nautilus-window-services-ui.[ch],
	nautilus-services-ui.xml: Removed, since they aren't necessary anymore.

2001-08-22  Christian Meyer  <chrisime@gnome.org>

	* data/static_bookmarks.xml: Removed Eazel related bookmarks and ad's.
	Added SuSE and Ximian.

2001-08-22  Christian Meyer  <chrisime@gnome.org>

	* src/nautilus-shell-ui.xml: Removed "Community Support"
	entry from file. Removed "Eazel" from feedback tip.

	* src/nautilus-shell.c: In function display_caveat():
	s/"http://www.eazel.com/feedback.html"/<nautilus-list@eazel.com>
	s/Eazel does not/We do not
	Removed eazel-install stuff in function save_window_states.

2001-08-21  Darin Adler  <darin@bentspoon.com>

	* docs/nautilus-io.txt: Add a new document.

2001-08-19  Maciej Stachowiak  <mjs@noisehavoc.org>

	* components/music/nautilus-music-view.c: (get_cell_text),
	(nautilus_music_view_initialize), (get_song_text),
	(music_view_set_selected_song_title), (selection_callback),
	(value_changed_callback), (compare_song_numbers),
	(compare_song_titles), (compare_song_artists),
	(compare_song_times), (compare_song_bitrates), (sort_list),
	(click_column_callback), (list_move_vertical), (list_moveto),
	(list_reveal_row), (play_current_file), (go_to_next_track),
	(nautilus_music_view_update), (nautilus_music_view_load_uri):
	Ported to use EelList instead of GtkCList. This looks better and
	allows for future drag and drop support.

2001-08-18  Darin Adler  <darin@bentspoon.com>

	* libnautilus-private/nautilus-directory-background.c:
	(nautilus_file_background_receive_root_window_changes),
	(set_root_pixmap): Trap errors when doing the XKillClient
	call inside set_root_pixmap. I don't know why it would
	fail, exactly, but we have reports from the field that it
	is failing.

2001-08-16  Darin Adler  <darin@bentspoon.com>

	* libnautilus-private/nautilus-volume-monitor.c:
	(nautilus_volume_monitor_get_mount_name_for_display):
	Corrected a backwards g_return_if_fail!

2001-08-15  Darin Adler  <darin@bentspoon.com>

	A pass at cleaning up the volume monitor. Made all the details of
	NautilusVolume private.

	* libnautilus-private/filesystem-attributes.xml: Changed the
	"description" string to be named "default_volume_name" and also
	marked it to be localized.
	
	* libnautilus-private/nautilus-file-utilities.h:
	* libnautilus-private/nautilus-file-utilities.c:
	(nautilus_get_data_file_path):
	Added a new utility function to locate a file that's either in the
	user's directory or in the Nautilus datadir.
	
	* src/nautilus-property-browser.c: (read_browser_xml): Use
	nautilus_get_data_file_path.

	* libnautilus-private/nautilus-trash-directory.c:
	(get_trash_volume):
	* libnautilus-private/nautilus-trash-monitor.c:
	(add_one_volume_trash):
	* src/file-manager/fm-desktop-icon-view.c: (volume_in_black_list),
	(create_unique_volume_name), (create_mount_link),
	(volume_unmounted_callback), (update_disks_menu):
	* src/nautilus-application.c: (volume_mounted_callback),
	(volume_unmounted_callback):
	* src/nautilus-bookmark-list.c:
	(nautilus_bookmark_list_get_file_path):
	Use only calls from the NautilusVolume public API -- no getting at
	the structure directly. Also fix callers that were using
	nautilus_volume_monitor_get_volume_mount_uri to correctly
	understand that they get the mount path, not the mount URI.
	
	* libnautilus-private/nautilus-volume-monitor.h:
	* libnautilus-private/nautilus-volume-monitor.c:
	(load_file_system_table): Fix storage leaks. Use the new
	nautilus_get_data_file_path. Translate the default volume names as
	they are loaded. Check for duplicate entries while loading the
	table. Don't bother checking the name of the root node, since
	there are plenty of other things about the file that we don't
	check and there's no reason we particularly need to check that.
	Fix some storage leaks. Free the doc, since I'm not seeing a
	"nautilus --quit" segfault.	
	(nautilus_volume_monitor_initialize): Only initialize stuff that
	g_new0 won't set up for us.
	(nautilus_volume_is_removable): Rename so it's a call on
	NautilusVolume, not the NautilusVolumeMonitor.
	(volume_is_removable): Fix logic so we don't have to have so many
	different calls to fclose.
	(nautilus_volume_get_name): Rename so it's a call on
	NautilusVolume, not the NautilusVolumeMonitor.
	(modify_volume_name_for_display): Don't bother supplying a name if
	passed NULL, since that won't ever be helpful the way this is used.
	(nautilus_volume_get_target_uri): Rename so it's a call on
	NautilusVolume, not the NautilusVolumeMonitor.
	(nautilus_volume_should_integrate_trash): Rename so it's a call on
	NautilusVolume, not the NautilusVolumeMonitor. Get the information
	from the file system type, so we don't have to copy it into each
	NautilusVolume object.
	(nautilus_volume_get_mount_path): Rename so it's a call on
	NautilusVolume, and don't call it a URI since it's really a path.
	(nautilus_volume_get_device_type): New call.
	(make_volume_name_from_path): Get the default from the file system
	type rather than passing it in.
	(free_mount_list): Get rid of some dumb extra code.
	(copy_volume), (nautilus_volume_free): Update for smaller set of
	fields.
	(create_volume), (finish_creating_volume),
	(finish_creating_volume_and_prepend): Restructure so we don't need
	to keep so much stuff around in the NautilusVolume object.

	* src/nautilus-first-time-druid.c:
	(druid_set_first_time_file_flag): Some tiny tweaking.
	
2001-08-15  Maciej Stachowiak  <mjs@noisehavoc.org>

	* components/music/Makefile.am: Revert accidental commit of not
	quite done change.

2001-08-15  Darin Adler  <darin@bentspoon.com>

	* components/image-viewer/nautilus-image-view.c:
	(load_image_from_stream): Use a 64K buffer size instead of a 4K
	buffer size.

2001-08-13  Maciej Stachowiak  <mjs@noisehavoc.org>

	* components/music/nautilus-music-view.c:
	(nautilus_music_view_initialize), (get_song_text), (sort_list),
	(click_column_callback), (ensure_uri_is_image),
	(nautilus_music_view_update): A bunch of code cleanup; stop using
	hidden columns in the list view and try to pave the way for better
	model/view separation.

	* src/nautilus-main.c (main): set DISPLAY variable to
	canonicalized version; this is needed to make
 
2001-08-14  Seth Nickell  <snickell@stanford.edu>

	Load filesystems from an XML file rather than hardcoding
	the various attributes and behaviors. Some properties, such
	as for CDDA and NFS, are still hardcoded because they require
	actual code. This also makes it easier to add new filesystems.
	
	* libnautilus-private/filesystem-attributes.xml

	Filesystem description file.
	
	* libnautilus-private/Makefile.am:

	Add filesystem-attribute.xml to the build.

	* libnautilus-private/nautilus-volume-monitor.c: 

	(mount_volume_prepend_filesystem):

	Don't try to detect filesystem strings and associate them
	with an enumeration type...nix the enumeration altogether
	since its not compatible with dynamically loading the
	filesystems.
		
	(get_xml_path), (load_filesystem_attributes_table)

	Functions for reading in filesystem-attribute.xml and
	loading the various filesystems into a hashtable.
	
	(nautilus_volume_monitor_initialize)

	Read in the filesystem attributes table.
	
	(get_removable_volumes), (mount_volume_deactivate), 
	(get_mount_list), (get_current_mount_list),
	(verify_current_mount_state)

	Take a file attributes hashtable, or pass one to a
	subfunction.
	
	(nautilus_volume_monitor_get_target_uri),

	CDDA is the only system we need to deal with in an unusual
	way. Take out a long list and just check for CDDA.
	
	(nautilus_volume_monitor_should_integrate_trash)

	Use information read from the file rather than hardcoding
	a list of filesystems that can use trash (should be the
	same for now).
	
	(make_volume_name_from_path), (mount_volume_make_name)

	Get name out of the filesystem table rather than hardcoding.

	(mount_volume_iso9660_add)

	We were deciding if a device was *really* a CDROM by 
	doing an ioctl on it to determine the drive status. This
	is a good check...except that on systems using DevFS
	devices can be user mountable without being user readable
	by default. Also, on my system it fails if there's no
	disk in the drive itself.

	(mount_volume_auto_add)

	Continue setting the device if its a floppy drive (eventually
	this should probably be cleaned out too), but don't set the
	filesystem type since we don't use the enum anymore.
	
	(mount_volume_cdda_add)

	Set as a CDDA device, but not a CDDA volume (since we don't
	have hardcoded volume types anymore).

	(mount_volume_nfs_add)

	Don't set NFS type since the enum was blown away.

	(create_volume)

	Accept a filesystem table and set attributes read from
	filesystem-attributes.xml if a volume's filesystem is found
	in the table. Perhaps eventually we should just assign a
	reference to the volume entry, but this was simpler for
	now since some functions modify things like the description.
	
	(copy_volume)

	Deal with copying the new attributes.

	* libnautilus-private/nautilus-volume-monitor.h:

	Nix the filesystem enumeration. Change NAUTILUS_DEVICE_CD_ROM
	to NAUTILUS_DEVICE_CDROM
	
	* src/file-manager/fm-desktop-icon-view.c: (create_mount_link),
	(update_disks_menu):

	Deal with rename of NAUTILUS_DEVICE_CD_ROM
	
	* src/nautilus-application.c: (volume_mounted_callback):

	Deal with rename of NAUTILUS_DEVICE_CD_ROM
	
	* AUTHORS:

	Update E-mail address.
	
	* configure.in:

	Make "FAM not found" warning a little more serious and
	informative. We particularly want to encourage distributors
	to enable FAM support.

2001-08-11  Seth Nickell  <snickell@stanford.edu>

	Trying to make nautilus volume monitor work more
	reliably. First step is to make the codebase more
	maintainable so I can start tracking down bugs in
	the volume monitor more easily.
	(I get complaints about this from friends, family, and
	coworkers all the time, so there must be some/one bugs).
	
	* libnautilus-private/nautilus-volume-monitor.h:
	* libnautilus-private/nautilus-volume-monitor.c:
	(nautilus_volume_monitor_initialize_class),
	(nautilus_volume_monitor_get_target_uri),
	(nautilus_volume_monitor_should_integrate_trash),
	(mount_volume_make_name), (mount_volume_deactivate),
	(mount_volume_generic_add), (mount_volume_prepend_filesystem):

	Remove mount_volume_*_add for filesystems that do
	effectively the same thing. This added a large amount of
	clutter to a module that already has a lot of similar
	functions. Add a generic function that accepts the filesystem
	type, and change calls to use this.

	Fix signal in initialize_class to be "nautilus_volume_unmount_failed"
	rather than "nautilus_volume_unmoun_failed" (nobody was assuming
	the broken behavior eithe, I checked, maybe this will fix something).

	Renamed NAUTILUS_VOLUME_REISER to NAUTILUS_VOLUME_REISERFS
	to maintain the naming convention the other filesystems use.

	Changed "unsdos" to "umsdos" everywhere. I don't think a unsdos
	filesystem exists, after web searches, and umsdos *is* one of
	the basic Linux filesystems. I suspect somebody misread a filesystem
	name browsing the kernel compilation menu or somesuch.

	Removed redundant (and erroneous) check for "ufs" type filesystems
	(the check was already listed in the if then statement above).
	
2001-08-07  Darin Adler  <darin@bentspoon.com>

	* components/mozilla/mozilla-events.cpp:
	* components/mozilla/nautilus-mozilla-embed-extensions.cpp:
	Add an include of nsIContentView.h in the hopes that this
	will make it work with newer Mozilla sources.

2001-08-06  Darin Adler  <darin@bentspoon.com>

	* libnautilus-private/nautilus-thumbnails.c:
	(pixel_matches_value): Simplify logic.
	(pixbuf_is_framed): Do size and format reality checks on pixbuf
	before reading the pixels.
	(nautilus_thumbnail_load_framed_image): Handle case where the
	pixbuf loading failed. Handle case where there's no frame. Handle
	case where the frame offsets in the theme data is improperly
	formatted.

2001-08-02  Maciej Stachowiak  <mjs@noisehavoc.org>

	* libnautilus/nautilus-view-standard-main.c:
	(nautilus_view_standard_main_multi): Get display name in a better
	way suggested by Havoc Pennington.

2001-08-01  Mike Fleming  <mfleming@eazel.com>

	Added gnome-vfs authentication dialog support.
	Currently works with HTTP basic and proxy authentication.

	A bug causes the dialog to appear more than once in quick succession
	in some cases.

	Separate processes (eg sidebar components) that need to access
	a protected URL will also pop open their own individual dialogs
	at this point 

	There's also no integration with Mozilla at this point, so
	Mozilla too will prompt separately.

	This code works against gnome-vfs head and the gnome-vfs-1-0
	branch, as well as the soon-to-be-released gnome-vfs 1.0.2

	* libnautilus-private/Makefile.am:
	* libnautilus-private/nautilus-authn-manager.c:
	(construct_password_dialog), (present_authn_dialog_blocking),
	(mark_callback_completed), (authn_dialog_button_clicked),
	(authn_dialog_closed), (authn_dialog_destroyed),
	(present_authn_dialog_nonblocking),
	(run_authn_dialog_on_main_thread), (vfs_authn_callback),
	(nautilus_authn_manager_initialize):
	* libnautilus-private/nautilus-authn-manager.h:
	* src/nautilus-application.c: (finish_startup):

2001-08-01  Darin Adler  <darin@bentspoon.com>

	* THANKS: More people to thank.

2001-07-31  Yanko Kaneti  <yaneti@declera.com>

	* components/help/topleveldocs.xml: remove the extra bg_BG(.cp1251)
	references, part of the gnome cvs wide move from bg_BG to bg

2001-07-27  Darin Adler  <darin@bentspoon.com>

	Fixed bug 8438 (changing desktop between $HOME and .gnome-desktop
	breaks desktop DnD from other apps).

	* src/file-manager/fm-desktop-icon-view.c:
	(desktop_directory_changed_callback): New function to update the
	local variable when the desktop directory changes.
	(fm_desktop_icon_view_initialize): Set up the callback rather than
	just setting up the global variable.

	* configure.in: Fixed code to set up compile-time options. It
	was putting the options into VFS_CFLAGS.

2001-07-25  Maciej Stachowiak  <mjs@noisehavoc.org>

	Fixed bug 6776 (In-place file rename allowed (but doesn't occur)
	at 25% zoom level):

	* src/file-manager/fm-icon-view.c: (fm_icon_view_set_zoom_level):
	Update menus since the sensitivity of "Rename" now depends on the
	zoom level.
	(fm_icon_view_update_menus): Disable the "Rename" item when at
	smallest zoom level, since renaming won't happen anyway.
	
2001-07-24  Darin Adler  <darin@bentspoon.com>

	* libnautilus-private/nautilus-directory-background.c:
	(background_is_desktop): Remove eel_ prefix from name.
	(background_get_desktop_background_window): Remove eel_ prefix
	from name.

	* libnautilus-private/nautilus-icon-factory.c:
	(should_display_image_file_as_itself),
	(nautilus_icon_factory_get_icon_for_file), (load_icon_from_path):
	* libnautilus-private/nautilus-thumbnails.h:
	* libnautilus-private/nautilus-thumbnails.c: (make_thumbnail_uri),
	(nautilus_thumbnail_has_invalid_thumbnail),
	(nautilus_get_thumbnail_uri),
	(nautilus_update_thumbnail_file_renamed),
	(nautilus_remove_thumbnail_for_file), (check_for_thumbnails),
	(make_thumbnails), (nautilus_thumbnail_load_framed_image):
	Remove anti-aliased parameter from most functions, since the
	thumbnails are now the same either way.

	* THANKS:
	* check-THANKS.pl:
	Some more THANKS updates.

	* RPMs-README: No need for this any more.

2001-07-24  Jens Finke <jens@gnome.org>
	
	* components/news/news_channels.xml: Updated KDE rdf location.

2001-07-23  Andy Hertzfeld  <andy@differnet.com>

	changed thumbnailing to not draw the frame into the
	thumbnail images themselves anymore; instead, draw it at the time
	they're loaded. This makes anti-aliased thumbnail variants no
	longer necessary, so they're no longer used.  There's a cheap test so
	old thumbnails aren't framed twice.
	
	* libnautilus-private/nautilus-thumbnails.c: (make_thumbnail_uri),
	(make_thumbnails), (pixel_matches_value), (pixbuf_is_framed),
	(nautilus_thumbnail_load_framed_image):
	don't frame the thumbnails at creation time; instead, provide
	a routine to frame them at load time if necessary.
	
	* libnautilus-private/nautilus-thumbnails.h:
	added nautilus_thumbnail_load_framed_image
	
	* libnautilus-private/nautilus-icon-factory-private.h:
	added nautilus_icon_factory_get_thumbnail_frame
	
	* libnautilus-private/nautilus-icon-factory.c:
	(load_thumbnail_frames), (nautilus_icon_factory_initialize),
	(nautilus_icon_factory_destroy), (icon_theme_changed_callback),
	(load_icon_from_path), (load_named_icon), (load_specific_icon),
	(nautilus_icon_factory_get_thumbnail_frame):
	made it call nautilus_thumbnail_load_framed_image to load
	thumbnails; made the icon factory load the thumbnail frames so it
	doesn't have to be done repeatedly; changed how the aa flag is
	passed around a little, although this could be cleaned up more now.
	
2001-07-23 Benedikt Roth  <Benedikt.Roth@gmx.net>

	* src/file-manager/fm-directory-view.c: (real_update_menus):
	Fix the tip for the "Delete from Trash" item in the right-click menu

2001-07-22  Maciej Stachowiak  <mjs@noisehavoc.org>

	* src/file-manager/fm-desktop-icon-view.c
	(update_trash_link_and_delete_copies): Update the icon even when
	newly creating it, in case the trash state changed while the
	desktop was off. This fixes bug 7956 (improper Trash icon state
	after desktop toggle )

2001-07-22  Maciej Stachowiak  <mjs@noisehavoc.org>

	* libnautilus-private/nautilus-directory-async.c
	(nautilus_file_invalidate_count_and_mime_list): Avoid a ref
	underflow. This was causing a crash noticed by Anders
	Carlsson. I'm so embarassed!

	* src/file-manager/fm-desktop-icon-view.c
	(fm_desktop_icon_view_destroy, delayed_init): Make sure to
	disconnect signals on destroy to avoid a possible crash when
	turning the desktop off and back on, and not using fam.

2001-07-22  Maciej Stachowiak  <mjs@eazel.com>

	* components/music/nautilus-music-view.c (click_column_callback):
	Fix bug 5242 (Selection not kept on-screen after column resort) by
	scrolling the selected item into view on a resort if it's not in
	view already.

2001-07-22  Maciej Stachowiak  <mjs@eazel.com>

	* components/music/nautilus-music-view.c: (get_song_text): Fix the
	remainer of bug 3769 (Music View window redraws upon clicking a
	different song) by making songs with no title show up with "-" for
	the title (I have quite a collection of broken mp3s).

2001-07-22  Maciej Stachowiak  <mjs@eazel.com>

	* components/music/nautilus-music-view.c:
	(read_id_tag): Fix bug 5175 (Music View displays year fields of
	'0'.) by filtering out years that are all zeros or all spaces.
	(filter_out_unset_year): New helper function. 

2001-07-22  Dan Mueth  <d-mueth@uchicago.edu>

	Updating doc build stuff so it works properly on RH7.1 and
	any other newer distributions which have the updated docbook
	tools where db2html doesn't work with GNOME's modified DTD.
	For these systems, we use jw instead of db2html.

	* configure.in:
	* help/sgmldocs.make:

2001-07-22  Maciej Stachowiak  <mjs@eazel.com>

	* components/music/nautilus-music-view.c: (string_non_empty),
	(get_song_text), (play_current_file): Add artist to the info
	displayed about the currently selected song. Also, fix a bug where
	a song entry does not get scrolled into view when the player
	switches to it sometimes. This happened because the song list
	would resize depending on whether or not there was an album
	name. Now if there is no album name (or artist) `-' is displayed
	in the second line.

2001-07-21  Darin Adler  <darin@bentspoon.com>

	* README: Update cvs tags for gnome-vfs, librsvg, eel.

2001-07-21  Anders Carlsson  <andersca@gnome.org>

	* components/help/Makefile.am:
	* components/sample/Makefile.am:
	* libnautilus-adapter/Makefile.am:
	* libnautilus-private/Makefile.am:
	* libnautilus/Makefile.am:
	Remove multiple references to $(NAUTILUS_PRIVATE_LIBS) since 
	having multiple references makes linking very slow with libtool 1.4.

2001-07-20  Maciej Stachowiak  <mjs@eazel.com>

	Fixed bugzilla.eazel.com bug 7015 (Item count not updated when
	copying an empty folder to another).
	
	* libnautilus-private/nautilus-directory-async.c:
	(nautilus_file_invalidate_count_and_mime_list): New function to
	invalidate a directory's item count and item mime list given it's
	corresponding NautilusFile object.
	(nautilus_directory_invalidate_count_and_mime_list): Reimplemented
	in terms of the above.

	* libnautilus-private/nautilus-file-private.h:
	Prototype the new function.

	* libnautilus-private/nautilus-directory.c:
	(nautilus_directory_notify_files_added): If the NautilusDirectory
	for a directory into which files are being moved is not being
	monitored but the NautilusFile is, make sure to invalidate it's
	item count and mime list. This is the corner case that bug 7015
	was tickling.

2001-07-20  Andy Hertzfeld  <andy@differnet.com>

	fixed problem that the reset property was not localizable, since
	it used an image that contained text.  Fixed, by removing the
	text from the image and compositing it on the fly, from a localizable
	string.
	
	* data/patterns/reset.png:
	new version of reset tile without text.
	
	* libnautilus-private/nautilus-customization-data.c:
	(nautilus_customization_data_get_next_element_for_display),
	(add_reset_text), (nautilus_customization_make_pattern_chit):
	composite the reset text on the fly when necessary
	
	* libnautilus-private/nautilus-customization-data.h:
	added a parameter to make_pattern_chit to tell it to draw
	the reset text when necessary
	
	* src/nautilus-property-browser.c: (make_drag_image),
	(make_color_drag_image), (add_reset_property):
	set the reset parameter properly when calling make_pattern_chit.
	
2001-07-20  Andy Hertzfeld  <andy@differnet.com>

	removed the bad hack of attributing special meaning to the
	"reset.png" filename; instead, use a newly defined drop type of
	"x-special/gnome-reset-background".
	
	* libnautilus-private/nautilus-icon-dnd.c:
	(drag_data_received_callback),
	(nautilus_icon_container_get_drop_action), (drag_drop_callback):
	make the icon view handle the new drop type.
	
	* src/nautilus-property-browser.c: (element_clicked_callback):
	make the property browser emit the new drop type for the reset property
	
	* src/nautilus-sidebar.c: (reset_background_callback),
	(nautilus_sidebar_drag_data_received):
	make the sidebar handle the new drop type.
	
2001-07-19  Darin Adler  <darin@bentspoon.com>

	More fixes like the one Alex just did.

	* libnautilus-private/nautilus-icon-container.c: (destroy):
	Move the call to unschedule_keyboard_icon_reveal into
	nautilus_icon_container_clear.
	(nautilus_icon_container_clear): Cancel both of the pending
	icon reveals, since all the icons are gone.
	(icon_destroy): Cancel a pending icon to reveal if the
	icon being destroyed is that icon.

	* libnautilus-private/nautilus-icon-private.h: Remove some
	unused fields.

2001-07-19  Alex Larsson  <alexl@redhat.com>

	* libnautilus-private/nautilus-icon-container.c (nautilus_icon_container_clear):
	Clear details->drop_target. This should fix a hard to trigger DnD segfault.

2001-07-16  Darin Adler  <darin@bentspoon.com>

	* THANKS:
	* check-THANKS.pl:
	Updated thanks for recent changes in ChangeLog.

	* libnautilus-private/nautilus-file-operations.c:
	(build_error_string):
	* libnautilus-private/nautilus-file.c: (get_description):
	Updated the people to tell about various warnings.

2001-07-15  Anders Carlsson  <andersca@codefactory.se>

	* src/file-manager/fm-icon-view.c
	(icon_container_preview_callback): Check that the file mime type
	is correct (that the files is a music file) before calling
	nautilus_sound_can_play_sound () since that function launches esd
	which we don't want to do unless we have a music file.

2001-07-15  Andy Hertzfeld  <andy@differnet.com>

	allowed components to specify their sidebar icons and text info
	through the property bag interface.  Removed the special cases from
	the sidebar and icon factory, and added the relevant properties to the
	hardware and mozilla views.
	
	made the modification date in the sidebar adapt itself gracefully
	to the available space like the list view does, by calling
	nautilus_file_fit_modified_data_as_string.
	
	added an "uptime" display to the hardware view.
	
	* components/hardware/nautilus-hardware-view.c:
	(get_bonobo_properties), (set_bonobo_properties),
	(nautilus_hardware_view_initialize),
	(nautilus_hardware_view_destroy), (update_uptime_text),
	(setup_overview_form), (nautilus_hardware_view_load_uri),
	(make_summary_string):
	
	added a property bag interface for the icon_name and summary_info properties.
	added a field to display the update, and periodically updated it.
	
	* components/mozilla/nautilus-mozilla-content-view.c:
	(get_bonobo_properties), (set_bonobo_properties),
	(nautilus_mozilla_content_view_initialize),
	(nautilus_mozilla_content_view_destroy):
	
	added a property bag inteface for the icon_name and summary_info properties
	made it handle the "man:" protocol with a custom icon
	made it use the file icon for local files.

	* src/nautilus-sidebar-title.c: (get_property_from_component),
	(update_icon), (measure_width_callback), (update_more_info),
	(nautilus_sidebar_title_size_allocate),
	(sidebar_title_create_more_info_label):
	
	made it ask the components for custom icons and info text (through the
	property bags) and use them if available.
	
	made it call nautilus_file_filt modified_data_as_string for an optimal
	modification date format, and made it reconsider when the sidebar size
	changes.
		
	* libnautilus-private/nautilus-icon-factory.c:
	(get_icon_name_for_regular_file):
	removed special cases, since they're handled by the components now
	
	* components/news/nautilus-news.c: (do_destroy), (make_news_view):
	fixed leak where it wasn't releasing the property bag
		 
2001-07-14 John Fleck <jfleck@inkstain.net>

	reviewed by Laszlo Kovacs <laszlo.kovacs@sun.com>
	* components/help/converters/gnome-db2html3/gnome-db2html3.c
	change logic for testing whether a file is sgml or xml
	
2001-07-12  Alex Larsson  <alexl@redhat.com>

	* libnautilus-private/nautilus-monitor.c:
	Use a GIOChannel instead of gdk_input_add. This fixes the bug
	where when the fam connection dies it did gdk_input_remove (fd)
	instead of gdk_input_remove (tag)

2001-07-11  Alex Larsson  <alexl@redhat.com>
	
	* libnautilus-private/nautilus-volume-monitor.[ch]:
	Add support for ext3.

2001-07-11  Darin Adler  <darin@bentspoon.com>

	* components/help/converters/gnome-info2html2/html.c:
	(write_menu_entry_html):
	* components/help/converters/gnome-man2html2/gnome-man2html.c:
	(add_links), (scan_escape), (scan_format), (scan_table),
	(scan_expression), (scan_request), (scan_troff),
	(scan_troff_mandoc), (main):
	* src/nautilus-first-time-druid.c: (load_netscape_proxy_settings):
	* src/nautilus-property-browser.c: (emblem_keyword_valid):
	Fix code that was using <ctype.h> functions and passing char's
	rather than int's (using the standard "cast to unsigned char"
	trick).
	
	* libnautilus-private/nautilus-file.c:
	(nautilus_file_denies_access_permission),
	(nautilus_file_can_set_permissions), (nautilus_file_set_owner),
	(nautilus_file_get_group_name), (nautilus_file_can_set_group),
	(nautilus_file_get_settable_group_names),
	(nautilus_file_set_group):
	Get rid of the assumption that GnomeVFSFileInfo field types match
	the platform-specific uid_t and gid_t. This involves doing a few
	more type casts.
	(nautilus_extract_top_left_text): Fix a use of isprint on a char
	rather than an int.
	
	* libnautilus-private/nautilus-volume-monitor.c: Added ifdefs so
	this file can compile for Solaris without warnings.
	
	* test/test.c: (test_window_set_title_with_pid): Don't assume that
	getpid() returns an int. Instead cast it to unsigned long for
	printing.

2001-07-11  Alex Larsson  <alexl@redhat.com>

	* acconfig.h:
	Add HAVE_LIBFAM

	* configure.in:
	Check for libfam, not only header.

	* libnautilus-private/Makefile.am:
	Link to libfam

	* libnautilus-private/nautilus-monitor.c:
	Use normal fam library calls.

2001-07-11  Benedikt Roth  <Benedikt.Roth@gmx.net>

	* components/text/nautilus-text-view-ui.xml:
	* components/text/nautilus-text-view.c:
	Created a 'Text view' menu to hold the 'Fonts' menu
	and services items

	* components/text/services/google.xml
	* components/text/services/webster.xml: 
	Removed references to http://services.eazel.com
	
2001-07-10  Jonathan Blandford  <jrb@redhat.com>

	* src/nautilus-desktop-window.c (realize): remove flash when
	starting up.

2001-07-10  Darin Adler  <darin@bentspoon.com>

	* libnautilus-private/nautilus-sound.c: (kill_sound_if_necessary),
	(nautilus_sound_kill_sound): Change the kill function to not set
	the GConf value to 0 if it's already 0.  This may help with a
	minor performance problem Yoann found in the directory view.

2001-07-09  Darin Adler  <darin@bentspoon.com>

	* cut-n-paste-code/widgets/gimphwrapbox/gtkwrapbox.c:
	(gtk_wrap_box_expose): Fix a cast so that 64-bit systems
	won't warn. This is similar to the e-paned.c fix I did
	already.

2001-07-08  John Gotts  <jgotts@linuxsavvy.com>

	* data/static_bookmarks.xml:
	Made the bookmarks work again.

2001-07-07  Seth Nickell  <snickell@stanford.edu>

	* libnautilus-private/nautilus-directory-private.h:
	* libnautilus-private/nautilus-metafile.c:
	* libnautilus-private/nautilus-thumbnails.c:
	* src/nautilus-window-menus.c:

	Add includes that were inadevertently pulled in
	by the older kinder GnomeVFS include heirarchy but
	aren't anymore (people forgot to include some headers 
	because the compiler never complained).
	
2001-07-05  Darin Adler  <darin@bentspoon.com>

	* AUTHORS:
	* THANKS:
	* check-THANKS.pl:
	Some credits updates based on recent ChangeLog entries.

2001-07-05  Darin Adler  <darin@bentspoon.com>

	* configure.in: Bump version to 1.0.4.1

	* cut-n-paste-code/widgets/e-paned/e-paned.c: (e_paned_expose):
	Fix type cast that was causing Ben trouble compiling on Solaris.
	
	Take a cut at removing the problem where opening a new window
	causes all the old windows to act as if all items were re-added.

	* libnautilus-private/nautilus-directory.h:
	* libnautilus-private/nautilus-directory.c:
	(nautilus_directory_file_monitor_add),
	(nautilus_self_check_directory):
	* libnautilus-private/nautilus-directory-async.c:
	(nautilus_directory_monitor_add_internal):
	* libnautilus-private/nautilus-directory-private.h:
	* libnautilus-private/nautilus-merged-directory.c:
	(build_merged_callback_list), (merged_file_monitor_add),
	(forward_files_added_cover), (forward_files_changed_cover),
	(monitor_add_directory), (merged_add_real_directory):
	* libnautilus-private/nautilus-trash-file.c: (real_monitor_add):
	* libnautilus-private/nautilus-trash-monitor.c:
	(nautilus_trash_monitor_initialize):
	* libnautilus-private/nautilus-vfs-directory.c:
	(vfs_file_monitor_add):
	* libnautilus-private/nautilus-vfs-file.c: (vfs_file_monitor_add):
	Change monitor_add to take a parameter for a callback function, and
	call that instead of sending out a files_added message when someone
	starts monitoring files.
	
	* components/tree/nautilus-tree-model.c:
	(nautilus_tree_model_node_begin_monitoring_no_connect),
	(nautilus_tree_model_node_begin_monitoring),
	(nautilus_tree_model_directory_files_changed_callback):
	* src/file-manager/fm-directory-view.c: (connect_script_handlers),
	(finish_loading):
	Pass in a callback function to monitor_add, and don't hook up the
	files_added and files_changed signals until after the monitor is
	added.
	
=== Nautilus 1.0.4 ===
	
2001-07-05  Darin Adler  <darin@bentspoon.com>

	Preparation for the 1.0.4 release.

	* configure.in: Bump version to 1.0.4.
	* NEWS: Update for recent changes.

2001-07-05  Benedikt Roth  <Benedikt.Roth@gmx.net>

	* src/nautilus-sidebar.c: (nautilus_sidebar_initialize),
	(nautilus_sidebar_destroy), (nautilus_sidebar_theme_changed),
	(nautilus_sidebar_confirm_trash_changed):
	Fix bug #8133 where changing of the
	NAUTILUS_PREFERENCES_CONFIRM_TRASH value led to inconsistent menu
	descriptions by adding a eel_preferences callback.

2001-07-05  Benedikt Roth  <Benedikt.Roth@gmx.net>

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_display_selection_info):
	Made the statusbar messages when selecting several folders clearer
	and fixed i18n problems

2001-07-03  Benedikt Roth  <Benedikt.Roth@gmx.net>

	* src/file-manager/fm-directory-view.c: (real_update_menus):
	Fix bug #6202, "'Show Trash' menu item should be greyed 
	when viewing trash"

2001-07-03  Zbigniew Chyla  <cyba@gnome.pl>

	* libnautilus/nautilus-view-standard-main.c (struct CallbackData, 
	delayed_quit_timeout_callback, object_destroyed, make_object,
	nautilus_view_standard_main_multi):
	Changed behaviour of view processes, now every process using
	nautilus_view_standard_main/nautilus_view_standard_main_multi will be
	destroyed after 30 seconds of inactivity, not immediately.

2001-06-28  Havoc Pennington  <hp@redhat.com>

	* src/nautilus-first-time-druid.c (druid_finished): Don't create a
	desktop link to Eazel services or open Eazel home page.

2001-07-02  Cody Russell  <bratsche@gnome.org>

	* libnautilus-private/nautilus-volume-monitor.[ch]: Added
	NAUTILUS_VOLUME_PROC.
	nautilus_volume_monitor_should_integrate_trash() now returns
	FALSE for this volume type.  This solves the broken trash can
	on XFS (and probably other non-ext2) filesystems.

2001-07-01  Pablo Saratxaga  <pablo@mandrakesoft.com>

	* libnautilus-private/nautilus-global-preferences.c: added
	no-c-format comments to make gettext not complain

2001-06-29  Ettore Perazzoli  <ettore@ximian.com>

	* libnautilus-private/nautilus-directory-metafile.c
	(get_metafile): Avoid initializing the exception and getting the
	URI if we already have a CORBA object, as they are not needed in
	that case.

2001-06-29  Darin Adler  <darin@bentspoon.com>

	* src/run-nautilus: Get rid of all the "smarts" in this
	script and made it just call Nautilus. The things it was
	doing (disable bug buddy, work around MOZILLA_FIVE_HOME
	for Debian users, call nautilus-verify-rpm.sh) are all
	obsolete now.

2001-06-29  Darin Adler  <darin@bentspoon.com>

	* configure.in: Fix minor problem in DB2HTML3 part that was
	causing trouble for some people.

2001-06-26  Darin Adler  <darin@bentspoon.com>

	* src/nautilus-window-manage-views.c: (begin_location_change):
	Don't force a reload if file monitoring will work properly
	for the location.

	* components/throbber/Makefile.am:
	* icons/sierra/Makefile.am:
	* icons/tahoe/Makefile.am:
	Remove use of empty SUBDIRS. At least some versions of automake
	have trouble with that.

	* src/file-manager/fm-directory-view.c: Formatting tweak.

2001-06-25  Ramiro Estrugo  <ramiro@fateware.com>

	Patch from Miguel Rodríguez Pérez  <migras@atlas.uvigo.es>
 
 	* libnautilus-private/nautilus-thumbnails.c (obfuscate_password): 
 	New function to look for a password in una uri and change it
 	for 6 asterisks.
 	(make_thumbnail_uri): Call obfuscate_passwd before generating the
 	final uri.
 	This prevents the password to be saved in cleartext in 
 	~/.nautilus/thumbnails if the user accesses some remote server.

2001-06-25  Ramiro Estrugo  <ramiro@fateware.com>

	* configure.in:
	Patch from David Sainty <dsainty@redhat.com>.

	Tidy up the mozilla-component option. Now both
	--enable-mozilla-component and --disable-mozilla component do as
	they should.
	
2001-06-18  Ramiro Estrugo  <ramiro@fateware.com>

	* nautilus.spec.in:
	Put the idl files in the main package, not the devel package
	because the perl corba bindings can use the .idl files at run
	time.  Thanks to jacob berkman <jacob@ximian.com> for pointing
	this out.
	
2001-06-17  Maciej Stachowiak  <mjs@noisehavoc.org>

	* components/tree/nautilus-tree-view.c (select_current_location):
	Fix bug 6801 (FIXME ... strcmp should be nautilus_uris_match).

2001-06-15  Fatih Demir <kabalak@gtranslator.org>

	* components/help/converters/gnome-db2html3/*: Added cvsignore
		files where needed.

2001-06-14  Marius Andreiana  <mandreiana@yahoo.com>

	* configure.in: Added ro (Romanian) to ALL_LINGUAS

2001-06-11 John Fleck <jfleck@inkstain.net>

	* reviewed to Laszlo Kovacs <laszlo.kovacs@sun.com>
	* components/help/converters/gnome/db2html3/
	docbook/Makefile.am to include file VERSION in DocBook
	stylesheet

2001-06-11 John Fleck <jfleck@inkstain.net>

	* components/help/converters/gnome-db2html3/gnome-customization
	gnome-customization.xsl
	updating path to including docbook stylesheets

2001-06-11  Darin Adler  <darin@bentspoon.com>

	* configure.in: Updated version to 1.0.3.2 for the 1.0.4
	candidate build.

	* icons/gnome/Makefile.am: Added missing backslash character.
	Without it, many icons didn't get installed.

	* src/nautilus-application.c: (need_to_show_first_time_druid):
	Fix some code that was building a URL by sticking a file://
	onto the front of a file name. I just changed it to use the
	path directly and do a plain unlink instead of gnome_vfs_unlink.

	* src/nautilus-profiler.c:
	(nautilus_profiler_bonobo_ui_report_callback):
	Use gnome_vfs_get_uri_from_local_path instead of just sticking
	a file:// on the front of a path name.

2001-06-10 John Fleck <jfleck@inkstain.net>

	* components/help/converters/gnome-db2html3/Makefile.am:
	fix segfault caused by the fact that we were linking to both
	libxml1 and 2

2001-06-09  Dan Mueth  <d-mueth@uchicago.edu>

	Updated Nautilus User Manual for 1.0.4.

	* help/nautilus-user-manual/C/nautilus-user-manual.sgml:

2001-06-09  Dan Mueth  <d-mueth@uchicago.edu>

	Fixing bug#8327.  (Thanks to John Fleck.)

	* help/nautilus-user-manual/es/nautilus-user-manual.sgml:

2001-06-08  Laszlo Kovacs <laszlo.kovacs@sun.com>

        reviewed by Seth Nickell <snickell@stanford.edu>
        patch containing the build environment for gnome-db2html3,
        the new stylesheet based XML->HTML converter, it all can be activated
        only by a manual change in configure.in, this patch is not active
        by default

        * components/help/converters/gnome-db2html3/docbook/common/Makefile.am:
        * components/help/converters/gnome-db2html3/docbook/html/Makefile.am:
        * components/help/converters/gnome-db2html3/docbook/lib/Makefile.am:
        * components/help/converters/gnome-db2html3/docbook/Makefile.am:
        * components/help/converters/gnome-db2html3/Makefile.am:
        * components/help/converters/gnome-db2html3/gnome-customization/Makefile.am:
        added

        * components/help/converters/gnome-db2html3/docbook/gnome-db2html3.c:
        * components/help/Makefile.am:
        conditional build flag added
        * components/help/converters/Makefile.am: gnome-db2html3 added
        * components/help/help-method.c:
        gnome-db2html3 called depending on build flag
        * configure.in: conditional dependencies for gnome-db2html3 added

2001-06-08  Dan Mueth  <dan@eazel.com>

	Updating Release Notes to contain new Mozilla version
	compatibility information based on Ramiro's updates to the README.

	* help/nautilus-release-notes/C/nautilus-release-notes.sgml:

2001-06-08  Ramiro Estrugo  <ramiro@fateware.com>

	* README:
	Update Mozilla for latest Mozilla 0.9.1 release which is the
	recommended one from now onwards.
	
2001-06-08  Andy Hertzfeld  <andy@differnet.com>

	* icons/gnome/Makefile.am:
	The "i-regular.xml" file that is needed to make
	embedded text work properly was missing, so I added it.
	
	* src/nautilus-sidebar-tabs.c: (draw_or_layout_all_tabs):
	fixed bug where the names of the rightmost tabs cound get cut
	off by tweaking the layout code.
	
2001-06-08  Dan Mueth  <d-mueth@uchicago.edu>

	Updating Nautilus Release Notes for 1.0.4.  Note that we
	probably still need to modify the Mozilla compatibility 
	section.

	* help/nautilus-release-notes/C/nautilus-release-notes.sgml:

2001-06-07  Dan Mueth  <dan@eazel.com>

	Updating Nautilus Quick Reference for 1.0.4 release.

	* help/nautilus-quick-reference/C/index.html:

2001-06-06  Darin Adler  <darin@bentspoon.com>

	* NEWS: Made a list of changes since 1.0.3 to get ready for
	the 1.0.4 release.

2001-06-06  Darin Adler  <darin@bentspoon.com>

	* components/music/nautilus-music-view.c: (play_current_file):
	* libnautilus-private/nautilus-icon-factory.c: (get_cache_time):
	* src/nautilus-window-menus.c: (get_static_bookmarks_file_path):
	Oops, a few of my changes were still in the editor. More places
	where we should follow links.

2001-06-06  Darin Adler  <darin@bentspoon.com>

	Frederic Devernay <Frederic.Devernay@sophia.inria.fr>
	pointed out that the icon factory wasn't following links.
	I found similar problems elsewhere.

	* components/music/nautilus-music-view.c:
	(nautilus_music_view_update):
	* libnautilus-private/nautilus-customization-data.c:
	(nautilus_customization_data_new),
	(nautilus_customization_data_get_next_element_for_display):
	* libnautilus-private/nautilus-icon-factory.c:
	(path_represents_svg_image):
	* libnautilus-private/nautilus-metafile.c:
	(metafile_read_check_for_directory):
	* libnautilus-private/nautilus-thumbnails.c:
	(first_file_more_recent):
	* src/nautilus-link-set-window.c: (get_link_set_names),
	(nautilus_link_set_configure_window):
	* src/nautilus-property-browser.c: (ensure_uri_is_image):
	Updated all places where we were using the gnome-vfs file info
	calls and not following links.

2001-06-03  Seth Nickell  <snickell@stanford.edu>

	Added Ben FrantzDale's <bfrantzdale@hmc.edu> revisions
	of the classic GNOME theme as well as his slightly revised
	classic icons for mime types (where they replace something
	that wasn't modified since GMC). Basically these add
	drop shadows and some higher resolution versions, as well
	as an attractive sidebar. I've made some alterations to his
	theme to make it sit better with our original and added 
	the build stuff.

	* configure.in:
	Update configure.in to add a Makefile for the new sidebar tabs
	directory in the GNOME theme.
	
	* icons/gnome-application-encapsulated_postscript.png:
	* icons/gnome-application-pdf-192.png:
	* icons/gnome-application-pdf.png:
	* icons/gnome-application-pgp-192.png:
	* icons/gnome-application-pgp.png:
	* icons/gnome-application-postscript-192.png:
	* icons/gnome-application-postscript-72.png:
	* icons/gnome-application-postscript-96.png:
	* icons/gnome-application-postscript.png:
	* icons/gnome-application-x-c-header.png:
	* icons/gnome-application-x-c-source.png:
	* icons/gnome-application-x-cc-source.png:
	* icons/gnome-application-x-e-theme.png:
	* icons/gnome-application-x-generic-spreadsheet.png:
	* icons/gnome-application-x-gnome-app-info.png:
	* icons/gnome-application-x-java-source.png:
	* icons/gnome-application-x-kde-app-info.png:
	* icons/gnome-application-x-php.png:
	* icons/gnome-application-x-reject.png:
	* icons/gnome-application-x-scheme-source.png:
	* icons/gnome-application-x-sql.png:
	* icons/gnome-audio-basic.png:
	* icons/gnome-audio-midi.png:
	* icons/gnome-audio-ulaw.png:
	* icons/gnome-audio-x-aiff.png:
	* icons/gnome-audio-x-mod-192.png:
	* icons/gnome-audio-x-mod.png:
	* icons/gnome-audio-x-mp3-192.png:
	* icons/gnome-audio-x-mp3.png:
	* icons/gnome-audio-x-ogg-192.png:
	* icons/gnome-audio-x-ogg.png:
	* icons/gnome-audio-x-pn-realaudio.png:
	* icons/gnome-audio-x-real-192.png:
	* icons/gnome-audio-x-s3m-192.png:
	* icons/gnome-audio-x-s3m.png:
	* icons/gnome-audio-x-stm-192.png:
	* icons/gnome-audio-x-stm.png:
	* icons/gnome-audio-x-voc.png:
	* icons/gnome-audio-x-wav.png:
	* icons/gnome-audio-x-xi-192.png:
	* icons/gnome-audio-x-xi.png:
	* icons/gnome-audio-x-xm.png:
	* icons/gnome-compressed-192.png:
	* icons/gnome-compressed.png:
	* icons/gnome-core.png:
	* icons/gnome-emacs-192.png:
	* icons/gnome-font-afm.png:
	* icons/gnome-font-ttf.png:
	* icons/gnome-font-x-pcf.png:
	* icons/gnome-http-url.png:
	* icons/gnome-image-bmp.png:
	* icons/gnome-image-generic.png:
	* icons/gnome-image-gif.png:
	* icons/gnome-image-ief.png:
	* icons/gnome-image-jpeg.png:
	* icons/gnome-image-pbm.png:
	* icons/gnome-image-pgm.png:
	* icons/gnome-image-png.png:
	* icons/gnome-image-pnm.png:
	* icons/gnome-image-ppm.png:
	* icons/gnome-image-psd.png:
	* icons/gnome-image-ras.png:
	* icons/gnome-image-rgb.png:
	* icons/gnome-image-tga.png:
	* icons/gnome-image-tiff.png:
	* icons/gnome-image-x-xfig.png:
	* icons/gnome-image-xbm.png:
	* icons/gnome-image-xcf.png:
	* icons/gnome-image-xpm.png:
	* icons/gnome-image-xwd.png:
	* icons/gnome-library.png:
	* icons/gnome-manpage.png:
	* icons/gnome-objectfile.png:
	* icons/gnome-pack-deb.png:
	* icons/gnome-pack-rpm.png:
	* icons/gnome-package.png:
	* icons/gnome-tex-192.png:
	* icons/gnome-tex.png:
	* icons/gnome-text-html-192.png:
	* icons/gnome-text-html.png:
	* icons/gnome-text-x-authors.png:
	* icons/gnome-text-x-copying.png:
	* icons/gnome-text-x-credits.png:
	* icons/gnome-text-x-install.png:
	* icons/gnome-text-x-makefile-192.png:
	* icons/gnome-text-x-makefile.png:
	* icons/gnome-text-x-readme.png:
	* icons/gnome-textfile.png:
	* icons/gnome-video-mpeg.png:
	* icons/gnome-video-quicktime.png:
	* icons/gnome-video-x-msvideo.png:
	* icons/gnome-word-192.png:

	Ben's revisions of classic mime type icons that
	we didn't modify (basically he added alpha blended
	drop shadows), and some high res versions.

	* icons/gnome/Makefile.am:
	* icons/gnome/application-x-e-cfg.png:
	* icons/gnome/audio-192.png:
	* icons/gnome/emblem-nowrite-72.png:
	* icons/gnome/emblem-nowrite-96.png:
	* icons/gnome/emblem-nowrite.png:
	* icons/gnome/gnome.xml:
	* icons/gnome/i-core.png:
	* icons/gnome/i-dirclosed.png:
	* icons/gnome/i-directory-12-aa.png:
	* icons/gnome/i-directory-192-aa.png:
	* icons/gnome/i-directory-20-aa.png:
	* icons/gnome/i-directory-20.png:
	* icons/gnome/i-directory-24-aa.png:
	* icons/gnome/i-directory-36-aa.png:
	* icons/gnome/i-directory-72-aa.png:
	* icons/gnome/i-directory-96-aa.png:
	* icons/gnome/i-directory-aa.png:
	* icons/gnome/i-directory-accept-12-aa.png:
	* icons/gnome/i-directory-accept-12.png:
	* icons/gnome/i-directory-accept-192-aa.png:
	* icons/gnome/i-directory-accept-192.png:
	* icons/gnome/i-directory-accept-20-aa.png:
	* icons/gnome/i-directory-accept-20.png:
	* icons/gnome/i-directory-accept-24-aa.png:
	* icons/gnome/i-directory-accept-24.png:
	* icons/gnome/i-directory-accept-36-aa.png:
	* icons/gnome/i-directory-accept-36.png:
	* icons/gnome/i-directory-accept-72-aa.png:
	* icons/gnome/i-directory-accept-72.png:
	* icons/gnome/i-directory-accept-96-aa.png:
	* icons/gnome/i-directory-accept-96.png:
	* icons/gnome/i-directory-accept-aa.png:
	* icons/gnome/i-directory-accept.png:
	* icons/gnome/i-executable.png:
	* icons/gnome/i-music-192.png:
	* icons/gnome/i-music.png:
	* icons/gnome/i-nfs.png:
	* icons/gnome/i-regular-12.png:
	* icons/gnome/i-regular-192.png:
	* icons/gnome/i-regular-24.png:
	* icons/gnome/i-regular-36.png:
	* icons/gnome/i-regular-72.png:
	* icons/gnome/i-regular-96-aa.png:
	* icons/gnome/i-regular.png:
	* icons/gnome/i-regular.xml:
	* icons/gnome/i-stalled.png:
	* icons/gnome/linux-penguin.png:
	* icons/gnome/rpm-directory.png:
	* icons/gnome/sidebar_tab_pieces/.cvsignore:
	* icons/gnome/sidebar_tab_pieces/Makefile.am:
	* icons/gnome/sidebar_tab_pieces/fill-active-prelight.png:
	* icons/gnome/sidebar_tab_pieces/fill-active.png:
	* icons/gnome/sidebar_tab_pieces/fill-empty-space.png:
	* icons/gnome/sidebar_tab_pieces/fill-prelight.png:
	* icons/gnome/sidebar_tab_pieces/fill.png:
	* icons/gnome/sidebar_tab_pieces/left-bumper-active-prelight.png:
	* icons/gnome/sidebar_tab_pieces/left-bumper-active.png:
	* icons/gnome/sidebar_tab_pieces/left-bumper-prelight.png:
	* icons/gnome/sidebar_tab_pieces/left-bumper.png:
	* icons/gnome/sidebar_tab_pieces/middle-normal-normal.png:
	* icons/gnome/sidebar_tab_pieces/middle-normal-prelight.png:
	* icons/gnome/sidebar_tab_pieces/middle-prelight-normal.png:
	* icons/gnome/sidebar_tab_pieces/right-bumper-prelight.png:
	* icons/gnome/sidebar_tab_pieces/right-bumper.png:
	* icons/gnome/sidebar_tab_pieces/right-empty-space.png:
	* icons/gnome/sidebar_tab_pieces/right-top-active-prelight.png:
	* icons/gnome/sidebar_tab_pieces/right-top-active.png:
	* icons/gnome/sidebar_tab_pieces/right-top-prelight.png:
	* icons/gnome/sidebar_tab_pieces/right-top.png:
	* icons/gnome/theme_preview.png:
	* icons/gnome/throbber/001.png:
	* icons/gnome/throbber/002.png:
	* icons/gnome/throbber/003.png:
	* icons/gnome/throbber/004.png:
	* icons/gnome/throbber/005.png:
	* icons/gnome/throbber/006.png:
	* icons/gnome/throbber/007.png:
	* icons/gnome/throbber/008.png:
	* icons/gnome/throbber/009.png:
	* icons/gnome/throbber/010.png:
	* icons/gnome/throbber/011.png:
	* icons/gnome/throbber/012.png:
	* icons/gnome/throbber/013.png:
	* icons/gnome/throbber/014.png:
	* icons/gnome/throbber/015.png:
	* icons/gnome/throbber/Makefile.am:
	* icons/gnome/throbber/rest.png:
	* icons/gnome/trash-empty-192.png:
	* icons/gnome/trash-empty-accept-192.png:
	* icons/gnome/trash-empty-accept.png:
	* icons/gnome/trash-empty.png:
	* icons/gnome/trash-full-192.png:
	* icons/gnome/trash-full.png:
	* icons/i-cdrom-192.png:
	* icons/i-cdrom.png:
	* icons/i-chardev.png:
	* icons/i-floppy.png:
	* icons/i-printer.png:
	* icons/i-sock.png:
	* icons/i-zip.png:

	Revision of the classic GNOME theme.

2001-06-02  Darin Adler  <darin@bentspoon.com>

	* src/nautilus-window-manage-views.c: (update_for_new_location),
	(handle_view_failure), (nautilus_window_set_sidebar_panels):
	Check the sidebar for NULL in a few more places.

2001-06-02  Darin Adler  <darin@bentspoon.com>

	* libnautilus-private/nautilus-volume-monitor.c:
	(modify_volume_name_for_display),
	(nautilus_volume_monitor_get_target_uri),
	(mount_volume_make_cdrom_name), (make_volume_name_from_path),
	(mount_volume_make_name), (mount_volume_activate),
	(mount_volume_deactivate), (get_current_mount_list),
	(update_modifed_volume_name), (verify_current_mount_state),
	(nautilus_volume_monitor_set_volume_name),
	(get_iso9660_volume_name), (load_additional_mount_list_info):
	Change volume name logic to be simpler. Also fixed some assert
	problems with the last check-in.

2001-06-01  Darin Adler  <darin@bentspoon.com>

	Started with patch by Caleb "J." Land <bokonon@rochester.rr.com>
	and added XFS support so that trash will work on XFS volumes.

	* libnautilus-private/nautilus-volume-monitor.h:
	* libnautilus-private/nautilus-volume-monitor.c:
	(nautilus_volume_monitor_should_integrate_trash),
	(make_volume_name_from_path), (mount_volume_get_name),
	(do_volume_activate), (mount_volume_activate),
	(verify_current_mount_state), (mount_volume_ext2_add),
	(mount_volume_udf_add), (mount_volume_vfat_add),
	(mount_volume_msdos_add), (mount_volume_affs_add),
	(mount_volume_auto_add), (mount_volume_fat_add),
	(mount_volume_hpfs_add), (mount_volume_hsfs_add),
	(mount_volume_minix_add), (mount_volume_proc_add),
	(mount_volume_reiserfs_add), (mount_volume_ufs_add),
	(mount_volume_smb_add), (mount_volume_unsdos_add),
	(mount_volume_xenix_add), (mount_volume_xfs_add),
	(mount_volume_xiafs_add), (copy_volume),
	(load_additional_mount_list_info),
	(mount_volume_prepend_filesystem):
	Added an XFS case and crunched code a bit.
	
	Rolled in patch by Johan Dahlin <zilch.am@home.se> to install the
	public IDL files in $(datadir)/idl so that non-C programmers can
	use them.

	* libnautilus/Makefile.am: Install the IDL files.

	Also added them to the .spec file.

	* nautilus.spec.in: Install the IDL files as part of nautilus-devel.

2001-06-01  Darin Adler  <darin@bentspoon.com>

	Rolled in patch by Juan Pablo Mendoza <pablo_juan@yahoo.com> to
	make the file dialog show up in the right position instead of
	showing up in one place and then moving right away.

	* libnautilus-private/nautilus-file-operations.c:
	(create_transfer_dialog): Move gtk_show_widget until after the
	center_dialog_over_window call.

2001-06-01  Darin Adler  <darin@bentspoon.com>

	Fixed mistakes in my MIME type change from yesterday.

	* libnautilus-private/nautilus-mime-actions.c:
	(build_joined_string): Correct variable so we build the string
	from all the elements in the list, not just the first element
	repeated over and over again.
	(nautilus_mime_get_short_list_components_for_file): Remove stray
	single-quote character so we build a legal query. The queries were
	all failing due to this typo.

	* src/nautilus-window.c: Spacing tweak.
	* NEWS: Remove lack-of-tinderbox lament.

2001-06-01  Darin Adler  <darin@bentspoon.com>

	Integrated revised version of patch by zilch.am@home.se to fix
	problems typing characters with values > 127 on some systems.

	* libnautilus-private/nautilus-icon-container.c: (match_best_name):
	Cast the result of tolower to a (char) before comparing it with
	another char.

2001-05-31  Darin Adler  <darin@bentspoon.com>

	Integrated patch by limval@yahoo.com to make typing and clicking
	faster by sending fewer "selection_changed" signals. This may fix
	bug 5010.

	* libnautilus-private/nautilus-entry.c: (nautilus_entry_key_press),
	(nautilus_entry_motion_notify): Only send the "selection_changed"
	signal when a selection was there to change.

2001-05-31  Darin Adler  <darin@bentspoon.com>

	* src/nautilus-window-manage-views.c: (update_title): Missed a
	place that required a non-NULL sidebar. Thanks to Miguel
	Rodriguez Perez <migras@atlas.uvigo.es> for pointing it out.

2001-05-31  Darin Adler  <darin@bentspoon.com>

	Fixed a bug where the MIME type components short list query was
	not sorted. This could result in the wrong default component being
	selected, and may be the problem that caused some users to get the
	text component instead of the Mozilla web page component.

	* libnautilus-private/nautilus-mime-actions.c:
	(nautilus_mime_get_default_component_for_file_internal): Update
	since nautilus_do_component_query no longer takes an &ev.
	(nautilus_mime_get_short_list_applications_for_file): Remove
	unused ev variable. Fix problem where the user's added items would
	be added in reverse order.
	(build_joined_string): New helper function.
	(nautilus_mime_get_short_list_components_for_file): Update since
	nautilus_do_component_query no longer takes an &ev. Pass in a
	sorting order to the query so we don't lose the order of the short
	list.
	(nautilus_mime_actions_file_needs_full_file_attributes): Update
	since nautilus_do_component_query no longer takes an &ev.
	(nautilus_mime_get_all_components_for_file): Update since
	nautilus_do_component_query no longer takes an &ev.
	(mime_get_all_components_for_uri_scheme): Update since
	nautilus_do_component_query no longer takes an &ev.
	(nautilus_do_component_query): Update to use its own &ev instead of
	take one passed in. None of the callers were looking at the &ev.
	
	* libnautilus-private/nautilus-directory-async.c: Bumped the
	number of items per call back up. Now that we've done other bug
	fixes, this makes things faster overall, not slower, although it
	does make the time until the first icon shows up a bit longer.
	
	* src/nautilus-sidebar-title.c: (nautilus_sidebar_title_set_file):
	Don't monitor the directory item count. If the main view monitors
	it we'll display it. If the main view doesn't, we'll show the old
	"last known" value or nothing. It's better to do less I/O and
	sometimes be wrong than do more I/O to always be right in this
	case.
	
	* src/nautilus-window.c: (add_sidebar_panel_callback),
	(nautilus_window_initialize), (nautilus_window_constructed),
	(nautilus_window_add_sidebar_panel),
	(update_sidebar_panels_from_preferences),
	(nautilus_window_hide_sidebar), (nautilus_window_show_sidebar),
	(nautilus_window_sidebar_showing):
	Simplify sidebar logic. Among other things, we no longer create an
	invisible sidebar for the desktop.

	* libnautilus-private/nautilus-icon-canvas-item.c:
	(in_single_click_mode): Use "(void)", not "()".
	
	* libnautilus-private/nautilus-icon-container.c:
	(nautilus_icon_container_did_not_drag): Coding style tweak.

2001-05-29 John Fleck <jfleck@inkstain.net>

	Initial checkin of gnome-db2html3, the new DocBook xml->html converter

	* components/help/converters/gnome-db2html3/
	  gnome-db2html3.c, README, AUTHORS
	* components/help/converters/gnome-db2html3/gnome-customization,
	  which contains GNOME customization stylesheet
	* components/help/converters/gnome-db2html3/docbook/, which
	  contains Norman Walsh's xsl stylesheet extravaganza

	(the actual checkin was done the 29th, but there was a lock on the
	ChangeLog, which is why this is being checked in a day later)
	
2001-05-23  Darin Adler  <darin@eazel.com>

	* libnautilus-private/nautilus-global-preferences.c: Added a
	default for the ADD_TO_SESSION preference. This should fix the
	problem where some people don't get any session
	management. Miguel's patch removed the code to set this preference
	in the first time druid so we need to default to TRUE.
	
	* libnautilus-private/nautilus-file.c:
	(nautilus_file_get_string_attribute_with_default): Used return
	statements to simplify the logic a bit.

2001-05-22  John Harper  <jsh@pixelslut.com>

	Fallout from fixing bug 8220 (Having Ctrl as default "modifier
	key used for default WM shortcuts" breaks everything...):

	* libnautilus-private/nautilus-icon-container.c
	(keyboard_space, keyboard_move_to): changed to use Control
	modifier instead of Alt

2001-05-22  Darin Adler  <darin@eazel.com>

	Fixed problem compiling with new gettext:

	* hack-macros/gnome.m4: Add BUILD_INCLUDED_LIBINTL for
	compatibility with the new gettext.
	
	Fixed a problem with the throbber detecting that its X window is
	gone. Based on suggestions from Owen Taylor.
	
	* libnautilus/nautilus-bonobo-workarounds.h:
	* libnautilus/nautilus-bonobo-workarounds.c:
	(destroy_later_callback), (destroyed_before_timeout_callback),
	(nautilus_bonobo_object_force_destroy_later): Changed to "destroy
	later" instead of "destroy at idle". This makes us less likely to
	experience race conditions.

	* src/nautilus-window.c: (nautilus_window_initialize_class),
	(nautilus_window_unrealize), (nautilus_window_destroy): Moved the
	throbber destruction to unrealize so we destroy the throbber
	before we destroy its X window.

	Starting with patch by Anders Carlsson <andersca@gnu.org>, added
	both prelighting and tracking to the throbber, also making it take
	action on release, not press.

	* components/throbber/nautilus-throbber.c:
	(nautilus_throbber_initialize_class): Add handlers for enter,
	leave, and release.
	(nautilus_throbber_initialize): Set flags so we get enter and
	leave events.
	(select_throbber_image): Ref the image that's returned.
	(draw_throbber_image): Make the image be prelit if the mouse is
	over the throbber but it wasn't clicked, and darkened if the mouse
	is over the throbber and it was clicked.
	(nautilus_throbber_enter_notify_event): Set flag and request
	redraw to prelight.
	(nautilus_throbber_leave_notify_event): Set flag and request
	redraw to un-prelight.
	(nautilus_throbber_button_press_event): Set flag to indicate we
	hit the button in the throbber. Also, respond only to left clicks.
	(nautilus_throbber_button_release_event): Look at flag set in
	press event. Do the work here now instead of at press time since
	we are more like a real button.

	Rolled in change by Miguel Rodríguez Pérez <migrax@terra.es> to
	fix volume mounting problems:

	* configure.in: Check for hasmntopt.
	* libnautilus-private/nautilus-volume-monitor.c:
	(get_removable_volumes): Fix typo (HAVE_MNTTENT_H ->
	HAVE_MNTENT_H).
	
	Integrated patch by Miguel Rodríguez Pérez <migrax@terra.es> to
	make Nautilus not try to preview MPEG lists:

	* src/file-manager/fm-icon-view.c:
	(icon_container_preview_callback): Made audio/x-mpegurl another
	exception to the list of audio types we can preview.

	Rolled in change by Dennis Smit <synap@area101.penguin.nl>:
 
	* THANKS: added more translators that were missing from the
	THANKS file (names from all the .po files in ./po).

	Other updates to THANKS:

	* THANKS: Added Jon K Hellan.
 	* check-THANKS.pl: Fixed logic so you can be credited as both an
	author and translator.

	Other changes:

	* src/file-manager/fm-list-view.c: (get_default_zoom_level): Fix
	typo (storaged -> storage).
	
	* src/nautilus-shell-ui.xml:
	* src/file-manager/nautilus-directory-view-ui.xml:
	Fixed keybindings entries to use the correct tags as described by
	ui-xml.txt.

2001-05-21  Andy Hertzfeld  <andy@eazel.com>

	made the news panel flash less by defering async updates with a timer
	task, so ones that fire close together are coalesced.
	
	* components/news/nautilus-news.c: (do_destroy),
	(rss_logo_callback), (update_timeout_callback),
	(queue_update_size_and_redraw), (rss_read_done_callback),
	(make_remove_widgets), (make_news_view):

2001-05-18  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	Code reviewed by Darin Adler <darin@bentspoon.com>.
	
	* src/file-manager/fm-directory-view.c (display_pending_idle_callback): 
	return TRUE if real_display_pending_files() return FALSE which mean 
	that there is other icon to be drawn (the idle won't be removed until
	the idle callback return FALSE).

	return FALSE if real_display_pending_files() return TRUE, which mean
	all files were drawn.

2001-05-18  Jon K Hellan  <hellan@acm.org>

	Code reviewed by Darin Adler <darin@bentspoon.com>

	* components/music/mpg123.h (struct id3v1tag_t): Fix track info.
	(struct id3tag_t): Fix track info. Not tested for v2, but big
	enough for what can be represented in v1.1.

	* components/music/mpg123.c (mpg123_id3v1_to_id3v2): Fix track
	info. Track in id3v1.1 is an 8 bit integer, not a string.
	Track is still unimplemented for id3v2. I did not fix it, as I
	don't have examples to test with.

2001-05-18  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	Code reviewed by Darin Adler <darin@bentspoon.com>,
	also, thanks for the help solving this issue.
	
	* src/file-manager/fm-directory-view.c (g_list_split_off_first_n): 
	moved from fm-list-view.c.
	(real_display_pending_files): move the fm-list-view.c function to
	display pending file, but remove the clist sorting code.
	(FILES_TO_PROCESS_AT_ONCE): new constant, appear to be a better name
	than LIST_VIEW_DISPLAY_PENDING_FILES_GROUP_SIZE.

	* src/file-manager/fm-list-view.c (LIST_VIEW_DISPLAY_PENDING_FILES_GROUP_SIZE): 
	removed this constant.
	(fm_list_view_display_pending_files): just sort the list by the clist criteria
	then call the parent function to display_pending_file.
	(g_list_split_off_first_n): removed.

	This should fix the issue where UI response (icon drawing) would take
	a long time because the directory loaded was cached by the kernel.
	We now draw with a fixed maximum number of files at once.
	
	The list view code was already doing that, so the code was just moved,
	and adaptated for use in directory view, so list view has the same 
	behavior as before without any code being duplicated.

2001-05-17  Darin Adler  <darin@eazel.com>

	Yoann and I did some more debugging and analysis and we stumbled
	over a bug that was responsible for some big slowdowns.

	* libnautilus-private/nautilus-directory-async.c:
	(activation_uri_start): Fixed bug that was causing activation URI
	reads to work strangely.
	
	* src/file-manager/nautilus-directory-view-ui.xml:
	* src/file-manager/fm-directory-view.c: (delete_callback),
	(bonobo_control_activate_callback), (fm_directory_view_destroy):
	* src/nautilus-shell-ui.xml:
	* src/nautilus-window.c: (nautilus_window_initialize_class),
	(nautilus_window_realize):
	Rip out keybinding hack and use Bonobo's (undocumented as far as I
	can tell) keybinding machinery instead.
	
	* libnautilus-private/nautilus-metafile.c: (schedule_next_read):
	Use (void), not ().
	
2001-05-17  Darin Adler  <darin@eazel.com>

	* configure.in:
	* nautilus.spec.in:
	Don't require ammonite any more in the default Nautilus RPM. I
	left the ability to compile ammonite support in for now. That can
	be removed at any time, but it doesn't hurt anybody.

	* libnautilus-private/nautilus-global-preferences.c: Change default
	web search to use google instead of the defunct Eazel search page.

2001-05-16  Darin Adler  <darin@eazel.com>

	* configure.in: Up version to 1.0.3.1 so we don't confuse cvs
	builds with the release.
	
	* libnautilus-private/nautilus-file.c:
	(nautilus_file_fit_date_as_string): Fix i18n problem by calling
	_() on strings before using.
	
	* src/file-manager/fm-directory-view.c: (key_press_event_callback),
	(bonobo_control_activate_callback), (fm_directory_view_destroy):
	* src/nautilus-window.c: (nautilus_window_key_press_event):
	Change key press event callbacks to run only after the parent
	class. This makes keys go to the focused text field first, so
	hitting delete while editing a file name doesn't delete the file.

2001-05-16  Darin Adler  <darin@eazel.com>

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_destroy), (activate_callback),
	(cancel_activate_callback), (fm_directory_view_activate_file),
	Got rid of monitor_file_for_activation, another example of this
	same loose end as last time.
	
	* src/nautilus-window-manage-views.c:
	(set_to_pending_location_and_selection): There was an overzealous
	assert in here. Looked into why it fired, and fixed it up.

2001-05-16  Darin Adler  <darin@eazel.com>

	* src/nautilus-window-private.h:
	* src/nautilus-window-manage-views.c: (free_location_change),
	(begin_location_change):
	Finished up a loose end from when I made the change to
	determine_initial_view to not get full attributes. This leftover
	code was causing an extra directory load.

	* THANKS: Added Yoann.
	
2001-05-15  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar.c: (notify_current_sidebar_view),
	(nautilus_sidebar_activate_panel),
	(nautilus_sidebar_deactivate_panel):
	at Darin's urging, coalesced the open and closed properties into a
	single one with a value.

	* components/news/nautilus-news.c: (get_bonobo_properties),
	(set_bonobo_properties), (nautilus_news_load_location):
	made it maintain the closed state and made load_location only redraw
	when opened.
	
2001-05-13  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* libnautilus-private/nautilus-directory-async.c (DIRECTORY_LOAD_ITEMS_PER_CALLBACK): 
	Change from 32 item by callback to 10.
	This is much better for UI response time and will prevent having
	too much latency time when loading the directory.

	* src/file-manager/fm-directory-view.c (DISPLAY_TIMEOUT_INTERVAL_MSECS): 
	Change from 700 ms to 100 ms, this is much better for the user
	as he won't see any latency time before drawing start.

	Theses are the better experienced setting for now.
	
2001-05-13  Maciej Stachowiak  <mjs@eazel.com>

	Integrated patch from Yoann Vandoorselaere
	<yoann@mandrakesoft.com>. Yoann found that double-clicking on on a
	directory would wait for all the files to be read in before
	displaying anything, while typing the path in the location bar
	would should proper progressive loading. This checkin solves that
	problem.
	
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_activate_file): Only call_when_ready on the
	minimum attributes, not full. All the checks in activate_callback
	only depend on the minimum attributes, and do not need the extra
	directory item mime types attribute.

2001-05-11  Darin Adler  <darin@eazel.com>

	reviewed by: Yoann Vandoorselaere <yoann@mandrakesoft.com>

	Yoann Vandoorselaere <yoann@mandrakesoft.com> discovered that the
	code to load a directory was accidentally waiting for all the
	files to be read in before displaying anything. This fixes the two
	problems that caused that, but there are remaining loose ends
	(it's not entirely clear why View As Music is still showing
	properly in the View menu).

	* libnautilus-private/nautilus-directory-private.h:
	* libnautilus-private/nautilus-directory-async.c:
	(nautilus_directory_call_when_ready_internal): Take a parameter to
	say whether to wait for all the files in the file list, instead of
	deducing it from other parameters.
	
	* libnautilus-private/nautilus-directory.h:
	* libnautilus-private/nautilus-directory.c:
	(nautilus_directory_call_when_ready): Take a parameter to say
	whether to wait for all the files in the file list, instead of
	deducing it from other parameters.
	(nautilus_self_check_directory): Pass TRUE so we wait for the file
	list.
	
	* libnautilus-private/nautilus-merged-directory.c:
	(merged_call_when_ready): Pass through the new boolean.
	* libnautilus-private/nautilus-trash-file.c:
	(real_call_when_ready): Pass FALSE since there is no file list for
	a single file.
	* libnautilus-private/nautilus-vfs-directory.c:
	(vfs_call_when_ready): Pass through the new boolean.
	* libnautilus-private/nautilus-vfs-file.c:
	(vfs_file_call_when_ready): Pass FALSE since there is no file list
	for a single file.
	
	* src/nautilus-applicable-views.c:
	(nautilus_determine_initial_view),
	(nautilus_determine_initial_view_cancel): Removed the code to get
	full file attributes after getting the minimum required if
	nautilus_mime_actions_file_needs_full_file_attributes return
	TRUE. We want to make the choice fast, and it's OK if we choose
	poorly as a result. The question is whether this will cause any
	real end-user problems.

	* src/file-manager/fm-directory-view.c:
	(call_when_ready_on_scripts_directory): Pass TRUE so we read the
	entire scripts directory.
	(load_directory): Pass FALSE so we don't wait for all the files to
	be loaded before starting to display them. This is the core of the
	fix.
	
	* components/tree/nautilus-tree-change-queue.c:
	(nautilus_tree_change_queue_enqueue): A place where we can use
	g_slist_prepend instead of g_slist_append.
	* src/nautilus-complex-search-bar.c:
	(nautilus_complex_search_bar_initialize): A place where we can use
	g_slist_prepend instead of g_slist_append.
	
2001-05-10  John Sullivan  <sullivan@eazel.com>

	Made the thumbnail mechanism respect the "PUBLIC_METADATA"
	preference, so if you change "Make Folder Appearance Details
	Public" to Never (in Speed Tradeoffs at Advanced user level),
	thumbnails will always be created in ~/.nautilus/thumbnails,
	instead of in a .thumbnails subdirectory in each directory.
	Thanks to Michael Rothwell <rothwell@holly-springs.nc.us> for
	the idea and a first pass at the code.

	* libnautilus-private/nautilus-thumbnails.h:
	* libnautilus-private/nautilus-thumbnails.c: 
	(uri_is_local): 
	New convenience function, calls gnome_vfs_uri_is_local
	(prefer_global_thumbnails_location): New function that
	checks preference value.
	(make_thumbnail_uri): Call preference-checking function.
	(first_file_more_recent),
	(nautilus_thumbnail_has_invalid_thumbnail),
	(nautilus_get_thumbnail_uri),
	(nautilus_update_thumbnail_file_renamed_one),
	(nautilus_update_thumbnail_file_renamed),
	(nautilus_remove_thumbnail_for_file_one),
	(nautilus_remove_thumbnail_for_file): Use uri_is_local () to
	reduce duplicated code; change some parameter names for clarity.

2001-05-10  Darin Adler  <darin@eazel.com>

	* components/help/hyperbola-filefmt.c:
	(prepend_help_dir_if_exists), (fmt_help_populate_tree):
	* components/mozilla/nautilus-mozilla-content-view.c:
	(mozilla_view_create_charset_encoding_submenu),
	(mozilla_new_window_callback),
	(should_uri_navigate_bypass_nautilus),
	(should_mozilla_load_uri_directly):
	* components/music/fileinfo.c: (mpg123_file_info_box):
	* components/music/nautilus-music-view.c:
	(nautilus_music_view_update):
	* components/notes/nautilus-notes.c: (notes_load_metainfo):
	* components/throbber/nautilus-throbber.c:
	(nautilus_throbber_load_images):
	* components/tree/nautilus-tree-node.c:
	(nautilus_tree_node_set_parent):
	* libnautilus-private/nautilus-directory-background.c:
	(nautilus_connect_background_to_file_metadata):
	* libnautilus-private/nautilus-directory.c:
	(nautilus_self_check_directory):
	* libnautilus-private/nautilus-file-changes-queue.c:
	(nautilus_file_changes_consume_changes):
	* libnautilus-private/nautilus-file-dnd.c:
	(nautilus_drag_file_receive_dropped_keyword):
	* libnautilus-private/nautilus-file-operations.c:
	(handle_transfer_ok), (nautilus_file_operations_new_folder):
	* libnautilus-private/nautilus-file.c: (nautilus_self_check_file):
	* libnautilus-private/nautilus-icon-container.c:
	(lay_down_icons_tblr):
	* libnautilus-private/nautilus-mime-actions.c:
	(nautilus_do_component_query):
	* libnautilus-private/nautilus-search-uri.c: (tokenize_uri):
	* libnautilus-private/nautilus-theme.c: (theme_list_prepend),
	(theme_get_themes_for_location), (theme_get_default_themes),
	(nautilus_theme_remove_user_theme):
	* libnautilus-private/nautilus-thumbnails.c:
	(nautilus_get_thumbnail_uri):
	* libnautilus-private/nautilus-trash-monitor.c:
	(nautilus_trash_monitor_initialize), (add_one_volume_trash):
	* libnautilus-private/nautilus-volume-monitor.c:
	(get_removable_volumes), (build_volume_list_delta),
	(get_mount_list), (get_current_mount_list),
	(mount_volume_prepend_filesystem):
	* src/file-manager/fm-directory-view.c: (prepend_uri_one),
	(fm_directory_view_create_links_for_files),
	(fm_directory_view_duplicate_selection):
	* src/file-manager/fm-properties-window.c:
	(property_button_toggled):
	* src/nautilus-window-manage-views.c:
	(determined_initial_view_callback):
	Changed code that uses g_list_append to use g_list_prepend in all
	the cases where it was simple enough.

2001-05-10  Darin Adler  <darin@eazel.com>

	Integrated a patch from peter@ximian.com to move the
	MOZILLA_FIVE_HOME-setting code from the main Nautilus program
	(where it does no good) to the Mozilla component (which is a nicer
	place for it anyway).

	While integrating the patch I made some other small cleanups to
	the Mozilla component and the patch itself. I removed the code to
	set up LD_LIBRARY_PATH, since it's not needed, and changed the name
	of some things and simplified others.

	* components/mozilla/Makefile.am: Define PREFIX.
	* components/mozilla/main.c: (is_good_mozilla_path),
	(get_mozilla_path), (set_up_MOZILLA_FIVE_HOME), (main): Add the
	new code to set up MOZILLA_FIVE_HOME.
	
	* src/nautilus-application.c: (finish_startup): Remove the code
	from the old place.

	* check-THANKS.pl: Updated.

2001-05-09  Darin Adler  <darin@eazel.com>

	* libnautilus-private/nautilus-metafile-factory.c:
	* libnautilus-private/nautilus-vfs-directory.c:
	* libnautilus-private/nautilus-vfs-file.c:
	Added dummy members so we have no illegal empty structures.
	
	* src/nautilus-sidebar-title.c: (update_emblems): Get rid of some
	dead code.

2001-05-09  Darin Adler  <darin@eazel.com>

	* README: Updated required versions of packages.

2001-05-08  Darin Adler  <darin@eazel.com>

	Started with patch by Yoann Vandoorselaere
	<yoann@mandrakesoft.com> to not re-open /proc/mounts each time,
	but to simply rewind it instead. The patch had a lot of problems
	on Solaris and when HAVE_CDDA is true, but I reworked it so it
	should be OK.

	* libnautilus-private/nautilus-volume-monitor.c: (get_mount_list),
	(get_current_mount_list): Use rewind.

2001-05-08  Darin Adler  <darin@eazel.com>

	Integrated a fixed version of Gene's patch to compile under
	FreeBSD.

	* libnautilus-private/nautilus-volume-monitor.c:
	(has_removable_mntent_options), (get_removable_volumes),
	(volume_is_removable), (volume_is_read_only),
	(nautilus_volume_monitor_mount_unmount_removable),
	(nautilus_volume_monitor_get_mount_name_for_display): Added more
	ifdefs all over the place. This could be done more elegantly some
	day.

2001-05-08  Darin Adler  <darin@eazel.com>

	Integrated patch by Yoann Vandoorselaere <yoann@mandrakesoft.com>
	to fix a problem where we would try to get metadata for all files
	in the home directory if it was set to be used as the desktop
	directory.

	* libnautilus-private/nautilus-file-utilities.h:
	* libnautilus-private/nautilus-file-utilities.c:
	(nautilus_get_desktop_directory): Changed this to not bother with
	the call to create the directory when the home directory is used
	as the desktop.
	(nautilus_get_gmc_desktop_directory): New function.
	
	* libnautilus-private/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_for_file): Use
	nautilus_get_gmc_desktop_directory for the check when deciding to
	look for old-fashioned gmc metadata.

=== Nautilus 1.0.3 ===
	
2001-05-08  Ramiro Estrugo  <ramiro@eazel.com>

	* components/mozilla/Makefile.am:
	* configure.in:
	* README:
	Remove some Mozilla Milestone cruft.  Make the Mozilla component
	build with the newly released Mozilla 0.9.  Update the README with
	the latest Mozilla 0.9 support.
	
2001-05-07  John Sullivan  <sullivan@eazel.com>

	reviewed by: Darin Adler  <darin@eazel.com>

	Fixed bug 8122 (Folders opened from the desktop should not
	reuse frontmost window). The previous behavior was intended to
	match the behavior of web browsers, but user feedback made it
	clear that it was confusing and annoying people too much.

	* src/nautilus-window-manage-views.c: 
	(get_topmost_nautilus_window_in_current_workspace_and_area):
	Removed this no-longer-needed function.
	(open_location): Always create a new window in the desktop case.

2001-05-07  Darin Adler  <darin@eazel.com>

	reviewed by: John Sullivan <sullivan@eazel.com>

	Fix bug 8251 (Mozilla component crashes every time I try to view a
	web page) by putting the same logic for locating Mozilla that is
	used by galeon into Nautilus.

	* src/nautilus-application.c: (is_mozilla_path_good),
	(get_mozilla_path), (find_mozilla): Code to find Mozilla and set
	up some environment variables that matches the code in galeon's
	startup script.
	(finish_startup): New function for initialization code that should
	be done only in the main Nautilus, not in clients that are going
	to contact the main Nautilus. More initialization should be moved
	in here over time. Calls find_mozilla among other things.
	(nautilus_application_startup): Moved the sound initialization and
	the code to migrate desktop directory contents inside the new
	initialization function.

2001-05-07  Robin * Slomkowski  <rslomkow@rslomkow.org>

	* src/nautilus-first-time-druid.c: (make_title_page_icon_box):
	changed "arlo/i-directory-aa.png" to "crux_eggplant/i-directory-aa.png"
	as the arlo directory has been renamed.

2001-05-04  Jonathan Blandford  <jrb@webwynk.net>

	* src/file-manager/fm-icon-view.c
	(icon_container_preview_callback): Possibly play the file if it's
	an ogg.

	* src/file-manager/fm-icon-view.c (play_file): Check for ogg
	file.

2001-05-04  Darin Adler  <darin@eazel.com>

	* nautilus-installer.spec.in: Removed this obsolete file.

2001-05-04  Darin Adler  <darin@eazel.com>

	* THANKS: Add an entry for Bart.
	* indent.sh: Update switches (one was wrong for Nautilus style).

2001-05-04  Darin Adler  <darin@eazel.com>

	* libnautilus-private/.cvsignore: Update for name change.

2001-05-04  Darin Adler  <darin@eazel.com>

	* libnautilus-private/nautilus-mime-actions.c:
	(is_known_mime_type): Fix mistake where we put quotes
	around GNOME_VFS_MIME_TYPE_UNKNOWN. Use g_strcasecmp.
	(nautilus_mime_get_default_action_type_for_file),
	(application_supports_uri_scheme): Use g_strcasecmp.

2001-05-04  Robin * Slomkowski  <rslomkow@rslomkow.org>

	* configure.in: upped version required of eel to 1.0 and
	  librsvg to 1.0.0

2001-05-04  Robin * Slomkowski  <rslomkow@rslomkow.org>

	* configure.in: upped versions required, medusa >= 0.5.1
	  ammonite >= 1.0.2, gnome-vfs >= 1.0.1

2001-05-04  Robin * Slomkowski  <rslomkow@rslomkow.org>

	* configure.in: requires eel 0.1

2001-05-04  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in:
	No need to set gconf flags here since eel will have already done so.
	
	* nautilus.spec.in:
	Change the BuildRequires entries for eel and librsvg to be
	eel-devel and librsvg-devel.
	
	* libnautilus-private/nautilus-dateedit-extensions.c:
	* libnautilus-private/nautilus-dateedit-extensions.h:
	* libnautilus-private/nautilus-generous-bin.c:
	* libnautilus-private/nautilus-generous-bin.h:
	* libnautilus-private/nautilus-gconf-extensions.c:
	* libnautilus-private/nautilus-gconf-extensions.h:
	* libnautilus-private/nautilus-preferences-box.c:
	* libnautilus-private/nautilus-preferences-box.h:
	* libnautilus-private/nautilus-preferences-group.c:
	* libnautilus-private/nautilus-preferences-group.h:
	* libnautilus-private/nautilus-preferences-item.c:
	* libnautilus-private/nautilus-preferences-item.h:
	* libnautilus-private/nautilus-preferences-pane.c:
	* libnautilus-private/nautilus-preferences-pane.h:
	* libnautilus-private/nautilus-preferences.c:
	* libnautilus-private/nautilus-preferences.h:
	Moved to Eel.
	
	* applets/preferences-applet/nautilus-preferences-applet.c:
	* components/adapter/nautilus-adapter.c:
	* components/news/nautilus-news.c:
	* components/text/nautilus-text-view.c:
	* components/throbber/nautilus-throbber.c:
	* components/tree/nautilus-tree-expansion-state.c:
	* components/tree/nautilus-tree-view.c:
	* libnautilus-private/Makefile.am:
	* libnautilus-private/nautilus-directory-async.c:
	* libnautilus-private/nautilus-directory-background.c:
	* libnautilus-private/nautilus-directory.c:
	* libnautilus-private/nautilus-entry.c:
	* libnautilus-private/nautilus-file-operations.c:
	* libnautilus-private/nautilus-file-utilities.c:
	* libnautilus-private/nautilus-file.c:
	* libnautilus-private/nautilus-font-factory.c:
	* libnautilus-private/nautilus-global-preferences.c:
	* libnautilus-private/nautilus-global-preferences.h:
	* libnautilus-private/nautilus-icon-canvas-item.c:
	* libnautilus-private/nautilus-icon-container.c:
	* libnautilus-private/nautilus-icon-factory.c:
	* libnautilus-private/nautilus-lib-self-check-functions.h:
	* libnautilus-private/nautilus-link-set.c:
	* libnautilus-private/nautilus-metafile.c:
	* libnautilus-private/nautilus-sidebar-functions.c:
	* libnautilus-private/nautilus-sound.c:
	* libnautilus-private/nautilus-theme.c:
	* src/file-manager/fm-desktop-icon-view.c:
	* src/file-manager/fm-directory-view.c:
	* src/file-manager/fm-icon-view.c:
	* src/file-manager/fm-list-view.c:
	* src/file-manager/fm-properties-window.c:
	* src/file-manager/nautilus-indexing-info.c:
	* src/nautilus-application.c:
	* src/nautilus-first-time-druid.c:
	* src/nautilus-link-set-window.c:
	* src/nautilus-main.c:
	* src/nautilus-navigation-bar.c:
	* src/nautilus-navigation-bar.h:
	* src/nautilus-preferences-dialog.c:
	* src/nautilus-property-browser.c:
	* src/nautilus-search-bar-criterion.c:
	* src/nautilus-shell.c:
	* src/nautilus-sidebar-tabs.c:
	* src/nautilus-sidebar-title.c:
	* src/nautilus-sidebar.c:
	* src/nautilus-switchable-search-bar.c:
	* src/nautilus-theme-selector.c:
	* src/nautilus-view-frame.c:
	* src/nautilus-view-frame.h:
	* src/nautilus-window-manage-views.c:
	* src/nautilus-window-menus.c:
	* src/nautilus-window-toolbars.c:
	* src/nautilus-window.c:
	* src/nautilus-zoom-control.c:
	* test/test-nautilus-preferences-change.c:
	* test/test-nautilus-preferences-display.c:
	* test/test-nautilus-smooth-graphics.c:
	* test/test.c:
	Update for latest round of stuff moving into Eel.
	
2001-05-03  Andy Hertzfeld  <andy@eazel.com>

	* components/news/nautilus-news.c: (ellipsize_string),
	(extract_items):
	made the news panel ellipsize long items.  I hope this can make it into
	1.0.3, but it's not worth making new rpms unless we have other
	reasons to do so.
	
2001-05-03  Robin * Slomkowski  <rslomkow@rslomkow.org>

	* configure.in: upped version to 1.0.3

2001-05-03  Ramiro Estrugo  <ramiro@eazel.com>

	* RENAMING:
	Remove libnautilus-extensions -> libnautilus-private entry since
	its done now.
	
2001-05-03  Ramiro Estrugo  <ramiro@eazel.com>

	* Makefile.am:
	* applets/launcher/Makefile.am:
	* applets/preferences-applet/Makefile.am:
	* applets/preferences-applet/nautilus-preferences-applet.c:
	* components/adapter/Makefile.am:
	* components/adapter/nautilus-adapter.c:
	* components/hardware/Makefile.am:
	* components/hardware/nautilus-hardware-view.c:
	* components/help/Makefile.am:
	* components/help/hyperbola-main.c:
	* components/help/hyperbola-nav-tree.c:
	* components/history/Makefile.am:
	* components/history/nautilus-history-view.c:
	* components/image-viewer/Makefile.am:
	* components/loser/content/Makefile.am:
	* components/loser/sidebar/Makefile.am:
	* components/mozilla/bonobo-extensions.c:
	* components/mozilla/bonobo-extensions.h:
	* components/music/Makefile.am:
	* components/music/main.c:
	* components/music/nautilus-music-view.c:
	* components/news/Makefile.am:
	* components/news/nautilus-news.c:
	* components/notes/Makefile.am:
	* components/notes/nautilus-notes.c:
	* components/text/Makefile.am:
	* components/text/main.c:
	* components/text/nautilus-text-view.c:
	* components/throbber/Makefile.am:
	* components/throbber/main.c:
	* components/throbber/nautilus-throbber.c:
	* components/tree/nautilus-tree-expansion-state.c:
	* components/tree/nautilus-tree-model.c:
	* components/tree/nautilus-tree-node.c:
	* components/tree/nautilus-tree-node.h:
	* components/tree/nautilus-tree-view-dnd.c:
	* components/tree/nautilus-tree-view.c:
	* configure.in:
	* helper-utilities/error-dialog/nautilus-error-dialog.c:
	* libnautilus-extensions/.cvsignore:
	* libnautilus-extensions/Makefile.am:
	* libnautilus-extensions/README:
	* libnautilus-extensions/nautilus-audio-player.c:
	* libnautilus-extensions/nautilus-audio-player.h:
	* libnautilus-extensions/nautilus-bonobo-extensions.c:
	* libnautilus-extensions/nautilus-bonobo-extensions.h:
	* libnautilus-extensions/nautilus-bookmark.c:
	* libnautilus-extensions/nautilus-bookmark.h:
	* libnautilus-extensions/nautilus-cdrom-extensions.h:
	* libnautilus-extensions/nautilus-customization-data.c:
	* libnautilus-extensions/nautilus-customization-data.h:
	* libnautilus-extensions/nautilus-dateedit-extensions.c:
	* libnautilus-extensions/nautilus-dateedit-extensions.h:
	* libnautilus-extensions/nautilus-default-file-icon.c:
	* libnautilus-extensions/nautilus-default-file-icon.h:
	* libnautilus-extensions/nautilus-directory-async.c:
	* libnautilus-extensions/nautilus-directory-background.c:
	* libnautilus-extensions/nautilus-directory-background.h:
	* libnautilus-extensions/nautilus-directory-metafile-monitor.c:
	* libnautilus-extensions/nautilus-directory-metafile-monitor.h:
	* libnautilus-extensions/nautilus-directory-metafile.c:
	* libnautilus-extensions/nautilus-directory-metafile.h:
	* libnautilus-extensions/nautilus-directory-notify.h:
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory.c:
	* libnautilus-extensions/nautilus-directory.h:
	* libnautilus-extensions/nautilus-drag-window.c:
	* libnautilus-extensions/nautilus-drag-window.h:
	* libnautilus-extensions/nautilus-druid-page-eazel.c:
	* libnautilus-extensions/nautilus-druid-page-eazel.h:
	* libnautilus-extensions/nautilus-druid.c:
	* libnautilus-extensions/nautilus-druid.h:
	* libnautilus-extensions/nautilus-entry.c:
	* libnautilus-extensions/nautilus-entry.h:
	* libnautilus-extensions/nautilus-file-attributes.h:
	* libnautilus-extensions/nautilus-file-changes-queue.c:
	* libnautilus-extensions/nautilus-file-changes-queue.h:
	* libnautilus-extensions/nautilus-file-dnd.c:
	* libnautilus-extensions/nautilus-file-dnd.h:
	* libnautilus-extensions/nautilus-file-operations-progress.c:
	* libnautilus-extensions/nautilus-file-operations-progress.h:
	* libnautilus-extensions/nautilus-file-operations.c:
	* libnautilus-extensions/nautilus-file-operations.h:
	* libnautilus-extensions/nautilus-file-private.h:
	* libnautilus-extensions/nautilus-file-utilities.c:
	* libnautilus-extensions/nautilus-file-utilities.h:
	* libnautilus-extensions/nautilus-file.c:
	* libnautilus-extensions/nautilus-file.h:
	* libnautilus-extensions/nautilus-font-factory.c:
	* libnautilus-extensions/nautilus-font-factory.h:
	* libnautilus-extensions/nautilus-gconf-extensions.c:
	* libnautilus-extensions/nautilus-gconf-extensions.h:
	* libnautilus-extensions/nautilus-generous-bin.c:
	* libnautilus-extensions/nautilus-generous-bin.h:
	* libnautilus-extensions/nautilus-global-preferences.c:
	* libnautilus-extensions/nautilus-global-preferences.h:
	* libnautilus-extensions/nautilus-horizontal-splitter.c:
	* libnautilus-extensions/nautilus-horizontal-splitter.h:
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	* libnautilus-extensions/nautilus-icon-canvas-item.h:
	* libnautilus-extensions/nautilus-icon-container.c:
	* libnautilus-extensions/nautilus-icon-container.h:
	* libnautilus-extensions/nautilus-icon-dnd.c:
	* libnautilus-extensions/nautilus-icon-dnd.h:
	* libnautilus-extensions/nautilus-icon-factory-private.h:
	* libnautilus-extensions/nautilus-icon-factory.c:
	* libnautilus-extensions/nautilus-icon-factory.h:
	* libnautilus-extensions/nautilus-icon-private.h:
	* libnautilus-extensions/nautilus-icon-text-item.c:
	* libnautilus-extensions/nautilus-icon-text-item.h:
	* libnautilus-extensions/nautilus-iso9660.h:
	* libnautilus-extensions/nautilus-keep-last-vertical-box.c:
	* libnautilus-extensions/nautilus-keep-last-vertical-box.h:
	* libnautilus-extensions/nautilus-lib-self-check-functions.c:
	* libnautilus-extensions/nautilus-lib-self-check-functions.h:
	* libnautilus-extensions/nautilus-link-set.c:
	* libnautilus-extensions/nautilus-link-set.h:
	* libnautilus-extensions/nautilus-link.c:
	* libnautilus-extensions/nautilus-link.h:
	* libnautilus-extensions/nautilus-medusa-support.c:
	* libnautilus-extensions/nautilus-medusa-support.h:
	* libnautilus-extensions/nautilus-merged-directory.c:
	* libnautilus-extensions/nautilus-merged-directory.h:
	* libnautilus-extensions/nautilus-metadata.h:
	* libnautilus-extensions/nautilus-metafile-factory.c:
	* libnautilus-extensions/nautilus-metafile-factory.h:
	* libnautilus-extensions/nautilus-metafile-server.idl:
	* libnautilus-extensions/nautilus-metafile.c:
	* libnautilus-extensions/nautilus-metafile.h:
	* libnautilus-extensions/nautilus-mime-actions.c:
	* libnautilus-extensions/nautilus-mime-actions.h:
	* libnautilus-extensions/nautilus-monitor.c:
	* libnautilus-extensions/nautilus-monitor.h:
	* libnautilus-extensions/nautilus-preferences-box.c:
	* libnautilus-extensions/nautilus-preferences-box.h:
	* libnautilus-extensions/nautilus-preferences-group.c:
	* libnautilus-extensions/nautilus-preferences-group.h:
	* libnautilus-extensions/nautilus-preferences-item.c:
	* libnautilus-extensions/nautilus-preferences-item.h:
	* libnautilus-extensions/nautilus-preferences-pane.c:
	* libnautilus-extensions/nautilus-preferences-pane.h:
	* libnautilus-extensions/nautilus-preferences.c:
	* libnautilus-extensions/nautilus-preferences.h:
	* libnautilus-extensions/nautilus-program-chooser.c:
	* libnautilus-extensions/nautilus-program-chooser.h:
	* libnautilus-extensions/nautilus-program-choosing.c:
	* libnautilus-extensions/nautilus-program-choosing.h:
	* libnautilus-extensions/nautilus-search-uri.c:
	* libnautilus-extensions/nautilus-search-uri.h:
	* libnautilus-extensions/nautilus-sidebar-functions.c:
	* libnautilus-extensions/nautilus-sidebar-functions.h:
	* libnautilus-extensions/nautilus-sound.c:
	* libnautilus-extensions/nautilus-sound.h:
	* libnautilus-extensions/nautilus-theme.c:
	* libnautilus-extensions/nautilus-theme.h:
	* libnautilus-extensions/nautilus-thumbnails-jpeg.c:
	* libnautilus-extensions/nautilus-thumbnails-jpeg.h:
	* libnautilus-extensions/nautilus-thumbnails.c:
	* libnautilus-extensions/nautilus-thumbnails.h:
	* libnautilus-extensions/nautilus-trash-directory.c:
	* libnautilus-extensions/nautilus-trash-directory.h:
	* libnautilus-extensions/nautilus-trash-file.c:
	* libnautilus-extensions/nautilus-trash-file.h:
	* libnautilus-extensions/nautilus-trash-monitor.c:
	* libnautilus-extensions/nautilus-trash-monitor.h:
	* libnautilus-extensions/nautilus-undo-context.c:
	* libnautilus-extensions/nautilus-undo-context.h:
	* libnautilus-extensions/nautilus-undo-manager.c:
	* libnautilus-extensions/nautilus-undo-manager.h:
	* libnautilus-extensions/nautilus-undo-signal-handlers.c:
	* libnautilus-extensions/nautilus-undo-signal-handlers.h:
	* libnautilus-extensions/nautilus-vfs-directory.c:
	* libnautilus-extensions/nautilus-vfs-directory.h:
	* libnautilus-extensions/nautilus-vfs-file.c:
	* libnautilus-extensions/nautilus-vfs-file.h:
	* libnautilus-extensions/nautilus-view-identifier.c:
	* libnautilus-extensions/nautilus-view-identifier.h:
	* libnautilus-extensions/nautilus-volume-monitor.c:
	* libnautilus-extensions/nautilus-volume-monitor.h:
	* libnautilus-private/Makefile.am:
	* libnautilus-private/README:
	* libnautilus-private/nautilus-directory-background.h:
	* libnautilus-private/nautilus-directory-metafile-monitor.c:
	* libnautilus-private/nautilus-directory-metafile-monitor.h:
	* libnautilus-private/nautilus-directory-metafile.c:
	* libnautilus-private/nautilus-directory-notify.h:
	* libnautilus-private/nautilus-druid-page-eazel.c:
	* libnautilus-private/nautilus-entry.c:
	* libnautilus-private/nautilus-file-dnd.h:
	* libnautilus-private/nautilus-file-operations.c:
	* libnautilus-private/nautilus-global-preferences.h:
	* libnautilus-private/nautilus-icon-factory.h:
	* libnautilus-private/nautilus-metafile-factory.c:
	* libnautilus-private/nautilus-metafile-factory.h:
	* libnautilus-private/nautilus-mime-actions.h:
	* libnautilus-private/nautilus-preferences-box.h:
	* libnautilus-private/nautilus-preferences-group.h:
	* libnautilus-private/nautilus-preferences-item.h:
	* libnautilus-private/nautilus-preferences-pane.h:
	* libnautilus-private/nautilus-undo-signal-handlers.h:
	* libnautilus/nautilus-view.c:
	* nautilus.spec.in:
	* po/POTFILES.in:
	* src/Makefile.am:
	* src/file-manager/fm-desktop-icon-view.c:
	* src/file-manager/fm-directory-view.c:
	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-error-reporting.c:
	* src/file-manager/fm-error-reporting.h:
	* src/file-manager/fm-icon-view.c:
	* src/file-manager/fm-list-view.c:
	* src/file-manager/fm-properties-window.c:
	* src/file-manager/fm-properties-window.h:
	* src/file-manager/fm-search-list-view.c:
	* src/file-manager/nautilus-indexing-info.c:
	* src/nautilus-about.c:
	* src/nautilus-applicable-views.c:
	* src/nautilus-applicable-views.h:
	* src/nautilus-application.c:
	* src/nautilus-application.h:
	* src/nautilus-bookmark-list.c:
	* src/nautilus-bookmark-list.h:
	* src/nautilus-bookmark-parsing.c:
	* src/nautilus-bookmark-parsing.h:
	* src/nautilus-bookmarks-window.c:
	* src/nautilus-complex-search-bar.c:
	* src/nautilus-complex-search-bar.h:
	* src/nautilus-desktop-window.c:
	* src/nautilus-first-time-druid.c:
	* src/nautilus-link-set-window.c:
	* src/nautilus-link-set-window.h:
	* src/nautilus-location-bar.c:
	* src/nautilus-main.c: (main):
	* src/nautilus-navigation-bar.h:
	* src/nautilus-preferences-dialog.c:
	* src/nautilus-preferences-dialog.h:
	* src/nautilus-profiler.h:
	* src/nautilus-property-browser.c:
	* src/nautilus-search-bar-criterion.c:
	* src/nautilus-search-bar-criterion.h:
	* src/nautilus-search-bar.h:
	* src/nautilus-services.c:
	* src/nautilus-shell.c:
	* src/nautilus-sidebar-tabs.c:
	* src/nautilus-sidebar-title.c:
	* src/nautilus-sidebar-title.h:
	* src/nautilus-sidebar.c:
	* src/nautilus-simple-search-bar.c:
	* src/nautilus-switchable-navigation-bar.c:
	* src/nautilus-switchable-search-bar.c:
	* src/nautilus-theme-selector.c:
	* src/nautilus-view-frame.c:
	* src/nautilus-view-frame.h:
	* src/nautilus-window-manage-views.c:
	* src/nautilus-window-menus.c:
	* src/nautilus-window-private.h:
	* src/nautilus-window-toolbars.c:
	* src/nautilus-window.c:
	* src/nautilus-window.h:
	* src/nautilus-zoom-control.c:
	* test/Makefile.am:
	* test/test-nautilus-async-activation.c:
	* test/test-nautilus-mime-actions-set.c:
	* test/test-nautilus-mime-actions.c:
	* test/test-nautilus-preferences-change.c:
	* test/test-nautilus-preferences-display.c:
	* test/test-nautilus-smooth-graphics.c:
	* test/test-nautilus-wrap-table.c:
	* test/test.c:
	* test/test.h:
	Rename libnautilus-extensions to libnautilus-private.
	
2001-05-03  Ramiro Estrugo  <ramiro@eazel.com>

	* icons/arlo/throbber/.cvsignore:
	* icons/arlo/throbber/001.png:
	* icons/arlo/throbber/002.png:
	* icons/arlo/throbber/003.png:
	* icons/arlo/throbber/004.png:
	* icons/arlo/throbber/005.png:
	* icons/arlo/throbber/006.png:
	* icons/arlo/throbber/007.png:
	* icons/arlo/throbber/008.png:
	* icons/arlo/throbber/009.png:
	* icons/arlo/throbber/010.png:
	* icons/arlo/throbber/011.png:
	* icons/arlo/throbber/012.png:
	* icons/arlo/throbber/013.png:
	* icons/arlo/throbber/014.png:
	* icons/arlo/throbber/015.png:
	* icons/arlo/throbber/016.png:
	* icons/arlo/throbber/017.png:
	* icons/arlo/throbber/018.png:
	* icons/arlo/throbber/019.png:
	* icons/arlo/throbber/020.png:
	* icons/arlo/throbber/021.png:
	* icons/arlo/throbber/022.png:
	* icons/arlo/throbber/023.png:
	* icons/arlo/throbber/024.png:
	* icons/arlo/throbber/025.png:
	* icons/arlo/throbber/026.png:
	* icons/arlo/throbber/027.png:
	* icons/arlo/throbber/028.png:
	* icons/arlo/throbber/029.png:
	* icons/arlo/throbber/030.png:
	* icons/arlo/throbber/Makefile.am:
	* icons/arlo/throbber/rest.png:
	Remove old unused icons.
	
2001-05-03  Darin Adler  <darin@eazel.com>

	* cut-n-paste-code/freetype/.cvsignore: Removing this file so that
	this empty directory will become completely empty.

	* cut-n-paste-code/.cvsignore: Tweak.
	* cut-n-paste-code/widgets/.cvsignore: Tweak.

2001-05-03  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_for_file): Fix Nautilus Link
	support so it works for links that have paths instead of URIs in
	their custom icon field.

2001-05-03  Dan Mueth  <dan@eazel.com>

	Added information about configuration files.

	* help/nautilus-user-manual/C/nautilus-user-manual.sgml:

2001-05-03  Andy Hertzfeld  <andy@eazel.com>

	* components/news/nautilus-news.c: (add_site_from_fields):
	fixed a memory trashing bug that Bart found in the news panel.
	
2001-05-03  John Sullivan  <sullivan@eazel.com>

	reviewed by: Darin Adler  <darin@eazel.com>

	Fixed bug 8239 ("Zoom In" keyboard shortcut (Control-=) is
	untypable on many non-US keyboards)

	* src/nautilus-shell-ui.xml: Changed Zoom In shortcut to Control-+,
	so the more-mnemonic + appears in the menu.
	
	* src/nautilus-window.c: (nautilus_window_initialize_class),
	(nautilus_window_key_press_event):
	Make Control-+ and Control-= both activate Zoom In.

2001-05-03  Bart Decrem <bart@eazel.com>

	Added more RSS feeds:
	- Appwatch
	- Barrapunto
	- Barrapunto-Gnome
	- Security Focus
	- Linux.com
	- Mozilla Zine
	
	Fixed alphabetization error.

	* components/news/news_channels.xml

2001-05-03  Darin Adler  <darin@eazel.com>

	* RENAMING: Removed some obsolete name changes.
	* src/nautilus-property-browser.h: Got rid of one last NTL.

2001-05-03  Darin Adler  <darin@eazel.com>

	Fixed bug that was preventing custom icons from working in many
	cases.

	* libnautilus-extensions/nautilus-icon-factory.c:
	(load_icon_with_embedded_text): Pass in the URI for the custom
	icon.

2001-05-03  Darin Adler  <darin@eazel.com>

	reviewed by: John Sullivan <sullivan@eazel.com>

	More tweaking on keyboard shortcuts for deleting and trashing.

	* src/file-manager/fm-directory-view.c:
	(ALL_NON_LOCK_MODIFIER_KEYS): Don't include MOD2, because it is
	"num lock". Don't include MOD3-5 because I don't know for sure if
	they are lock modifiers or not.
	(trash_or_delete_selected_files), (trash_callback): Separated out
	the Move To Trash command into a non-callback function.
	(delete_selected_files), (delete_callback): Separated out the
	Delete command into a non-callback function.
	(key_press_event_callback): Shift-Delete now means "Delete" if that
	command is turned on. Control-Backspace now means "Move To Trash".

2001-05-03  Bart Decrem <bart@eazel.com>
	
	reviewed by: no one :(

	Updated list of RSS feeds for the News sidebar.

	* components/news/news_channels.xml

	Removed:
	- Marihuana News
	- Macintosh News

	Added:
	- BSD Today
	- Dictionary.Com
	- Internet.com
	- Segfault
	- Web Reference
	
2001-05-03  Darin Adler  <darin@eazel.com>

	reviewed by: John Sullivan <sullivan@eazel.com>

	Fixed bug 8232 (Trash.gmc and home directory link files made by
	gmc show on Desktop):

	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_should_show): Moved special case for gmc files in
	here.
	(filter_hidden_and_backup_partition_callback): Removed special
	case for gmc files, since it's now in the lower level. Also fixed
	code that was casting a pointer to an int without using
	GPOINTER_TO_INT.
	
	* src/nautilus-application.c: Fix typo.

2001-05-03  Darin Adler  <darin@eazel.com>

	reviewed by: John Sullivan <sullivan@eazel.com>

	Fixed bug 8230 (launchers dragged from panel don't get icons as
	they did in Ximian's Nautilus 1.0.2):

	* libnautilus-extensions/nautilus-link.c:
	(nautilus_link_local_create_from_gnome_entry): Changed to use
	eel_make_uri_from_half_baked_uri so we can handle the kind of
	"URI"s that are in most .desktop files. Also did a lot of code
	cleanup.

	* src/file-manager/fm-desktop-icon-view.c:
	(icon_view_handle_uri_list): Changed to use
	eel_make_uri_from_half_baked_uri so we can handle the kind of
	"URI"s that are passed when dragging from old programs. Also did a
	lot of code cleanup.

2001-05-03  Darin Adler  <darin@eazel.com>

	Fixed bug 8228 (http://www.yahoo.com shows plain document icon,
	not HTML icon).

	* src/nautilus-sidebar-title.c: (update_icon): Changed code to
	pass in icon names to nautilus_icon_factory_get_pixbuf_by_name,
	instead of passing icon paths (no reason to do that).

2001-05-03  John Fleck  <jfleck@inkstain.net>

	* components/help/converters/gnome-db2html2/sect-elements.c
	improve support for <emphasis> tag to proporly support role="bold"
	and role="strong" attributes with <B> but *no* <EM> tags

2001-05-03  Dan Mueth  <dan@eazel.com>

	Updating Nautilus Release Notes to mention that anybody
	who builds or repackages Nautilus should make sure Medusa
	support isn't built in by accident.

	* help/nautilus-release-notes/C/nautilus-release-notes.sgml:

2001-05-03  Dan Mueth  <dan@eazel.com>

        Updates to Nautilus User Manual, including two new screenshots.

        * help/nautilus-user-manual/C/Makefile.am:
        * help/nautilus-user-manual/C/figures/help_num.png:
        * help/nautilus-user-manual/C/figures/news_num.png:
        * help/nautilus-user-manual/C/nautilus-user-manual.sgml:

2001-05-03  Zbigniew Chyla  <cyba@gnome.pl>

	* src/nautilus-theme-selector.c
	(install_theme_button_clicked_callback): Destroy fileselector after
	pressing escape key.

2001-05-02  Darin Adler  <darin@eazel.com>

	* src/file-manager/fm-directory-view.c:
	(key_press_event_callback), (bonobo_control_activate_callback):
	Hook up the delete key to move files to trash. Another feature
	requested by Miguel.
	
	* src/file-manager/nautilus-icon-view-ui.xml: Only show the F2 in
	the menu bar, not the right-click menu.

	* libnautilus-extensions/nautilus-icon-factory.c:
	(cache_icon_new), (load_specific_icon), (load_icon_for_scaling),
	(scale_icon), (get_icon_from_cache),
	(nautilus_icon_factory_get_pixbuf_for_icon),
	(load_icon_with_embedded_text): Tried to fix bug 8228, but
	failed. I still want to keep my changes. I'll get back to this
	tomorrow.
	
2001-05-02  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus.spec.in:
	Add ammonite requires dependency.
	
2001-05-02  Darin Adler  <darin@eazel.com>

	* src/file-manager/nautilus-icon-view-ui.xml: Added an F2 key
	equivalent for the Rename command because: 1) we didn't have a key
	equivalent here before, 2) F2 is what you use to do this on
	Windows, and 3) Miguel asked me to.

2001-05-02  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-directory-view.c:
	(open_scripts_folder_callback), (disconnect_script_handlers):

	Made the dialog explaining how scripts work always show up when
	you choose "Open Scripts Folder", not just the first time.

2001-05-02  Darin Adler  <darin@eazel.com>

	reviewed by: John Sullivan <sullivan@eazel.com>

	Fixed bug 8200 (News Sidebar panel crash on startup):

	* components/news/nautilus-news.c: (draw_rss_items): Use
	eel_strlen so it works with NULL titles.
	
	* configure.in:
	* nautilus.spec.in:
	Removed dependency on ghttp. Trilobite needs it, but not Nautilus.

2001-05-02  Darin Adler  <darin@eazel.com>

	Fix bug where most files weren't getting their MIME type icons.

	* libnautilus-extensions/nautilus-icon-factory.c:
	(load_icon_given_two_names), (is_generic_icon_name),
	(load_specific_icon): Made the two generic icons lose out if
	there's a MIME type icon. We can't always prefer the MIME type
	icon, since that would break things like the "thumbnail in
	progress" icon.

2001-05-02  Darin Adler  <darin@eazel.com>

	Fix bug where icon for Nautilus links were not appearing if they
	were icon names rather than complete URIs.

	* libnautilus-extensions/nautilus-icon-factory.c:
	(remove_icon_name_suffix): Separate out this function.
	(get_mime_type_icon_without_suffix): Use the new
	remove_icon_name_suffix function.
	(nautilus_icon_factory_get_icon_for_file): When getting a custom
	icon name from a file, call remove_icon_name_suffix.

	* src/file-manager/fm-desktop-icon-view.c: (create_mount_link),
	(fm_desktop_icon_view_trash_state_changed_callback),
	(icon_view_handle_uri_list), (update_home_link_and_delete_copies),
	(update_trash_link_and_delete_copies): Leave the ".png" suffixes
	out of the icon names. They never did any good.

	* components/help/help-method.c: (help_uri_to_string): Fix name of
	info2html2 and disallow parameters that start with "-" (for a
	slight bit less security vulnerability).

2001-05-02  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in:
	Lots of improvement.  Make dealing with dependency libs/cflags simpler.

	* applets/launcher/Makefile.am:
	* applets/preferences-applet/Makefile.am:
	* components/adapter/Makefile.am:
	* components/hardware/Makefile.am:
	* components/help/Makefile.am:
	* components/history/Makefile.am:
	* components/image-viewer/Makefile.am:
	* components/loser/content/Makefile.am:
	* components/loser/sidebar/Makefile.am:
	* components/mozilla/Makefile.am:
	* components/music/Makefile.am:
	* components/news/Makefile.am:
	* components/notes/Makefile.am:
	* components/sample/Makefile.am:
	* components/text/Makefile.am:
	* components/throbber/Makefile.am:
	* components/tree/Makefile.am:
	* helper-utilities/error-dialog/Makefile.am:
	* icons/arlo/throbber/Makefile.am:
	* icons/crux_eggplant/backgrounds/Makefile.am:
	* icons/crux_eggplant/sidebar_tab_pieces/Makefile.am:
	* icons/crux_eggplant/throbber/Makefile.am:
	* icons/gnome/throbber/Makefile.am:
	* icons/sidebar_tab_pieces/Makefile.am:
	* libnautilus-adapter/Makefile.am:
	* libnautilus-extensions/Makefile.am:
	* libnautilus/Makefile.am:
	* src/Makefile.am:
	* src/file-manager/Makefile.am:
	* test/Makefile.am:
	Eliminate cut-n-paste disease by using dependency macros defined
	in configure.in.

2001-05-02  Ramiro Estrugo  <ramiro@eazel.com>

	* autogen.sh:
	Detect whether the invocation of configure failed and print a
	message accordingly.  We used to always assume that configure was
	successful and print misleading "now type make to build $PROJECT"
	messages.
	
2001-05-01  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in:
	Use NAUTILUS_VERSION_INSIST from hack-macros instead of
	EAZEL_VERSION_INSIST.
	
2001-05-01  Ramiro Estrugo  <ramiro@eazel.com>

	* applets/launcher/Makefile.am:
	* applets/preferences-applet/Makefile.am:
	* components/adapter/Makefile.am:
	* components/hardware/Makefile.am:
	* components/help/Makefile.am:
	* components/history/Makefile.am:
	* components/image-viewer/Makefile.am:
	* components/loser/content/Makefile.am:
	* components/loser/sidebar/Makefile.am:
	* components/mozilla/Makefile.am:
	* components/music/Makefile.am:
	* components/notes/Makefile.am:
	* components/sample/Makefile.am:
	* components/text/Makefile.am:
	* components/throbber/Makefile.am:
	* components/tree/Makefile.am:
	* configure.in:
	* libnautilus-extensions/Makefile.am:
	* libnautilus/Makefile.am:
	* src/Makefile.am:
	* src/file-manager/Makefile.am:
	* test/Makefile.am:
	Patch from Christopher Lahey <clahey@ximian.com>.
	Use EEL_CFLAGS, LIBRSVG_CFLAGS instead of EEL_INCLUDEDIR, and
	EEL_CFLAGS.  Thanks Chris.
	
2001-05-01  Andy Hertzfeld  <andy@eazel.com>

	* components/news/nautilus-news.c: (draw_rss_title):
	made the titles prelight when appropriate.  Also, tweaked
	the channel gap size.
	
2001-05-01  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in:
	Simplify the freetype2 detection insanity by using autoconf macro
	technology.  The new test should work with both FreeType2 RPMS as
	well as freetype built from source in any prefix.

2001-05-01  Dan Mueth  <dan@eazel.com>

	More updates to the User Manual for 1.0.3.

	* help/nautilus-user-manual/C/nautilus-user-manual.sgml:

2001-05-01  Andy Hertzfeld  <andy@eazel.com>

	* components/news/nautilus-news.c: (do_destroy),
	(rss_read_done_callback), (nautilus_news_load_channel),
	(check_for_updates):
	fixed bug 8216, removing the news panel when loading channels hangs
	Nautilus.  Fixed by making sure we don't launch multiple I/O request
	for a single channel.  I suspect there are still some problems lurking,
	but the reported bug is no longer reproducible.
	
2001-05-01  Andy Hertzfeld  <andy@eazel.com>

	* components/news/nautilus-news.c: (has_matching_uri),
	(mark_new_items):
	fixed problem where the new flag wasn't being maintained
	properly after updating, since it was using a whole new item
	list.  Fixed by propogating the new flag from the corresponding
	old item.
	
2001-05-01  Darin Adler  <darin@eazel.com>

	reviewed by: John Sullivan <sullivan@eazel.com>

	Some enhancements to icon lookup.

	* libnautilus-extensions/nautilus-icon-factory.h:
	* libnautilus-extensions/nautilus-icon-factory.c:
	(get_mime_type_icon_without_suffix): Function used to strip suffixes
	out so we can have file suffixes in the gnome-vfs icon database, but
	can ignore them and look at all suffixes for the named icon.
	(make_icon_name_from_mime_type): Construct an icon name for types
	that don't specify a particular icon. This allows theme designers
	to make icons for any MIME type.
	(get_icon_name_for_regular_file): Use the new "without suffix" call.
	This requires changing this function to return a strdup'd name.
	(get_icon_name_for_directory), (get_icon_name_for_file): Change to
	return a strdup'd name.
	(make_full_icon_path): Do the file exists check in here (was
	already doing it in some cases) and also call
	gnome_vfs_icon_path_from_filename.
	(get_themed_icon_file_path): Get rid of redundant g_file_exists
	checks and gnome_vfs_icon_path_from_filename call, since both are
	now handled inside make_full_icon_path.
	(nautilus_scalable_icon_get_text_pieces),
	(nautilus_scalable_icon_new_from_text_pieces),
	(nautilus_scalable_icon_unref), (nautilus_scalable_icon_hash),
	(nautilus_scalable_icon_equal): Add MIME type to the scalable
	icons.
	(nautilus_icon_factory_get_icon_for_file): Pass in the MIME type.
	(nautilus_icon_factory_get_emblem_icon_by_name): Pass NULL for
	MIME type.
	(load_pixbuf_svg): Change to pass in boolean for emblem hack since
	we don't always have an icon name.
	(load_icon_from_path): New function, share common code.
	(load_named_icon): New function, share common code.
	(load_specific_icon): Try icon based on MIME type first, then fall
	back on the name specified.
	(nautilus_icon_factory_get_pixbuf_from_name): Pass NULL for MIME
	type.
	(load_icon_with_embedded_text): Pass in the MIME type.

	* src/nautilus-bookmark-list.c: (append_bookmark_node):
	* src/nautilus-bookmark-parsing.c:
	(nautilus_bookmark_new_from_node):
	* libnautilus-extensions/nautilus-bookmark.c:
	(nautilus_bookmark_icon_is_different),
	(nautilus_bookmark_set_icon_to_default):
	Update to deal with MIME types in scalable icons.
	
	* components/help/hyperbola-filefmt.c:
	(fmt_scrollkeeper_parse_toc_section),
	(fmt_scrollkeeper_parse_doc_toc),
	(fmt_scrollkeeper_parse_document),
	(fmt_scrollkeeper_parse_section), (fmt_scrollkeeper_parse_xml),
	(fmt_scrollkeeper_trim_empty_branches),
	(fmt_scrollkeeper_tree_empty), (fmt_scrollkeeper_populate_tree),
	(remove_leading_and_trailing_white_spaces), (fmt_toplevel_add_doc),
	(get_path_from_node), (has_content), (fmt_toplevel_parse_xml_tree):
	Made more compatible with libxml by not using the content field
	directly and using xmlChildrenNode and xmlRootNode.
	
	* libnautilus-extensions/nautilus-trash-monitor.c:
	(nautilus_trash_monitor_get): Fixed NautilusDirectory leak.
	
	* THANKS: Added some more translator credits.
	* check-THANKS.pl: Fixed some email addresses and such.

	* icons/ardmore/.cvsignore:
	* icons/arlo/.cvsignore,
	* icons/arlo/backgrounds/.cvsignore:
	* icons/arlo/sidebar_tab_pieces/.cvsignore:
	* icons/villanova/.cvsignore:
	Removed these again.

2001-05-01  Andy Hertzfeld  <andy@eazel.com>

	* components/news/nautilus-news.c: (mark_new_items),
	(empty_message_size_allocate):
	fixed bug where it would inadvertently clear the new flag on items
	after refetching.
	
	fixed bug 8211, criticals when opening the news panel with no
	selected sites by making sure not to set the wrap width to a
	negative number.
	
	* components/news/news_channels.xml:
	added some new channels suggested by Joshua K.
	
2001-05-01  Zbigniew Chyla  <cyba@gnome.pl>

	* components/news/nautilus-news.c: Marked two strings for translation.

	* icons/ardmore/.cvsignore, icons/arlo/.cvsignore,
	icons/arlo/backgrounds/.cvsignore,
	icons/arlo/sidebar_tab_pieces/.cvsignore, icons/villanova/.cvsignore:
	New files, ignore Makefile.in and Makefile.

2001-05-01  Ramiro Estrugo  <ramiro@eazel.com>

	* components/news/nautilus-news.c:
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	* src/nautilus-about.c:
	* src/nautilus-sidebar-tabs.c:
	More work on changing parameters for functions that accept and
	return ArtIRect, EelArtIPoint, ArtDRect, EelDimensions to pass by
	value instead of by pointer.

2001-05-01  Ramiro Estrugo  <ramiro@eazel.com>

	* components/mozilla/main.c: (main): Make warnings and criticals
	stop in the debugger to make this beast easier to debug.
	
	* components/mozilla/nautilus-mozilla-content-view.c:
	Use Eel gtk boilerplate and method invocation macros.
	
2001-05-01  Ramiro Estrugo  <ramiro@eazel.com>

	* README:
	Add Mozilla 0.8.1 blurb.
	
2001-05-01  Dan Mueth  <dan@eazel.com>

	Updates to the header and first section of the User Manual.

	* help/nautilus-user-manual/C/nautilus-user-manual.sgml:

2001-04-30  Ramiro Estrugo  <ramiro@eazel.com>

	* icons/crux_teal/backgrounds/Makefile.am:
	* icons/crux_teal/sidebar_tab_pieces/Makefile.am:
	* icons/crux_teal/throbber/Makefile.am:
	Forgot to change arlo to crux_teal in these 3.
	
2001-04-30  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in:
	* icons/Makefile.am:
	* nautilus.spec.in:
	Rename the theme directories to match their displayed name.
	
	* icons/arlo
	* icons/villanova
	* icons/ardmore
	Old theme directory names.
	
	* icons/crux_teal
	* icons/sierra
	* icons/tahoe
	New theme directory names.

2001-04-30  Pavel Cisler  <pavel@eazel.com>

	reviewed by: Darin Adler  <darin@eazel.com>

	Fixed 4964 (Files dragged to Trash from floppy don't
		    appear in Trash Can)
	Fixed 7406 (Trash doesn't work until first restart of Nautilus)
	Fixed 7976 (some files that you can't leave in the Trash just
		    silently go away instead of showing the dialog as
		    they should)

	New trash directories are created lazily, when someone tries to
	delete an item on the respective disk for the first time. The
	problem was that these new trash directories do not get integrated
	into the unified trash directory. Added logic to do that.
	
	* libnautilus-extensions/nautilus-file-operations.c:
	(nautilus_file_operations_copy_move):
	
	Before a move to trash operation is started check for any new
	trash directories and integrate them if needed.
	
	* libnautilus-extensions/nautilus-trash-directory.c:
	(check_trash_created), (check_trash_directory_added_callback),
	(volume_mounted_callback)

	Add calls to allow adding a new physical trash directory to the
	unified trash.

	* libnautilus-extensions/nautilus-trash-directory.h:
	* libnautilus-extensions/nautilus-trash-monitor.c:
	(nautilus_trash_monitor_initialize_class),
	(nautilus_trash_monitor_get),
	* libnautilus-extensions/nautilus-trash-directory.c:
	(nautilus_trash_directory_initialize),
	(nautilus_trash_directory_finish_initializing):
	
	Rearrange to allow initializing the nautilus trash directory and
	nautilus trash monitor properly, dodging a cyclic dependency.
	
	* libnautilus-extensions/nautilus-trash-monitor.c:
	* libnautilus-extensions/nautilus-trash-monitor.h:
	(nautilus_trash_monitor_get_trash_directories),
	(add_one_trash_directory_if_needed),
	(nautilus_trash_monitor_add_new_trash_directories):
	Add a new signal to allow clients get notified when a new
	trash directory might get added to the unified trash.

2001-04-30  Dan Mueth  <dan@eazel.com>

	Updating screenshots for Nautilus User Manual for Nautilus 1.0.3.

	* help/nautilus-user-manual/C/Makefile.am:
	* help/nautilus-user-manual/C/figures/custicon.png:
	* help/nautilus-user-manual/C/figures/custom_icon_num.png:
	* help/nautilus-user-manual/C/figures/full.png:
	* help/nautilus-user-manual/C/figures/home_folder_num.png:
	* help/nautilus-user-manual/C/figures/locationbar_nqr.png:
	* help/nautilus-user-manual/C/figures/locbar.png:
	* help/nautilus-user-manual/C/figures/nautilus_window_full_num.png:
	* help/nautilus-user-manual/C/figures/part-1.png:
	* help/nautilus-user-manual/C/figures/part-2.png:
	* help/nautilus-user-manual/C/figures/part-3.png:
	* help/nautilus-user-manual/C/figures/part.png:
	* help/nautilus-user-manual/C/figures/preferences_menu_num.png:
	* help/nautilus-user-manual/C/figures/prefmenu.png:
	* help/nautilus-user-manual/C/figures/sidebar.png:
	* help/nautilus-user-manual/C/figures/sidebar_num.png:
	* help/nautilus-user-manual/C/figures/xcf/custom_icon_num.xcf:
	* help/nautilus-user-manual/C/figures/xcf/home_folder_num.xcf:
	* help/nautilus-user-manual/C/figures/xcf/nautilus_window_full_num.
	xcf:
	* help/nautilus-user-manual/C/nautilus-user-manual.sgml:

2001-04-30  Andy Hertzfeld  <andy@eazel.com>

	* components/news/nautilus-news.c: (draw_rss_items),
	(nautilus_news_update_display),
	(nautilus_news_motion_notify_event), (rss_read_done_callback),
	(news_label_new), (make_add_widgets), (set_up_edit_widgets),
	(set_up_configure_widgets):
	
	fixed bug where things wouldn't prelight properly; fixed by not
	hit-testing channels that aren't visible in motion_notify
	
	made a bunch of layout changes at Arlo's request, including no
	longer using aa text for widgets.
	
	* components/news/changed_bullet.png:
	* components/news/nautilus-news-pixmaps.h:
	* components/news/news_bullet.png:
	new images from Arlo
	
2001-04-30  Ramiro Estrugo  <ramiro@eazel.com>

	* NEWS:
	Add blurb about Nautilus Themes moving to preferences dialog.
	
2001-04-30  Darin Adler  <darin@eazel.com>

	Worked on bug 8206 (xalf problems):

	* libnautilus-extensions/nautilus-program-choosing.c:
	(get_xalf_prefix): Don't use xalf unless a NAUTILUS_USE_XALF
	environment variable is defined.

	* NEWS: Updated with the features added since last time I edited
	the NEWS file. Since we are mostly doing bug fixes, there aren't
	too many.
	
2001-04-30  Darin Adler  <darin@eazel.com>

	* help/nautilus-screenshot-guidelines/C/.cvsignore:
	Ignore the .junk directory.

2001-04-30  Darin Adler  <darin@eazel.com>

	reviewed by: John Sullivan <sullivan@eazel.com>

	Updated for eel changes needed to fix bug 8198 ("New Terminal"
	does not use GNOME default applications):

	* libnautilus-extensions/nautilus-link.c:
	(nautilus_link_local_create_from_gnome_entry): Use the new
	eel_gnome_make_terminal_command instead of the obsolete
	eel_gnome_get_terminal_path.
	* libnautilus-extensions/nautilus-program-choosing.c:
	(nautilus_launch_application_from_command): Let eel do the /bin/sh
	-c trick. Get rid of it from here.

2001-04-30  Andy Hertzfeld  <andy@eazel.com>

	* components/news/nautilus-news.c: (extract_items),
	(has_matching_uri), (rss_read_error), (extract_rss_title),
	(extract_scripting_news_title), (extract_rss_image),
	(extract_scripting_news_image), (rss_read_done_callback):
	added support for "Scripting News" style rss files, which
	are quite a bit different from standard ones.  Also, restructured
	the rss_read_done routine by breaking it into smaller routines,
	plus other small cleanups.
	
	* components/news/news_channels.xml:
	added a few more channels
	
2001-04-30  Andy Hertzfeld  <andy@eazel.com>

	* components/news/news_channels.xml:
	added Eazel, GNOME and CNET news channels
	
2001-04-30  Ramiro Estrugo  <ramiro@eazel.com>

	* components/news/nautilus-news.c:
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	* libnautilus-extensions/nautilus-icon-canvas-item.h:
	* libnautilus-extensions/nautilus-icon-container.c:
	* libnautilus-extensions/nautilus-icon-dnd.c:
	* libnautilus-extensions/nautilus-icon-factory.c:
	* src/file-manager/fm-list-view.c:
	* src/nautilus-about.c:
	* test/test.c:
	Change parameters for functions that accept and return ArtIRect,
	EelArtIPoint, ArtDRect, EelDimensions to pass by value instead of
	by pointer.

2001-04-30  Dan Mueth  <dan@eazel.com>

	Updating Nautilus Quick Reference, both content and many
	new screenshots.  Removing old screenshots which have been
	replaced.

	* help/nautilus-quick-reference/C/Makefile.am:
	* help/nautilus-quick-reference/C/figures/backgrounds_nqr.png:
	* help/nautilus-quick-reference/C/figures/emblems.png:
	* help/nautilus-quick-reference/C/figures/emblems_nqr.png:
	* help/nautilus-quick-reference/C/figures/full.png:
	* help/nautilus-quick-reference/C/figures/locationbar_nqr.png:
	* help/nautilus-quick-reference/C/figures/locbar.png:
	* help/nautilus-quick-reference/C/figures/menubar.png:
	* help/nautilus-quick-reference/C/figures/menus_nqr.png:
	* help/nautilus-quick-reference/C/figures/music.png:
	* help/nautilus-quick-reference/C/figures/music_nqr.png:
	* help/nautilus-quick-reference/C/figures/nautilus_window_full_nqr.png:
	* help/nautilus-quick-reference/C/figures/navbar.png:
	* help/nautilus-quick-reference/C/figures/patterns.png:
	* help/nautilus-quick-reference/C/figures/sidebar.png:
	* help/nautilus-quick-reference/C/figures/sidebar_nqr.png:
	* help/nautilus-quick-reference/C/figures/themes.png:
	* help/nautilus-quick-reference/C/figures/themes_nqr.png:
	* help/nautilus-quick-reference/C/figures/toolbar_nqr.png:
	* help/nautilus-quick-reference/C/figures/xcf/nautilus_window_full_nqr.xcf:
	* help/nautilus-quick-reference/C/index.html:

2001-04-30  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-global-preferences.h:
	Add preferences for default manual layout support.
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	(default_icon_view_sort_order_or_manual_layout_changed_callback),
	(nautilus_global_preferences_initialize):
	Use different enumerations for icon view and list view default
	sort order since only icon view supports manual layout.  Add
	entries for default manual layout preference.  Add proxy
	preference for both icon view sort order and manual layout so that
	it can be presented to the user as one choice and thus just one
	menu.  This also matches the view menu.

	* libnautilus-extensions/nautilus-preferences-item.c:
	(preferences_item_create_enumeration_list),
	(preferences_item_create_enumeration_menu):
	Add support for separators in string pickers.
	
	* src/file-manager/fm-icon-view.c:
	(get_default_directory_manual_layout),
	(fm_icon_view_real_get_directory_auto_layout),
	(fm_icon_view_real_set_directory_auto_layout),
	(fm_icon_view_reset_to_defaults),
	(default_use_manual_layout_changed_callback),
	(fm_icon_view_initialize):
	Add support for a default "use manual layout" preference.
	
	* src/nautilus-preferences-dialog.c:
	Make the default sort order preference use the proxy prefernece
	instead of the real one.
	
2001-04-29  Dan Mueth  <dan@eazel.com>

	Fixing some markup errors.

	* help/nautilus-user-manual/ko/nautilus-user-manual.sgml:

2001-04-29  Ramiro Estrugo  <ramiro@eazel.com>

	* components/help/converters/gnome-info2html2/main.c: (main):
	Remove the cast, its not needed and it breaks the build.  You
	probably need a newer popt if your build breaks without the cast.
	
2001-04-29  Fatih Demir <kabalak@gtranslator.org>

	* components/help/converters/gnome-info2html2/main.c: Cast argv to
		(const char **) to avoid a compiling error.

	* src/nautilus-window-menus.c: Include <locale.h>.

2001-04-28  Dan Mueth  <dan@eazel.com>

	Small updates to a couple docs.

	* help/nautilus-screenshot-guidelines/C/nautilus-screenshot-guideli
	nes.sgml:
	* help/nautilus-user-manual/C/nautilus-user-manual.sgml:

2001-04-27  Andy Hertzfeld  <andy@eazel.com>

	* components/news/nautilus-news.c: (nautilus_news_load_channel),
	(update_remove_button), (add_site_from_fields),
	(remove_selected_site), (make_news_view):
	fixed bug 8192, remove button left enabled when all sites are
	removed, by making the button insensitive when necessary.  Also,
	display the site name instead of the url when loading, since it's
	much more understandable.
	
2001-04-27  Darin Adler  <darin@eazel.com>

	reviewed by: Robin Slomkowski <rslomkow@eazel.com>

	Update FAM support so it works fine on systems with and without
	libfam installed. So if you build Nautilus with FAM, then you can
	run it on a system with or without FAM.

	* configure.in:
	* libnautilus-extensions/Makefile.am:
	Remove the FAM_LIBS part.
	
	* libnautilus-extensions/nautilus-monitor.c: (get_fam_connection):
	Load the module before the FAMOpen2 call, and get all the function
	pointers.
	(get_event_uri), (process_fam_notifications),
	(nautilus_monitor_file), (nautilus_monitor_directory),
	(nautilus_monitor_cancel): Use the new CALL_FAM macro so we can
	use the function pointers when we call FAM.

2001-04-27  Andy Hertzfeld  <andy@eazel.com>

	* components/news/nautilus-news.c: (go_to_uri):
	fixed bug 8186, clicking on a title while it's loading crashes
	the news panel; fixed by checking for NULL.
	
	* components/news/news_channels.xml:
	removed the Dan Gillmor channel since it just moved and I can't
	find where the rss file is on the new site.
	
2001-04-27  John Harper  <jsh@eazel.com>

	reviewed by: Darin Adler <darin@eazel.com>

	Fixed bug 7732 (opening window from prompt spawns endless
	process cycle):

	* src/nautilus-application.c (desktop_changed_callback): call
	update_session () directly

	(update_session): don't check the SHOW_DESKTOP preference to
	see if we should add ourselves to the session, check that the
	current process has actually _created_ a desktop window

	(init_session): don't register a listener for the SHOW_DESKTOP
	preference since it's called by desktop_changed_callback ()

2001-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-preferences.c:
	(nautilus_self_check_preferences):
	Disabled preferences self checks until I can debug why these
	seemingly harmless tests dont work.

2001-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	* components/help/hyperbola-main.c: (main): 
	Fix bug 8172 - Nautilus spews GConf error upon repeated clicking
	of "help"
	
	Intiialize preferences before creating the factory in case code in
	the factory needs to use prefernces.
	
	* src/nautilus-application.c: (nautilus_application_startup):
	Dont do the GMC migration if we are about to kill the nautilus
	shell.  Fixes criticals when 'nautilus --quit' is used.
	
2001-04-27  Andy Hertzfeld  <andy@eazel.com>

	* components/news/Makefile.am:
	* components/news/changed_bullet.png:
	added a placed holder "new article" bullet; hopefully, Arlo will
	provide us with a real one soon.
	
	* components/news/nautilus-news.c: (do_destroy), (draw_rss_items),
	(toggle_open_state), (nautilus_news_make_new_channel),
	(check_for_updates), (nautilus_news_load_images),
	(update_interval_changed), (make_news_view):
	made it use the changed bullet when appropriate; also, completed
	the preferences work by making it watch the update interval preference.
	
2001-04-27  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-thumbnails-jpeg.c:
	(fatal_error_handler), (output_message_handler),
	(nautilus_thumbnail_load_scaled_jpeg): Added error handling
	based on Alex Larsson's revised patch. Needs more testing.

2001-04-27  Darin Adler  <darin@eazel.com>

	Fixed bug 7818 (Duplicating a link to a file on a different
	partition gives "You can't copy a file over itself" error).

	* libnautilus-extensions/nautilus-file-operations.c:
	(nautilus_file_operations_copy_move): There was a bug in the call
	to check_same_fs in here (it was passing in the target URI, which
	is often a file that doesn't even exist), so I removed that check.
	Did some other cleanups too.

2001-04-27  John Sullivan  <sullivan@eazel.com>

	Fixed bug 3214 (Confusing how to make bookmark changes "stick")
	Fixed bug 6277 (Bookmarks window should close with Escape key)

	* src/nautilus-bookmarks-window.c: (create_bookmarks_window):
	Made bookmarks window a GnomeDialog, giving it the single
	button "Done".

2001-04-27  Andy Hertzfeld  <andy@eazel.com>

	added preferences for the maximum numder of items per site and
	the update interval.  It's not quite finished, as the news
	view isn't watching the update interval preference yet.
	
	* components/news/nautilus-news.c: (do_destroy), (draw_rss_items),
	(nautilus_news_make_new_channel), (max_items_changed),
	(make_news_view):
	use the preference for max items and update interval
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	define defaults for news panel preferences
	
	* libnautilus-extensions/nautilus-global-preferences.h:
	define news panel preferences
	
	* src/nautilus-preferences-dialog.c:
	add a news panel pane to the preferences dialog
	
2001-04-26  Andy Hertzfeld  <andy@eazel.com>

	changed the news panel not to display any sites by default, since
	it's obnoxious to be doing periodic I/O to sites that weren't explicitly
	enabled.  Added an instructive message about the news panel that is
	displayed when no sites are enabled.
	
	Also, made it immediately test new rss urls when they are input, and
	display an error dialog instead of adding them if they fail.
	
	Also, make it always display the main news display (not configuration
	stuff) when the panel is opened, even if it was in configure mode
	when closed. Plus a few smaller tweaks.
	
	* components/news/nautilus-news.c: (set_bonobo_properties),
	(toggle_open_state), (count_visible_channels),
	(set_views_for_mode), (configure_button_clicked),
	(add_site_from_fields), (make_add_widgets), (set_up_main_widgets),
	(make_news_view):
	
	* components/news/news_channels.xml:
	turn off all the channels by default
	
2001-04-26  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in: Make the control-center (capplet module) check
	properly decode the version number.  Awk wasn't being fed the
	right delimiter.
	
2001-04-26  Dan Mueth  <dan@eazel.com>

	Bringing three more images over from the 1.0.1/1.0.2 branch.
	The dimensional size of these are smaller, although they
	are not all smaller in bytes.  I think this difference
	is why John didn't originally bring these over from the branch.

	* help/nautilus-quick-reference/C/figures/find.png:
	* help/nautilus-quick-reference/C/figures/full.png:
	* help/nautilus-quick-reference/C/figures/music.png:

2001-04-26  Darin Adler  <darin@eazel.com>

	* THANKS: Give Alex Larsson credit for his contribution.

	* configure.in: Added the screenshot directory. Updated the check
	for control center to check for libcapplet instead. Chris Lahey
	told me that Ximian did this in the version they released, so I
	figured I should do it here too.

	* help/nautilus-screenshot-guidelines/.cvsignore:
	* help/nautilus-screenshot-guidelines/C/.cvsignore:
	Ignore more generated files.

2001-04-26  Darin Adler  <darin@eazel.com>

	Integrated a patch by Alexander Larsson <alla@lysator.liu.se> that
	adds a JPEG-specific thumbnailing function that's faster than the
	exiting thumbnail code. This new code is only included if the
	libjpeg library is present at configure time. We still need RPM
	spec file changes to require this library if we are going to build
	RPMs on systems that have libjpeg. I fixed a few bugs in Alex's
	original patch and made some coding style tweaks as well.

	* acconfig.h:
	* configure.in:
	Added a check for libjpeg.
	
	* libnautilus-extensions/Makefile.am:
	* libnautilus-extensions/nautilus-thumbnails-jpeg.c:
	* libnautilus-extensions/nautilus-thumbnails-jpeg.h:
	Add new source files with JPEG thumbnailer.
	
	* libnautilus-extensions/nautilus-thumbnails.c: (make_thumbnails):
	Call the new function for JPEG files.

	Other changes.
	
	* libnautilus-extensions/nautilus-volume-monitor.c: Change
	interval back to 2 seconds.

	* libnautilus-extensions/nautilus-preferences.c:
	(preferences_set_storage_path): Fix storage leak.
	(nautilus_self_check_preferences): Added more checks.
	
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_for_file): Tiny code tweak.

2001-04-26  Rebecca Schulman  <rebecka@eazel.com>
	
	Fix bugzilla.eazel.com bug 7934, to remove the ability
	to make an index using Nautilus.  

	reviewed by: Darin Adler <darin@eazel.com>

	* src/file-manager/fm-list-view.c: (get_cell_text):
	* src/file-manager/fm-search-list-view.c: (real_load_error),
	(display_indexed_search_problems_dialog), (real_get_link_column),
	(real_get_emblems_column):
	Simplify the dialog that allows a Nautilus user to request a new 
	index.  Tell the user instead how to create an index if the user
	has root access in this dialog instead.
	* src/file-manager/nautilus-indexing-info.c:
	(show_last_index_time_dialog), (last_index_time_dialog_new),
	(index_progress_dialog_new), (show_indexing_info_dialog):
	* src/file-manager/nautilus-indexing-info.h:
	Remove the request reindex function.  Remove option to create a new
	index.  Keep dialogs to show either the time of the last index creation,
	or the progress of the current indexing task, depending on whether
	an index is in progress or not.

2001-04-26  Dan Mueth  <dan@eazel.com>

	Committing first draft of the screenshot guidelines for Nautilus
	documentation.  It isn't completely done, but it will be safer in
	CVS than on my hard drive.

	* help/Makefile.am:
	* help/nautilus-screenshot-guidelines/C/Makefile.am:
	* help/nautilus-screenshot-guidelines/C/figures/callout_after.png:
	* help/nautilus-screenshot-guidelines/C/figures/callout_before.png:
	* help/nautilus-screenshot-guidelines/C/figures/circle_callout_after.png:
	* help/nautilus-screenshot-guidelines/C/figures/circle_callout_before.png:
	* help/nautilus-screenshot-guidelines/C/figures/dropshadow_after.png:
	* help/nautilus-screenshot-guidelines/C/figures/dropshadow_before.png:
	* help/nautilus-screenshot-guidelines/C/nautilus-screenshot-guidelines-C.omf:
	* help/nautilus-screenshot-guidelines/C/nautilus-screenshot-guidelines.sgml:
	* help/nautilus-screenshot-guidelines/Makefile.am:

2001-04-26  Darin Adler  <darin@eazel.com>

	Integrated Miguel's patches that he included in Ximian's version
	of Nautilus 1.0 after fixing some bugs, fixing all warnings, and
	adding code to not do the reload of the desktop every 4 seconds if
	FAM is working. The patch does a lot of things, mostly so that
	people can switch back and forth between gmc and nautilus more
	easily.
	
	* components/news/nautilus-news.c: Tweaked includes.
	* src/nautilus-view-frame.c: Tweaked a comment.

Here are notes Miguel included in the patch about the changes he made:

- 2001-04-19  Miguel de Icaza  <miguel@ximian.com>

	* libnautilus-extensions/nautilus-file.c (nautilus_file_get_name):
	Only return name when we actually loaded the name from the desktop
	entry.

	* libnautilus-extensions/nautilus-icon-factory.c
	(nautilus_icon_factory_get_icon_for_file): Compute file_path from
	file_uri, it was missing in this code path.

- 2001-04-16  Miguel de Icaza  <miguel@ximian.com>

	* libnautilus-extensions/nautilus-file.c
	(is_special_desktop_gmc_file): Use strcmp not strncmp here. 

	* src/nautilus-window.c (nautilus_window_realize): Use gnome-logo
	here. 

	* src/file-manager/fm-directory-view.c (activate_callback): Launch
	desktop entries here. 

- 2001-04-11  Miguel de Icaza  <miguel@ximian.com>

	* src/file-manager/fm-icon-view.c
	(get_stored_icon_position_callback): Try to load position
	information from GNOME metadata as well.
	(icon_position_changed_callback): Store metadata changes to the
	desktop as well.

	* src/nautilus-first-time-druid.c
	(nautilus_first_time_druid_show): Disable GMC transition page, as
	we now share the desktop directory and the data files.
	(druid_finished): Remove desktop link to Eazel services.

	* libnautilus-extensions/nautilus-file.c
	(nautilus_file_can_rename): Do not allow to rename x-gnome-apps. 
	(nautilus_file_get_name): Return the translated name of a desktop
	file instead of the file name.  
	Handle URL files in .gnome-desktop directories. 
	(is_special_desktop_gmc_file): New function: Returns true if a
	file should be hidden from the desktop-directory display (for
	sharing the directory with gmc).
	(filter_hidden_and_backup_partition_callback): If we are scanning
	the desktop directory, hide gmc metadata files or legacy files.

	* libnautilus-extensions/nautilus-directory-async.c
	(activation_uri_gmc_link_read_callback): Handle GMC link files
	correctly (skip the prefix "URL: ")

	* libnautilus-extensions/nautilus-icon-factory.c
	(nautilus_icon_factory_get_icon_for_file): Load icons from the
	gnome-metadata for files on the ~/.gnome-desktop directory.
	(nautilus_icon_factory_get_icon_for_file): Load icons for GNOME
	.desktop files.

- 2001-04-11  Miguel de Icaza  <miguel@ximian.com>

	* libnautilus-extensions/nautilus-directory-async.c
	(activation_uri_gmc_link_read_callback): Handle gmc URL
	links correctly.

- 2001-04-10  Miguel de Icaza  <miguel@ximian.com>

	* libnautilus-extensions/nautilus-file-utilities.c
	(DESKTOP_DIRECTORY_NAME): Make it .gnome-desktop.
	(nautilus_get_desktop_directory): Modified to make the nautilus
	home directory be the normal one.

- 2001-04-09  Miguel de Icaza  <miguel@ximian.com>

	* src/file-manager/fm-desktop-icon-view.c: Eliminated all over the
	place the loading of the desktop_directory directory from the
	nautilus api call, and instead just load this value once.

Here are changes that Miguel made, but did not mention in his notes:
	
	* libnautilus-extensions/nautilus-volume-monitor.c: Changed
	the interval for polling to every 4 seconds instead of every 2.

	* libnautilus-extensions/nautilus-file.c: (nautilus_file_rename):
	Rename GMC URLs by changing their metadata only. This leaves no
	way to change the real name of the GMC URL file.
	(nautilus_file_is_in_desktop): New function. Returns TRUE if a
	file seems to be in the desktop. Uses a simple rule that might
	give some false positives, but works even for other people's
	desktop.
	
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_destroy), (do_desktop_rescan),
	(done_loading), (delayed_init), (fm_desktop_icon_view_initialize):
	Set up a callback to reload the desktop every 4 seconds.
	
	* src/nautilus-application.c: (migrate_gmc_trash),
	(migrate_old_nautilus_files), (nautilus_application_startup):
	Rename ~/.gnome-desktop/Trash to ~/.gnome-desktop/Trash-gmc if
	it's a directory. Move files from ~/.nautilus/desktop to
	~/.gnome-desktop.
	
2001-04-26  Dan Mueth  <dan@eazel.com>

	Updated Nautilus Release Notes for Nautilus 1.0.3.  It
	still will need some work and additions, but I have most
	of the boilerplate stuff and new features added.

	* help/nautilus-release-notes/C/nautilus-release-notes.sgml:

2001-04-26  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-preferences-group.c:
	* libnautilus-extensions/nautilus-preferences-group.h:
	Add support for custom preferences items.

	* libnautilus-extensions/nautilus-preferences-item.h:
	* libnautilus-extensions/nautilus-preferences-item.c:
	Add support for custom preferences items.  For now only the theme
	selector uses this powerful technology.

	Fix bug 8167 - Crash boinking on single-click mode.  It was a dumb
	mistake left over from a previous fix.  Wrong number of arguments
	to a signal.

	Fix bug where strings in enumeration menus would show up
	untranslated in the preferences dialog, even in locales where
	translations exist.
	
	* libnautilus-extensions/nautilus-theme.h:
	* libnautilus-extensions/nautilus-theme.c: (load_theme_document),
	(nautilus_pixmap_file_may_be_local),
	(nautilus_theme_get_image_path_from_theme),
	(nautilus_theme_make_preview_pixbuf): Rename this function from
	nautilus_theme_make_selector for greater clarity.
	(has_image_file), (theme_get_property), (theme_get_name_property),
	(theme_get_description_property), (theme_list_insert),
	(theme_get_themes_for_location): Replace some cut-n-paste code by
	a shared function.  Add some FIXMEs for the funky handling of the
	"default" theme.
	(theme_get_builtin_themes), (theme_get_user_themes),
	(theme_get_default_themes): Functions for reaping the
	different types of themes available to Nautilus.
	(nautilus_theme_for_each_theme), (theme_list_invoke_callback): New
	function to iterate all the themese available to Nautilus.  Makes
	Nautilus code that needs to operate on themes (like the theme
	selector) easier to write.
	(nautilus_theme_get_user_themes_directory),
	(nautilus_theme_remove_user_theme),
	(nautilus_theme_install_user_theme):  Functions for reaping the
	different types of themes available to Nautilus.
	
	* src/nautilus-preferences-dialog.c:
	(preferences_dialog_populate_sidebar_tabs_group),
	(theme_changed_callback),
	(update_theme_selector_displayed_value_callback),
	(preferences_dialog_populate_themes_group):
	Add a custom preference item for the theme chooser.
	
	* src/nautilus-theme-selector.h:
	* src/nautilus-theme-selector.c:
	Use regular Gtk widgets in the list so that all the things that
	are expect to work do indeed work.  This includes Gtk+ theme
	changes and custom tweaks made in the code to satisfy the design.
	Larger and bolder labels for example.

	Simplify this code alot by using iterators for the available
	themes.  Also maintain two lists instead of managing a remove_mode
	boolean.  Makes the code simpler.
	
	* src/nautilus-window-menus.c:
	(nautilus_window_initialize_menus_part_1):
	Remove the standalone theme selector handling code.
	
	* src/nautilus-shell-ui.xml:
	Remove the standalone theme selector ui.

2001-04-26  John Sullivan  <sullivan@eazel.com>

	Made the emblems column wider to fit the title "Emblems" (in
	English, in the default font). Made the emblems column in the
	search results view match the one in the standard list view.

	Pavel wants to implement images as column titles, but this is
	passable if that doesn't get done.

	* src/file-manager/fm-list-view.c: (real_get_column_specification):
	Widen the emblems column.
	
	* src/file-manager/fm-search-list-view.c:
	(real_get_emblems_column), 
	(real_get_link_column): Swap positions of name/emblems columns.
	(real_get_column_specification): Widen the emblems column.

2001-04-26  John Sullivan  <sullivan@eazel.com>

	Search results view has been broken for awhile without anyone
	noticing. Between these changes and a NULL-handling fix I
	checked into eel-list.c, it works again. (Soon I will move the
	Emblems column for search list view also, but first I wanted
	to make it work.)

	* src/file-manager/fm-list-view.h:
	* src/file-manager/fm-list-view.c: (fm_list_view_initialize_class),
	(add_to_list), (install_row_images), (get_emblems_column),
	(real_get_emblems_column): Replaced #define for emblems column
	with overridable function.
	
	* src/file-manager/fm-search-list-view.c:
	(fm_search_list_view_initialize_class),
	(real_get_emblem_names_to_exclude), (real_get_emblems_column):
	Override get_emblems_column to return correct value.

2001-04-26  John Sullivan  <sullivan@eazel.com>

	Moved over a few changes from the nautilus-1 branch. 
	I've reviewed all the changes in the branch ChangeLog now,
	so I think we can kiss it goodbye.
	
	* configure.in: Bumped a bunch of version numbers to match
	branch. Robin may have to do some more bumping before 
	shipping 1.0.3.

	* help/nautilus-user-manual/C/figures/custicon.png:
	* help/nautilus-user-manual/C/figures/full.png:
	* help/nautilus-user-manual/C/figures/part.png:
	Smaller versions of screenshots which were too big to
	fit in the Nautilus main panel, by Arlo. (For some reason
	nautilus-quick-reference on HEAD had smaller figures than
	on nautilus-1, but vice-versa for nautilus-user-manual.)

	* src/nautilus-preferences-dialog.c:
	* src/nautilus-shell-ui.xml:
	* src/nautilus-window-menus.c:
	(nautilus_window_initialize_menus_part_1): Made Medusa stuff not
	appear when HAVE_MEDUSA is not defined.

	Other changes:
	
	* libnautilus-extensions/nautilus-program-choosing.c:
	(get_xalf_prefix): Bug fix from Darin (!= -> ==) that
	was breaking launching applications unless you had xalf
	installed (not from branch)
	
2001-04-26  Dan Mueth  <dan@eazel.com>

	Cleaning up documentation build system.  Now there should
	be no or few warnings spit out about the docs.

	* help/Makefile.am:
	* help/docs.make:
	* help/htmldocs.make:
	* help/nautilus-quick-reference/es/Makefile.am:
	* help/nautilus-quick-reference/no/Makefile.am:
	* help/nautilus-release-notes/C/Makefile.am:
	* help/nautilus-user-manual/C/Makefile.am:
	* help/nautilus-user-manual/es/Makefile.am:
	* help/nautilus-user-manual/ko/Makefile.am:
	* help/sgmldocs.make:

2001-04-25  Andy Hertzfeld  <andy@eazel.com>

	* components/news/nautilus-news.c: (nautilus_news_update_display):
	reversed decision about not drawing while the channel was loading
	since it's important to give feedback right away when a channel is
	enabled, and they sometimes takes a long time to load.
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	* libnautilus-extensions/nautilus-sidebar-functions.c:
	* libnautilus-extensions/nautilus-sidebar-functions.h:
	enabled the news panel by default.  Also, while I was in here, I
	made the "home as desktop" feature only available at the advanced
	user level like Bud suggested.
	
2001-04-25  Andy Hertzfeld  <andy@eazel.com>

	* components/news/nautilus-news.c: (draw_rss_items),
	(nautilus_news_draw_channel), (nautilus_news_size_allocate):
	fixed measuring bug caused by the size of the scroll bar
	affecting the layout.  Fixed by calculating the line width at
	size_allocate time, instead of on the spur of the moment.
	
2001-04-25  Andy Hertzfeld  <andy@eazel.com>

	* components/news/nautilus-news.c: (draw_rss_logo_image),
	(draw_rss_items), (nautilus_news_configure_event),
	(nautilus_news_button_release_event), (update_size_and_redraw),
	(nautilus_news_size_allocate), (make_news_view):
	
	attach to size_allocate signal to properly resize the panel
	when the width changes, as well as for the first time when the
	size isn't allocated yet; don't draw the time when it overlaps
	the logo, plus other clean-ups.
	
	* nautilus-clean.sh:
	fixed recently introduced problem in nautilus-clean by replacing
	'==' with '=' as suggested by Darin.
	
2001-04-25  Robin * Slomkowski  <rslomkow@eazel.com>

	* nautilus.spec.in: removed mozilla-mail and mozilla-psm dependency
	                    http://bugzilla.eazel.com/show_bug.cgi?id=8020

2001-04-25  Dan Mueth  <dan@eazel.com>

	Adding versions from 1_0_1_BRANCH, which are more up-to-date.

	* help/nautilus-release-notes/C/nautilus-release-notes.sgml:
	* help/nautilus-user-manual/C/nautilus-user-manual.sgml:

	Adding version for 1.0.1 and 1.0.2.

	* help/nautilus-quick-reference/C/index.html:

2001-04-25  Andy Hertzfeld  <andy@eazel.com>

	* components/news/nautilus-news.c:
	(nautilus_news_button_release_event)
	fixed bug 8153, scroll wheel crashes news panel, by only
	taking action when button 1 is clicked.
		
	(add_site_from_fields):
	added error handling for when the fields are empty; also, use
	http as the protocol if no protocol is specified.
	
2001-04-25  Darin Adler  <darin@eazel.com>

	* src/nautilus-window-menus.c: (help_menu_about_nautilus_callback):
	Made the Copyright string translatable again, by popular demand.

2001-04-24  Dan Mueth  <dan@eazel.com>

	Left-justifying the labels in the help sidebar.
	Also changed strings to remove colons ":".
	Bug#: 8123

	* components/help/hyperbola-nav-tree.c:
	(hyperbola_navigation_tree_new):

	Updating so that 'make install' works right
	and users building RPM's don't get lots of warnings.
	Bug#: 8125

	* omf-install/Makefile.am:

	Changing from "Customer Support" to "Community Support".
	Bug#: 7837

	* src/nautilus-shell-ui.xml:

2001-04-24  Darin Adler  <darin@eazel.com>

	Fix bug 8152 (Opening Help sidebar crashes Nautilus):
	
	* src/nautilus-sidebar.c: (notify_current_sidebar_view): Add check
	for NIL control.

	* nautilus-clean.sh: Change egrep args so we get fewer false
	positives.
	
	* src/nautilus-view-frame.c: (nautilus_view_frame_get_control):
	Formatting tweaks.

2001-04-24  Darin Adler  <darin@eazel.com>

	reviewed by: Maciej Stachowiak <mjs@eazel.com>

	Fix bug 7963 (exiting Nautilus [with Ctrl-C for example] leaves
	nautilus-adapter behind):

	* src/nautilus-component-adapter-factory.c: (activate_factory),
	(unref_factory), (release_factory), (get_corba_factory),
	(nautilus_component_adapter_factory_initialize),
	(nautilus_component_adapter_factory_destroy),
	(nautilus_component_adapter_factory_initialize_class),
	(component_adapter_factory_at_exit_destructor),
	(nautilus_component_adapter_factory_get),
	(nautilus_component_adapter_factory_create_adapter): Redo so it
	creates the factory as needed, and doesn't keep a Bonobo reference
	to the factory so it will die if Nautilus goes away.

	* nautilus-clean.sh: Redo option parsing to use loop.

	* components/throbber/main.c: (main): Fix main function to match
	standard main. Tweak formatting.
	
2001-04-24  John Sullivan  <sullivan@eazel.com>

	Fixed bug 8418 (two more underline-accelerator conflicts)

	* src/file-manager/nautilus-directory-view-ui.xml: Changed
	"Make _Link" to "_Make Link" to avoid conflict with sometimes-
	present "De_lete"
	
	* src/file-manager/nautilus-icon-view-ui.xml: Changed
	"_Tighter Layout" to "Tighter _Layout" to avoid conflict
	with "By _Type".

2001-04-24  John Sullivan  <sullivan@eazel.com>

	Fixed part of bug 7649 (sidebar font doesn't update when font
	changed in non-smooth mode) and various other small problems
	with fonts in sidebar. The font in the tabs is still always
	the smooth font.

	Also, made both default smooth and default non-smooth fonts
	visible simultaneously in the Preferences dialog since they
	are both used in different places at the same time. Maybe
	if we fix the sidebar tabs to not insist on using a smooth
	font we can turn these two controls back into one.

	* src/nautilus-preferences-dialog.c: Changed labels from
	"Font for elsewhere in Nautilus", which had become context-free,
	to "Default smooth font" and "Default non-smooth font". Made
	both of these always visible.
	
	* src/nautilus-sidebar-title.c:
	(nautilus_sidebar_title_initialize_class): Set up auto-variable
	to get default non-smooth font name so we don't have to call 
	get_preferences	repeatedly.
	(get_non_smooth_font): New helper function to get a non-smooth
	font of a specified size.
	(non_smooth_font_changed_callback): New function, updates the
	non-smooth font for the title and "more info" text.
	(update_all_cover): Removed this function.
	(nautilus_sidebar_title_initialize): Call new callback instead of
	update_all when non-smooth font changes. update_all was bailing
	out without doing any work since the text hadn't changed. Also
	call callback once to set the initial non-smooth font info.
	(update_title_font): Changed name from update_font for clarity;
	moved some consts to become #defines instead; fixed bug where 
	this routine wasn't using bold font for either smooth or non-smooth 
	font (2 unrelated bugs); removed unnecessary font-setting call 
	(smooth font is already set elsewhere and doesn't change here);
	remove unnecessary callback for NAUTILUS_PREFERENCES_SMOOTH_GRAPHICS_MODE
	since each label piece already handles this separately.
	(update_title), (nautilus_sidebar_title_size_allocate): Updated for
	name change.

2001-04-24  Darin Adler  <darin@eazel.com>

	reviewed by: John Sullivan <sullivan@eazel.com>

	Fix bug where theme selector would not show themes when the theme
	directory is a symlink.
	
	* src/nautilus-theme-selector.c:
	(nautilus_theme_selector_destroy): Small code cleanup.
	(vfs_file_exists): Pass GNOME_VFS_FILE_INFO_FOLLOW_LINKS.
	(populate_list_with_themes_from_directory): Pass
	GNOME_VFS_FILE_INFO_FOLLOW_LINKS.

	More work on making components go away if Nautilus is prematurely
	terminated.

	* src/nautilus-window-toolbars.c:
	(nautilus_window_initialize_toolbars): Don't create a throbber for
	the desktop, since it doesn't get killed reliably since it never
	gets an X window.
	
	* src/nautilus-window.c: (nautilus_window_constructed),
	(nautilus_window_destroy), (nautilus_window_allow_stop): Do some
	minor cleanup of throbber code.

	* nautilus-clean.sh: Add an option to just display the processes
	and not kill them. Useful for me when I'm writing code that's
	designed to make the processes go away. Also remove the gconfd
	saved state file if we kill gconfd (only nautilus-clean.sh -x) for
	maximum cleanliness (but also maximum unhappiness for any
	remaining gconf clients).
	
2001-04-24  John Sullivan  <sullivan@eazel.com>

	reviewed by: Darin Adler  <darin@eazel.com>

	Fixed bug 7650 (Display flashes forever when Text viewer
	used in FTP)

	* components/text/nautilus-text-view.c: (file_read_callback):
	Bail out when bytes_read is 0, instead of trying again forever.
	This happens at EOF.

2001-04-23  Andy Hertzfeld  <andy@eazel.com>

	* components/news/nautilus-news.c: (mark_new_items),
	(rss_read_done_callback):
	when updating, only redraw if something changed
	
2001-04-23  Ramiro Estrugo  <ramiro@eazel.com>

	* src/nautilus-first-time-druid.c:
	(nautilus_first_time_druid_show):
	Remove extra argument to update_draw_desktop_checkbox_state()
	which was declared as () (instead of (void)) before the last
	change and so the build broke.
	
2001-04-23  Darin Adler  <darin@eazel.com>

	reviewed by: John Sullivan <sullivan@eazel.com>
	
	Add a new command-line option "--no-desktop" as requested by
	fcrozat on behalf of people who want to run Nautilus under KDE as
	well as under GNOME. The option has no effect if Nautilus is
	already running, but if it's the first invocation of Nautilus,
	then no desktop-related preferences show up and the desktop is
	not shown regardless of the setting of those preferences.
	
	* src/nautilus-main.c: (main): Add the no-desktop option. Make the
	desktop-related preferences invisible if it's on, and pass it down
	to the NautilusApplication.

	* src/nautilus-application.h:
	* src/nautilus-application.c: (nautilus_application_startup):
	Don't start the desktop if no_desktop is passed in. Otherwise
	decide based on the preference.

	* libnautilus-extensions/nautilus-preferences-box.c:
	(preferences_box_find_row): Mark this private function static.
	(preferences_box_populate_pane): Get rid of code that would
	translate the pane_name twice.
	(nautilus_preferences_dialog_new): Simplified this code a bit.
	
	* libnautilus-extensions/nautilus-preferences.h:
	* libnautilus-extensions/nautilus-preferences.c:
	(preferences_make_user_level_filtered_key),
	(nautilus_preferences_get_is_invisible),
	(nautilus_preferences_set_is_invisible),
	(preferences_key_make_for_getter),
	(nautilus_preferences_visible_in_current_user_level),
	(nautilus_preferences_is_visible): Added new flag to make a
	preference invisible.

	* src/nautilus-first-time-druid.h:
	* src/nautilus-first-time-druid.c: (set_up_gmc_transition_page),
	(nautilus_first_time_druid_show): Removed code that used to make
	the druid default based on the desktop preference.

	Fixed the Tinderbox.

	* libnautilus-extensions/nautilus-global-preferences.c:
	(default_default_folder_viewer_callback): Allow NULL because that
	happens during self-check.

2001-04-23  Andy Hertzfeld  <andy@eazel.com>

	* components/news/nautilus-news.c: (has_matching_uri),
	(compare_channel_names), (nautilus_news_add_channels),
	(add_site_from_fields), (determine_sort_position),
	(add_channel_entry), (make_remove_widgets):
	
	made it maintain the channel lists in alphabetical order, and
	improved uri matching by canonicalizing them before comparison.
		
	* components/news/news_channels.xml:
	added some new channels
	
	* nautilus-spec.in:
	added news panel to spec file.
	
2001-04-23  Andy Hertzfeld  <andy@eazel.com>

	made the disclosure triangles reflect the changed state by using
	different images when the channel changed; currently, I'm using
	placeholder images, but Arlo will give me the real ones soon.
		
	* components/news/nautilus-news-pixmaps.h:
	added images for triangles to reflect the changed state
	* components/news/nautilus-news.c: (do_destroy), (draw_triangle),
	(rss_logo_callback), (nautilus_news_load_images):
	load the new images, release on destroy, and display when appropriate
	
2001-04-23  John Sullivan  <sullivan@eazel.com>

	reviewed by: Darin Adler  <darin@eazel.com>

	Fixed bug 8024 (Default folder viewer chosen from "View As..."
	window is not reflected in Preferences dialog)

	* libnautilus-extensions/nautilus-global-preferences.h:
	Put iids for Icon and List view here since they must be accessed
	from multiple places now. Add NAUTILUS_DEFAULT_FOLDER_VIEWER_OTHER
	enum case. Add prototype for 
	nautilus_global_preferences_set_default_folder_viewer.
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	(get_default_folder_viewer_preference_from_iid): New helper function,
	returns appropriate NAUTILUS_DEFAULT_FOLDER_VIEWER preference value
	based on folder-viewing iid.
	(default_default_folder_viewer_callback): New function to determine
	default value of NAUTILUS_DEFAULT_FOLDER_VIEWER preference; uses
	gnome_vfs_mime (name is not a typo).
	(set_default_folder_viewer_in_gnome_vfs): New function,
	updates gnome-vfs mime database properly for new folder-viewing iid.
	(default_folder_viewer_changed_callback): New function, reacts
	to change in NAUTILUS_DEFAULT_FOLDER_VIEWER preference by updating
	gnome-vfs mime database (moved here from nautilus-application.c).
	(nautilus_global_preferences_set_default_folder_viewer): New public
	function to set the default folder viewer with an iid; handles setting
	both gnome-vfs and gconf's values.
	(nautilus_global_preferences_initialize): Add callback for when
	default folder viewer changes (moved here from nautilus-application.c).
	
	* libnautilus-extensions/nautilus-program-chooser.c:
	(set_default_for_type): Special-case folder viewer to call
	nautilus_global_preferences_set_default_folder_viewer.
	
	* src/file-manager/nautilus-directory-view-ui.xml: Changed
	"Reset to View Preferences" to "Reset View to Match Preferences".
	It's really long, but the former was very unclear. Improvements
	to wording are hereby solicited.
	
	* src/nautilus-application.c: (manufactures), (create_object),
	(default_folder_viewer_changed_callback): Updated for #define
	name changes.
	(nautilus_application_startup): Moved code that reacted to
	default folder viewer preference to nautilus-global-preferences.c.

2001-04-23  John Harper  <jsh@eazel.com>

	* nautilus-clean.sh: added `nautilus-news' to list of auxiliary
	programs

2001-04-23  Darin Adler  <darin@eazel.com>

	* src/nautilus-window-manage-views.c: (open_location): Handle NULL
	case that can happen now that we check the workspace and area --
	the desktop is no longer guaranteed to be in the list considered
	when looking for the topmost window.

2001-04-23  John Harper  <jsh@eazel.com>

	* components/news/nautilus-news.c (set_up_edit_widgets): when
	packing the remove list into its container, use `TRUE, TRUE'
	instead of `FALSE, FALSE'. This makes the `Remove a site' list
	expand properly

2001-04-23  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-preferences-box.c:
	(preferences_box_populate_pane):
	Make sure we use the translated strings for pane and group names.
	
2001-04-23  Darin Adler  <darin@eazel.com>

	Fix bug 7830 (Nautilus should launch programs with code that has
	xalf support [like the panel does]).

	* libnautilus-extensions/nautilus-program-choosing.c:
	(get_xalf_prefix): Implemented, but not tested with xalf.

2001-04-23  John Harper  <jsh@eazel.com>

	* components/news/nautilus-news.c (set_up_configure_widgets):
	don't set the shadow type of the viewport to no shadow. This
	causes a drawing bug to occur, where vestiges of the checkbox
	prelight aren't erased

2001-04-23  Darin Adler  <darin@eazel.com>

	Prep for xalf feature. Add name of program to all code that
	uses the launch_application_from_command function.

	* libnautilus-extensions/nautilus-program-chooser.c:
	(launch_mime_capplet): Pass the file name of the files and
	programs capplet when starting it up. (Is there a better name to
	use for this case?)
	* src/file-manager/fm-desktop-icon-view.c:
	(change_background_callback): Pass "Background" as the name when
	starting the Background capplet.
	* src/file-manager/fm-directory-view.c: (run_script_callback):
	Pass the file name of the script as the name when starting a
	script.
	(activate_callback): Pass the file name of an executable file when
	starting an executable file by opening it.
	
	* libnautilus-extensions/nautilus-program-choosing.h:
	* libnautilus-extensions/nautilus-program-choosing.c:
	(nautilus_launch_application): Pass the application name from the
	gnome-vfs MIME database when starting an application.
	(get_xalf_prefix): Placeholder for code to figure out the right
	set of parameters to pass to xalf.
	(nautilus_launch_application_from_command): Change to take a name
	for the application. It's ignored when xalf is not used, but used
	as the title when xalf is used.

2001-04-23  Darin Adler  <darin@eazel.com>

	Fix bug 8027 (Viewer preferences are not respected).
	
	* src/nautilus-window.c:
	(nautilus_window_handle_ui_event_callback): Check
	updating_bonobo_state and ignore any callbacks while it's true.

2001-04-23  Ramiro Estrugo  <ramiro@eazel.com>

	* test/test-nautilus-preferences-display.c: (main):
	Need to initialize preferences.
	
2001-04-23  Ramiro Estrugo  <ramiro@eazel.com>

	* components/news/Makefile.am:
	Make sure the nautilus-news-pixmaps.h header is exported to the
	dist tarball.
	
2001-04-23  Ramiro Estrugo  <ramiro@eazel.com>

	Part of bug 7601 - FreeBSD portability fixes.

	* components/music/esd-audio.c: (esdout_loop): Add return NULL to
	make gcc happy.

	* components/music/mpg123.c: (decode_loop): Add return NULL to
	make gcc happy.

	* libnautilus-extensions/nautilus-customization-data.c: Add
	missing include of <stdlib.h>

	* libnautilus-extensions/nautilus-file.c: (group_includes_user):
	Cast the gid to (gid_t)

	* libnautilus-extensions/nautilus-sound.c: Include <wait.h> only
	if we have it.  Otherwise try <sys/wait.h>.

	* src/nautilus-bookmark-parsing.c: Add 	missing include of <stdlib.h>

2001-04-23  Ramiro Estrugo  <ramiro@eazel.com>

	* components/news/Makefile.am:
	Add include flags for for pixmaps in header file included from the
	source directory - which is different from the build directory for
	the tinderbox build.

	* components/news/nautilus-news.c:
	* components/news/nautilus-news-pixmaps.h:
	* components/news/pixmaps.h:
	Rename pixmaps.h to nautilus-news-pixmaps.h to prevent confusion
	in the future.

2001-04-22  Andy Hertzfeld  <andy@eazel.com>

	* components/Makefile.am:
	Josh pointed out that I forgot to add the news component here.
	
2001-04-22  Andy Hertzfeld  <andy@eazel.com>

	implemented change tracking and made the sidebar tab get an
	notification image whenever there's anything new.  Also, improved
	updating and other tweaks.  The news view is pretty much done
	now except for some images from Arlo and lots of testing/debugging.

	* components/news/nautilus-news.c: (get_bonobo_properties),
	(set_bonobo_properties), (nautilus_news_expose_event),
	(nautilus_news_set_prelight_index),
	(nautilus_news_set_news_changed), (clear_channel_changed_flags),
	(nautilus_news_clear_changed_flags), (update_size_and_redraw),
	(has_matching_uri), (mark_new_items), (rss_read_done_callback),
	(nautilus_news_load_channel), (news_get_indicator_image),
	(add_command_buttons), (make_news_view):
	
	* src/nautilus-sidebar.c: (notify_current_sidebar_view),
	(nautilus_sidebar_activate_panel),
	(nautilus_sidebar_deactivate_panel):
	added open/close notifications for sidebar views using
	the bonobo propery bag mechanism
	
2001-04-21  Andy Hertzfeld  <andy@eazel.com>

	implemented the remove command for the news panel, plus
	other clean-ups.
	
	* components/news/nautilus-news.c: (configure_button_clicked),
	(add_site_button_clicked), (add_channel_to_remove_list),
	(add_site_from_fields), (remove_selected_site),
	(add_command_buttons), (add_channel_entry),
	(add_channels_to_lists), (news_label_new),
	(select_row_in_remove_list), (make_remove_widgets),
	(make_add_widgets), (set_up_edit_widgets),
	(set_up_configure_widgets), (make_news_view):

2001-04-21  Andy Hertzfeld  <andy@eazel.com>

	* components/news/nautilus-news.c: (do_destroy), (draw_triangle),
	(draw_rss_logo_image), (is_current_uri), (draw_rss_items),
	(nautilus_news_motion_notify_event), (rss_read_done_callback),
	(make_news_view):

	various improvements to the news view, including Arlofied item positioning,
	prelighting of logos and disclosure triangle, and using bold text
	to indicate the current item instead of a different color.
	
2001-04-20  Gene Z. Ragan  <gzr@eazel.com>

	reviewed by: Darin Adler <darin@eazel.com>

	Fixed bug 8073, roll over Red Hat patches for their
	"plug-n-play" feature to Nautilus.
	
	The code does not use magicdev, but instead uses our
	distribution agnostic volume monitor to achieve identical,
	and in some cases superior, results.
	
	* libnautilus-extensions/nautilus-volume-monitor.c: (floppy_sort),
	(nautilus_volume_monitor_get_target_uri),
	(nautilus_volume_monitor_should_integrate_trash),
	(mount_volume_get_name), (mount_volume_activate),
	(mount_volume_deactivate), (mount_volume_floppy_add),
	(mount_volume_ext2_add), (mount_volume_udf_add),
	(mount_volume_vfat_add), (mount_volume_msdos_add),
	(mount_volume_iso9660_add), (mount_volume_affs_add),
	(mount_volume_auto_add), (mount_volume_cdda_add),
	(mount_volume_fat_add), (mount_volume_hpfs_add),
	(mount_volume_hsfs_add), (mount_volume_minix_add),
	(mount_volume_nfs_add), (mount_volume_proc_add),
	(mount_volume_reiserfs_add), (mount_volume_ufs_add),
	(mount_volume_smb_add), (mount_volume_unsdos_add),
	(mount_volume_xenix_add), (mount_volume_xiafs_add), (find_volumes),
	(create_volume), (copy_volume), (mount_volume_add_filesystem):
	Determine device type when performing volume type specific mount tasks.
	
	* libnautilus-extensions/nautilus-volume-monitor.h:
	Add new device type enumeration.
	
	* src/file-manager/fm-desktop-icon-view.c: (create_mount_link):
	
	* src/nautilus-application.c: (volume_mounted_callback):
	Check for cdroms being mounted and open a window to the cdrom
	mount point if the user has specified that behavior in the
	gnome preferences.

2001-04-20  Ramiro Estrugo  <ramiro@eazel.com>

	* src/nautilus-theme-selector.c:
	Trim down the includes a little bit to only those that are needed.
	
2001-04-20  Ramiro Estrugo  <ramiro@eazel.com>

	* README:
	Update the Mozilla information to point to Taska's support FAQ
	instead of the Nautilus mailing list post.
	
2001-04-20  Andy Hertzfeld  <andy@eazel.com>

	first check-in of "news" sidebar view to display news from selected
	sites that support an rss feed.  It's around 80% completed now, and
	should be quite usable; I just need to finish the remaining 80%.
	
	* components/news/.cvsignore:
	* components/news/Makefile.am:
	* components/news/Nautilus_View_news.oaf.in:
	
	* components/news/nautilus-news.c: (get_bonobo_properties),
	(set_bonobo_properties), (do_destroy), (pixbuf_composite),
	(draw_triangle), (draw_rss_logo_image), (draw_rss_title),
	(draw_rss_items), (nautilus_news_draw_channel),
	(nautilus_news_update_display), (nautilus_news_configure_event),
	(nautilus_news_expose_event), (nautilus_news_set_prelight_index),
	(go_to_uri), (toggle_open_state), (item_hit_test),
	(nautilus_news_button_release_event),
	(nautilus_news_motion_notify_event),
	(nautilus_news_leave_notify_event), (nautilus_news_set_title),
	(free_rss_data_item), (free_rss_channel_items), (free_channel),
	(nautilus_news_free_channel_list), (bool_to_text),
	(nautilus_news_make_channel_document),
	(nautilus_news_save_channel_state), (rss_logo_callback),
	(extract_items), (update_size_and_redraw),
	(rss_read_done_callback), (nautilus_news_load_channel),
	(nautilus_news_make_new_channel), (nautilus_news_add_channels),
	(get_xml_path), (read_channel_list), (check_for_updates),
	(news_get_indicator_image), (load_xpm_image),
	(nautilus_news_load_images), (configure_button_clicked),
	(add_site_button_clicked), (add_site_from_fields),
	(add_command_buttons), (get_channel_from_name),
	(check_button_toggled_callback), (nautilus_news_load_location),
	(add_channel_entry), (add_channels_to_configure_list),
	(set_up_add_widgets), (set_up_configure_widgets),
	(set_up_main_widgets), (make_news_view), (main):
	
	* components/news/news_bullet.png:
	* components/news/news_channels.xml:
	* components/news/pixmaps.h:
	* configure.in:

2001-04-20  Ramiro Estrugo  <ramiro@eazel.com>

	* ChangeLog: rolled over to ChangeLog-20010420.
