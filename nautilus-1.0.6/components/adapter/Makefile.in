# Makefile.in generated automatically by automake 1.4-p4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
APPLETS_CFLAGS = @APPLETS_CFLAGS@
APPLETS_LIBS = @APPLETS_LIBS@
AS = @AS@
BONOBOX_CFLAGS = @BONOBOX_CFLAGS@
BONOBOX_LIBS = @BONOBOX_LIBS@
BONOBO_CFLAGS = @BONOBO_CFLAGS@
BONOBO_LIBS = @BONOBO_LIBS@
BONOBO_PRINT_CFLAGS = @BONOBO_PRINT_CFLAGS@
BONOBO_PRINT_LIBS = @BONOBO_PRINT_LIBS@
BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@
BZ_LIBS = @BZ_LIBS@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CPP = @CPP@
CXX = @CXX@
DATADIRNAME = @DATADIRNAME@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EEL_CFLAGS = @EEL_CFLAGS@
EEL_LIBS = @EEL_LIBS@
EEL_REQUIRED = @EEL_REQUIRED@
ENABLE_PROFILER = @ENABLE_PROFILER@
ESD_CFLAGS = @ESD_CFLAGS@
ESD_CONFIG = @ESD_CONFIG@
ESD_LIBS = @ESD_LIBS@
ESOUND_REQUIRED = @ESOUND_REQUIRED@
EXEEXT = @EXEEXT@
FAM_LIBS = @FAM_LIBS@
FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@
FREETYPE2_CONFIG = @FREETYPE2_CONFIG@
FREETYPE2_LIBS = @FREETYPE2_LIBS@
GCONF_CFLAGS = @GCONF_CFLAGS@
GCONF_CONFIG = @GCONF_CONFIG@
GCONF_LIBS = @GCONF_LIBS@
GCONF_REQUIRED = @GCONF_REQUIRED@
GCONF_SCHEMA_CONFIG_SOURCE = @GCONF_SCHEMA_CONFIG_SOURCE@
GCONF_SCHEMA_FILE_DIR = @GCONF_SCHEMA_FILE_DIR@
GDK_PIXBUF_CFLAGS = @GDK_PIXBUF_CFLAGS@
GDK_PIXBUF_CONFIG = @GDK_PIXBUF_CONFIG@
GDK_PIXBUF_LIBS = @GDK_PIXBUF_LIBS@
GDK_PIXBUF_REQUIRED = @GDK_PIXBUF_REQUIRED@
GENCAT = @GENCAT@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_CONFIG = @GLIB_CONFIG@
GLIB_LIBS = @GLIB_LIBS@
GLIB_REQUIRED = @GLIB_REQUIRED@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GNOMECANVASPIXBUF_CFLAGS = @GNOMECANVASPIXBUF_CFLAGS@
GNOMECANVASPIXBUF_LIBS = @GNOMECANVASPIXBUF_LIBS@
GNOMEUI_CFLAGS = @GNOMEUI_CFLAGS@
GNOMEUI_LIBS = @GNOMEUI_LIBS@
GNOME_CFLAGS = @GNOME_CFLAGS@
GNOME_CONFIG = @GNOME_CONFIG@
GNOME_DB2HTML3_FLAG = @GNOME_DB2HTML3_FLAG@
GNOME_LIBS = @GNOME_LIBS@
GNOME_REQUIRED = @GNOME_REQUIRED@
GNOME_VFS_REQUIRED = @GNOME_VFS_REQUIRED@
GNORBA_CFLAGS = @GNORBA_CFLAGS@
GNORBA_LIBS = @GNORBA_LIBS@
GTK_CFLAGS = @GTK_CFLAGS@
GTK_CONFIG = @GTK_CONFIG@
GTK_LIBS = @GTK_LIBS@
GTK_REQUIRED = @GTK_REQUIRED@
GT_NO = @GT_NO@
GT_YES = @GT_YES@
HAVE_APPLETS = @HAVE_APPLETS@
HAVE_JW = @HAVE_JW@
ICONV_LIBS = @ICONV_LIBS@
IDL_CFLAGS = @IDL_CFLAGS@
IMLIB_REQUIRED = @IMLIB_REQUIRED@
INCLUDE_LOCALE_H = @INCLUDE_LOCALE_H@
INSTOBJEXT = @INSTOBJEXT@
INTLDEPS = @INTLDEPS@
INTLLIBS = @INTLLIBS@
INTLOBJS = @INTLOBJS@
INTLTOOL_PERL = @INTLTOOL_PERL@
JW = @JW@
LIBART_CFLAGS = @LIBART_CFLAGS@
LIBART_CONFIG = @LIBART_CONFIG@
LIBART_LIBS = @LIBART_LIBS@
LIBJPEG = @LIBJPEG@
LIBPNG = @LIBPNG@
LIBRSVG_CFLAGS = @LIBRSVG_CFLAGS@
LIBRSVG_LIBS = @LIBRSVG_LIBS@
LIBRSVG_REQUIRED = @LIBRSVG_REQUIRED@
LIBTOOL = @LIBTOOL@
LIBXML_REQUIRED = @LIBXML_REQUIRED@
LN_S = @LN_S@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MEDUSA_CFLAGS = @MEDUSA_CFLAGS@
MEDUSA_LIBS = @MEDUSA_LIBS@
MEDUSA_REQUIRED = @MEDUSA_REQUIRED@
MKINSTALLDIRS = @MKINSTALLDIRS@
MOZILLA_COMPONENT_CFLAGS = @MOZILLA_COMPONENT_CFLAGS@
MOZILLA_COMPONENT_DEBUG_FLAGS = @MOZILLA_COMPONENT_DEBUG_FLAGS@
MOZILLA_COMPONENT_LDFLAGS = @MOZILLA_COMPONENT_LDFLAGS@
MOZILLA_COMPONENT_LIBS = @MOZILLA_COMPONENT_LIBS@
MOZILLA_COMPONENT_RPATH_FLAGS = @MOZILLA_COMPONENT_RPATH_FLAGS@
MOZILLA_PROFILES_CFLAGS = @MOZILLA_PROFILES_CFLAGS@
NAUTILUS_DEPENDENCY_CFLAGS = @NAUTILUS_DEPENDENCY_CFLAGS@
NAUTILUS_DEPENDENCY_LIBS = @NAUTILUS_DEPENDENCY_LIBS@
NAUTILUS_INCLUDEDIR = @NAUTILUS_INCLUDEDIR@
NAUTILUS_LIBDIR = @NAUTILUS_LIBDIR@
NAUTILUS_LIBS = @NAUTILUS_LIBS@
NAUTILUS_PRIVATE_CFLAGS = @NAUTILUS_PRIVATE_CFLAGS@
NAUTILUS_PRIVATE_LIBS = @NAUTILUS_PRIVATE_LIBS@
OAF_CFLAGS = @OAF_CFLAGS@
OAF_CONFIG = @OAF_CONFIG@
OAF_LIBS = @OAF_LIBS@
OAF_REQUIRED = @OAF_REQUIRED@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ORBIT_CFLAGS = @ORBIT_CFLAGS@
ORBIT_CONFIG = @ORBIT_CONFIG@
ORBIT_IDL = @ORBIT_IDL@
ORBIT_LIBS = @ORBIT_LIBS@
ORBIT_REQUIRED = @ORBIT_REQUIRED@
PACKAGE = @PACKAGE@
POFILES = @POFILES@
POPT_REQUIRED = @POPT_REQUIRED@
POSUB = @POSUB@
RANLIB = @RANLIB@
SCROLLKEEPER_CONFIG = @SCROLLKEEPER_CONFIG@
SCROLLKEEPER_REQUIRED = @SCROLLKEEPER_REQUIRED@
STRIP = @STRIP@
USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
VFS_CFLAGS = @VFS_CFLAGS@
VFS_LIBS = @VFS_LIBS@
XML2_CFLAGS = @XML2_CFLAGS@
XML2_CONFIG = @XML2_CONFIG@
XML2_LIBS = @XML2_LIBS@
XML_CFLAGS = @XML_CFLAGS@
XML_CONFIG = @XML_CONFIG@
XML_I18N_EXTRACT = @XML_I18N_EXTRACT@
XML_I18N_MERGE = @XML_I18N_MERGE@
XML_I18N_MERGE_DESKTOP_RULE = @XML_I18N_MERGE_DESKTOP_RULE@
XML_I18N_MERGE_DIRECTORY_RULE = @XML_I18N_MERGE_DIRECTORY_RULE@
XML_I18N_MERGE_KEYS_RULE = @XML_I18N_MERGE_KEYS_RULE@
XML_I18N_MERGE_OAF_RULE = @XML_I18N_MERGE_OAF_RULE@
XML_I18N_MERGE_PONG_RULE = @XML_I18N_MERGE_PONG_RULE@
XML_I18N_MERGE_SERVER_RULE = @XML_I18N_MERGE_SERVER_RULE@
XML_I18N_MERGE_SHEET_RULE = @XML_I18N_MERGE_SHEET_RULE@
XML_I18N_MERGE_SOUNDLIST_RULE = @XML_I18N_MERGE_SOUNDLIST_RULE@
XML_I18N_MERGE_XML_RULE = @XML_I18N_MERGE_XML_RULE@
XML_I18N_UPDATE = @XML_I18N_UPDATE@
XML_LIBS = @XML_LIBS@
XSLT_CFLAGS = @XSLT_CFLAGS@
XSLT_CONFIG = @XSLT_CONFIG@
XSLT_LIBS = @XSLT_LIBS@
ZVT_LIBS = @ZVT_LIBS@
Z_LIBS = @Z_LIBS@
gnomelocaledir = @gnomelocaledir@
l = @l@

NULL = 

INCLUDES =  	-DG_LOG_DOMAIN=\"Nautilus-Adapter\"		-DICON_DIR=\"$(datadir)/pixmaps/nautilus\" 	-I$(top_srcdir) 	$(NAUTILUS_PRIVATE_CFLAGS) 	$(NULL)


oafdir = $(datadir)/oaf
oaf_in_files =  	Nautilus_ComponentAdapterFactory_std.oaf.in		$(NULL)


oaf_DATA = $(oaf_in_files:.oaf.in=.oaf)

bin_PROGRAMS =  	nautilus-adapter				$(NULL)


nautilus_adapter_SOURCES =  	main.c							bonobo-stream-vfs.c					bonobo-stream-vfs.h					nautilus-adapter-control-embed-strategy.c		nautilus-adapter-control-embed-strategy.h		nautilus-adapter-embed-strategy-private.h		nautilus-adapter-embed-strategy.c			nautilus-adapter-embed-strategy.h			nautilus-adapter-embeddable-embed-strategy.c		nautilus-adapter-embeddable-embed-strategy.h		nautilus-adapter-factory-server.c			nautilus-adapter-factory-server.h			nautilus-adapter-file-load-strategy.c			nautilus-adapter-file-load-strategy.h			nautilus-adapter-load-strategy.c			nautilus-adapter-load-strategy.h			nautilus-adapter-load-strategy.h			nautilus-adapter-progressive-load-strategy.c		nautilus-adapter-progressive-load-strategy.h		nautilus-adapter-stream-load-strategy.c			nautilus-adapter-stream-load-strategy.h			nautilus-zoomable-proxy.c				nautilus-zoomable-proxy.h				nautilus-adapter.c					nautilus-adapter.h					$(NULL)


nautilus_adapter_LDADD =  	$(top_builddir)/libnautilus/libnautilus.la					$(top_builddir)/libnautilus-adapter/libnautilus-adapter.la			$(NAUTILUS_PRIVATE_LIBS)							$(NULL)


EXTRA_DIST = $(oaf_in_files) $(oaf_DATA)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../../config.h
CONFIG_CLEAN_FILES = 
bin_PROGRAMS =  nautilus-adapter$(EXEEXT)
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I../..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
nautilus_adapter_OBJECTS =  main.$(OBJEXT) bonobo-stream-vfs.$(OBJEXT) \
nautilus-adapter-control-embed-strategy.$(OBJEXT) \
nautilus-adapter-embed-strategy.$(OBJEXT) \
nautilus-adapter-embeddable-embed-strategy.$(OBJEXT) \
nautilus-adapter-factory-server.$(OBJEXT) \
nautilus-adapter-file-load-strategy.$(OBJEXT) \
nautilus-adapter-load-strategy.$(OBJEXT) \
nautilus-adapter-progressive-load-strategy.$(OBJEXT) \
nautilus-adapter-stream-load-strategy.$(OBJEXT) \
nautilus-zoomable-proxy.$(OBJEXT) nautilus-adapter.$(OBJEXT)
nautilus_adapter_DEPENDENCIES =  \
$(top_builddir)/libnautilus/libnautilus.la \
$(top_builddir)/libnautilus-adapter/libnautilus-adapter.la
nautilus_adapter_LDFLAGS = 
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DATA =  $(oaf_DATA)

DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(nautilus_adapter_SOURCES)
OBJECTS = $(nautilus_adapter_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps components/adapter/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

nautilus-adapter$(EXEEXT): $(nautilus_adapter_OBJECTS) $(nautilus_adapter_DEPENDENCIES)
	@rm -f nautilus-adapter$(EXEEXT)
	$(LINK) $(nautilus_adapter_LDFLAGS) $(nautilus_adapter_OBJECTS) $(nautilus_adapter_LDADD) $(LIBS)

install-oafDATA: $(oaf_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(oafdir)
	@list='$(oaf_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(oafdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(oafdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(oafdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(oafdir)/$$p; \
	  fi; fi; \
	done

uninstall-oafDATA:
	@$(NORMAL_UNINSTALL)
	list='$(oaf_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(oafdir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = components/adapter

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
bonobo-stream-vfs.o: bonobo-stream-vfs.c ../../config.h \
	bonobo-stream-vfs.h \
	../../libnautilus/nautilus-bonobo-workarounds.h
main.o: main.c ../../config.h nautilus-adapter-factory-server.h \
	../../libnautilus/nautilus-view.h \
	../../libnautilus/nautilus-view-component.h
nautilus-adapter-control-embed-strategy.o: \
	nautilus-adapter-control-embed-strategy.c ../../config.h \
	nautilus-adapter-control-embed-strategy.h \
	nautilus-adapter-embed-strategy.h \
	../../libnautilus/nautilus-view.h \
	../../libnautilus/nautilus-view-component.h \
	nautilus-adapter-embed-strategy-private.h \
	nautilus-zoomable-proxy.h
nautilus-adapter-embed-strategy.o: nautilus-adapter-embed-strategy.c \
	../../config.h nautilus-adapter-embed-strategy.h \
	../../libnautilus/nautilus-view.h \
	../../libnautilus/nautilus-view-component.h \
	nautilus-adapter-control-embed-strategy.h \
	nautilus-adapter-embed-strategy-private.h \
	nautilus-adapter-embeddable-embed-strategy.h
nautilus-adapter-embeddable-embed-strategy.o: \
	nautilus-adapter-embeddable-embed-strategy.c ../../config.h \
	nautilus-adapter-embeddable-embed-strategy.h \
	nautilus-adapter-embed-strategy.h \
	../../libnautilus/nautilus-view.h \
	../../libnautilus/nautilus-view-component.h \
	nautilus-adapter-embed-strategy-private.h \
	nautilus-zoomable-proxy.h
nautilus-adapter-factory-server.o: nautilus-adapter-factory-server.c \
	../../config.h nautilus-adapter-factory-server.h \
	../../libnautilus/nautilus-view.h \
	../../libnautilus/nautilus-view-component.h nautilus-adapter.h \
	../../libnautilus-adapter/nautilus-adapter-factory.h \
	../../libnautilus/nautilus-bonobo-ui.h \
	../../libnautilus/nautilus-bonobo-workarounds.h
nautilus-adapter-file-load-strategy.o: \
	nautilus-adapter-file-load-strategy.c ../../config.h \
	nautilus-adapter-file-load-strategy.h \
	nautilus-adapter-load-strategy.h \
	../../libnautilus/nautilus-view.h \
	../../libnautilus/nautilus-view-component.h
nautilus-adapter-load-strategy.o: nautilus-adapter-load-strategy.c \
	../../config.h nautilus-adapter-load-strategy.h \
	../../libnautilus/nautilus-view.h \
	../../libnautilus/nautilus-view-component.h \
	nautilus-adapter-stream-load-strategy.h \
	nautilus-adapter-file-load-strategy.h \
	nautilus-adapter-progressive-load-strategy.h
nautilus-adapter-progressive-load-strategy.o: \
	nautilus-adapter-progressive-load-strategy.c ../../config.h \
	nautilus-adapter-progressive-load-strategy.h \
	nautilus-adapter-load-strategy.h \
	../../libnautilus/nautilus-view.h \
	../../libnautilus/nautilus-view-component.h
nautilus-adapter-stream-load-strategy.o: \
	nautilus-adapter-stream-load-strategy.c ../../config.h \
	nautilus-adapter-stream-load-strategy.h \
	nautilus-adapter-load-strategy.h \
	../../libnautilus/nautilus-view.h \
	../../libnautilus/nautilus-view-component.h bonobo-stream-vfs.h
nautilus-adapter.o: nautilus-adapter.c ../../config.h nautilus-adapter.h \
	../../libnautilus/nautilus-view.h \
	../../libnautilus/nautilus-view-component.h \
	nautilus-adapter-embed-strategy-private.h \
	nautilus-adapter-embed-strategy.h \
	nautilus-adapter-load-strategy.h \
	../../libnautilus-adapter/nautilus-adapter-factory.h \
	../../libnautilus/nautilus-bonobo-ui.h
nautilus-zoomable-proxy.o: nautilus-zoomable-proxy.c ../../config.h \
	nautilus-zoomable-proxy.h

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-binPROGRAMS
install-exec: install-exec-am

install-data-am: install-oafDATA
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-binPROGRAMS uninstall-oafDATA
uninstall: uninstall-am
all-am: Makefile $(PROGRAMS) $(DATA)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(bindir) $(DESTDIR)$(oafdir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-binPROGRAMS clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-libtool \
		distclean-tags distclean-generic clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool uninstall-oafDATA \
install-oafDATA tags mostlyclean-tags distclean-tags clean-tags \
maintainer-clean-tags distdir info-am info dvi-am dvi check check-am \
installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


@XML_I18N_MERGE_OAF_RULE@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
