# Makefile.in generated automatically by automake 1.4-p4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
APPLETS_CFLAGS = @APPLETS_CFLAGS@
APPLETS_LIBS = @APPLETS_LIBS@
AS = @AS@
BONOBOX_CFLAGS = @BONOBOX_CFLAGS@
BONOBOX_LIBS = @BONOBOX_LIBS@
BONOBO_CFLAGS = @BONOBO_CFLAGS@
BONOBO_LIBS = @BONOBO_LIBS@
BONOBO_PRINT_CFLAGS = @BONOBO_PRINT_CFLAGS@
BONOBO_PRINT_LIBS = @BONOBO_PRINT_LIBS@
BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@
BZ_LIBS = @BZ_LIBS@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CPP = @CPP@
CXX = @CXX@
DATADIRNAME = @DATADIRNAME@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EEL_CFLAGS = @EEL_CFLAGS@
EEL_LIBS = @EEL_LIBS@
EEL_REQUIRED = @EEL_REQUIRED@
ENABLE_PROFILER = @ENABLE_PROFILER@
ESD_CFLAGS = @ESD_CFLAGS@
ESD_CONFIG = @ESD_CONFIG@
ESD_LIBS = @ESD_LIBS@
ESOUND_REQUIRED = @ESOUND_REQUIRED@
EXEEXT = @EXEEXT@
FAM_LIBS = @FAM_LIBS@
FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@
FREETYPE2_CONFIG = @FREETYPE2_CONFIG@
FREETYPE2_LIBS = @FREETYPE2_LIBS@
GCONF_CFLAGS = @GCONF_CFLAGS@
GCONF_CONFIG = @GCONF_CONFIG@
GCONF_LIBS = @GCONF_LIBS@
GCONF_REQUIRED = @GCONF_REQUIRED@
GCONF_SCHEMA_CONFIG_SOURCE = @GCONF_SCHEMA_CONFIG_SOURCE@
GCONF_SCHEMA_FILE_DIR = @GCONF_SCHEMA_FILE_DIR@
GDK_PIXBUF_CFLAGS = @GDK_PIXBUF_CFLAGS@
GDK_PIXBUF_CONFIG = @GDK_PIXBUF_CONFIG@
GDK_PIXBUF_LIBS = @GDK_PIXBUF_LIBS@
GDK_PIXBUF_REQUIRED = @GDK_PIXBUF_REQUIRED@
GENCAT = @GENCAT@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_CONFIG = @GLIB_CONFIG@
GLIB_LIBS = @GLIB_LIBS@
GLIB_REQUIRED = @GLIB_REQUIRED@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GNOMECANVASPIXBUF_CFLAGS = @GNOMECANVASPIXBUF_CFLAGS@
GNOMECANVASPIXBUF_LIBS = @GNOMECANVASPIXBUF_LIBS@
GNOMEUI_CFLAGS = @GNOMEUI_CFLAGS@
GNOMEUI_LIBS = @GNOMEUI_LIBS@
GNOME_CFLAGS = @GNOME_CFLAGS@
GNOME_CONFIG = @GNOME_CONFIG@
GNOME_DB2HTML3_FLAG = @GNOME_DB2HTML3_FLAG@
GNOME_LIBS = @GNOME_LIBS@
GNOME_REQUIRED = @GNOME_REQUIRED@
GNOME_VFS_REQUIRED = @GNOME_VFS_REQUIRED@
GNORBA_CFLAGS = @GNORBA_CFLAGS@
GNORBA_LIBS = @GNORBA_LIBS@
GTK_CFLAGS = @GTK_CFLAGS@
GTK_CONFIG = @GTK_CONFIG@
GTK_LIBS = @GTK_LIBS@
GTK_REQUIRED = @GTK_REQUIRED@
GT_NO = @GT_NO@
GT_YES = @GT_YES@
HAVE_APPLETS = @HAVE_APPLETS@
HAVE_JW = @HAVE_JW@
ICONV_LIBS = @ICONV_LIBS@
IDL_CFLAGS = @IDL_CFLAGS@
IMLIB_REQUIRED = @IMLIB_REQUIRED@
INCLUDE_LOCALE_H = @INCLUDE_LOCALE_H@
INSTOBJEXT = @INSTOBJEXT@
INTLDEPS = @INTLDEPS@
INTLLIBS = @INTLLIBS@
INTLOBJS = @INTLOBJS@
INTLTOOL_PERL = @INTLTOOL_PERL@
JW = @JW@
LIBART_CFLAGS = @LIBART_CFLAGS@
LIBART_CONFIG = @LIBART_CONFIG@
LIBART_LIBS = @LIBART_LIBS@
LIBJPEG = @LIBJPEG@
LIBPNG = @LIBPNG@
LIBRSVG_CFLAGS = @LIBRSVG_CFLAGS@
LIBRSVG_LIBS = @LIBRSVG_LIBS@
LIBRSVG_REQUIRED = @LIBRSVG_REQUIRED@
LIBTOOL = @LIBTOOL@
LIBXML_REQUIRED = @LIBXML_REQUIRED@
LN_S = @LN_S@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MEDUSA_CFLAGS = @MEDUSA_CFLAGS@
MEDUSA_LIBS = @MEDUSA_LIBS@
MEDUSA_REQUIRED = @MEDUSA_REQUIRED@
MKINSTALLDIRS = @MKINSTALLDIRS@
MOZILLA_COMPONENT_CFLAGS = @MOZILLA_COMPONENT_CFLAGS@
MOZILLA_COMPONENT_DEBUG_FLAGS = @MOZILLA_COMPONENT_DEBUG_FLAGS@
MOZILLA_COMPONENT_LDFLAGS = @MOZILLA_COMPONENT_LDFLAGS@
MOZILLA_COMPONENT_LIBS = @MOZILLA_COMPONENT_LIBS@
MOZILLA_COMPONENT_RPATH_FLAGS = @MOZILLA_COMPONENT_RPATH_FLAGS@
MOZILLA_PROFILES_CFLAGS = @MOZILLA_PROFILES_CFLAGS@
NAUTILUS_DEPENDENCY_CFLAGS = @NAUTILUS_DEPENDENCY_CFLAGS@
NAUTILUS_DEPENDENCY_LIBS = @NAUTILUS_DEPENDENCY_LIBS@
NAUTILUS_INCLUDEDIR = @NAUTILUS_INCLUDEDIR@
NAUTILUS_LIBDIR = @NAUTILUS_LIBDIR@
NAUTILUS_LIBS = @NAUTILUS_LIBS@
NAUTILUS_PRIVATE_CFLAGS = @NAUTILUS_PRIVATE_CFLAGS@
NAUTILUS_PRIVATE_LIBS = @NAUTILUS_PRIVATE_LIBS@
OAF_CFLAGS = @OAF_CFLAGS@
OAF_CONFIG = @OAF_CONFIG@
OAF_LIBS = @OAF_LIBS@
OAF_REQUIRED = @OAF_REQUIRED@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ORBIT_CFLAGS = @ORBIT_CFLAGS@
ORBIT_CONFIG = @ORBIT_CONFIG@
ORBIT_IDL = @ORBIT_IDL@
ORBIT_LIBS = @ORBIT_LIBS@
ORBIT_REQUIRED = @ORBIT_REQUIRED@
PACKAGE = @PACKAGE@
POFILES = @POFILES@
POPT_REQUIRED = @POPT_REQUIRED@
POSUB = @POSUB@
RANLIB = @RANLIB@
SCROLLKEEPER_CONFIG = @SCROLLKEEPER_CONFIG@
SCROLLKEEPER_REQUIRED = @SCROLLKEEPER_REQUIRED@
STRIP = @STRIP@
USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
VFS_CFLAGS = @VFS_CFLAGS@
VFS_LIBS = @VFS_LIBS@
XML2_CFLAGS = @XML2_CFLAGS@
XML2_CONFIG = @XML2_CONFIG@
XML2_LIBS = @XML2_LIBS@
XML_CFLAGS = @XML_CFLAGS@
XML_CONFIG = @XML_CONFIG@
XML_I18N_EXTRACT = @XML_I18N_EXTRACT@
XML_I18N_MERGE = @XML_I18N_MERGE@
XML_I18N_MERGE_DESKTOP_RULE = @XML_I18N_MERGE_DESKTOP_RULE@
XML_I18N_MERGE_DIRECTORY_RULE = @XML_I18N_MERGE_DIRECTORY_RULE@
XML_I18N_MERGE_KEYS_RULE = @XML_I18N_MERGE_KEYS_RULE@
XML_I18N_MERGE_OAF_RULE = @XML_I18N_MERGE_OAF_RULE@
XML_I18N_MERGE_PONG_RULE = @XML_I18N_MERGE_PONG_RULE@
XML_I18N_MERGE_SERVER_RULE = @XML_I18N_MERGE_SERVER_RULE@
XML_I18N_MERGE_SHEET_RULE = @XML_I18N_MERGE_SHEET_RULE@
XML_I18N_MERGE_SOUNDLIST_RULE = @XML_I18N_MERGE_SOUNDLIST_RULE@
XML_I18N_MERGE_XML_RULE = @XML_I18N_MERGE_XML_RULE@
XML_I18N_UPDATE = @XML_I18N_UPDATE@
XML_LIBS = @XML_LIBS@
XSLT_CFLAGS = @XSLT_CFLAGS@
XSLT_CONFIG = @XSLT_CONFIG@
XSLT_LIBS = @XSLT_LIBS@
ZVT_LIBS = @ZVT_LIBS@
Z_LIBS = @Z_LIBS@
gnomelocaledir = @gnomelocaledir@
l = @l@

NULL = 

lib_LTLIBRARIES = libnautilus.la

INCLUDES =  	-I$(builddir) 	-I$(top_srcdir) 	-I$(top_builddir) 	$(NAUTILUS_DEPENDENCY_CFLAGS) 	-DDATADIR=\""$(datadir)"\" 	$(NULL)


libnautilus_la_LDFLAGS =  	$(NULL)


nautilus_view_component_idl_sources =  	nautilus-view-component-stubs.c			nautilus-view-component-skels.c			nautilus-view-component.h			nautilus-view-component-common.c


nautilus_distributed_undo_idl_sources =  	nautilus-distributed-undo-stubs.c		nautilus-distributed-undo-skels.c		nautilus-distributed-undo.h			nautilus-distributed-undo-common.c


libnautilusincludedir = $(includedir)/libnautilus

libnautilusinclude_HEADERS =  	libnautilus.h					nautilus-bonobo-ui.h				nautilus-bonobo-workarounds.h			nautilus-clipboard.h				nautilus-distributed-undo.h			nautilus-idle-queue.h				nautilus-view-component.h			nautilus-view.h					nautilus-view-standard-main.h			nautilus-undo.h					nautilus-undo-private.h				$(NULL)


libnautilus_la_SOURCES =  	$(nautilus_view_component_idl_sources)			$(nautilus_distributed_undo_idl_sources)		nautilus-bonobo-workarounds.c				nautilus-clipboard.c					nautilus-idle-queue.c					nautilus-undo-transaction.c				nautilus-undo-transaction.h				nautilus-undo.c						nautilus-view.c						nautilus-view-standard-main.c				$(NULL)


uidir = $(datadir)/gnome/ui
ui_DATA =  	nautilus-clipboard-ui.xml		$(NULL)


idldir = $(datadir)/idl
idl_DATA =  	nautilus-view-component.idl		nautilus-distributed-undo.idl		$(NULL)


EXTRA_DIST =  	$(ui_DATA)				$(idl_DATA)				$(NULL)


BUILT_SOURCES =  	$(nautilus_view_component_idl_sources)			$(nautilus_distributed_undo_idl_sources)		$(NULL)


CLEANFILES =  	$(nautilus_view_component_idl_sources)			nautilus_view_component_idl_stamp			$(nautilus_distributed_undo_idl_sources)		nautilus_distributed_undo_idl_stamp             	$(NULL)

mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
LTLIBRARIES =  $(lib_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
libnautilus_la_LIBADD = 
libnautilus_la_OBJECTS =  nautilus-view-component-stubs.lo \
nautilus-view-component-skels.lo nautilus-view-component-common.lo \
nautilus-distributed-undo-stubs.lo nautilus-distributed-undo-skels.lo \
nautilus-distributed-undo-common.lo nautilus-bonobo-workarounds.lo \
nautilus-clipboard.lo nautilus-idle-queue.lo \
nautilus-undo-transaction.lo nautilus-undo.lo nautilus-view.lo \
nautilus-view-standard-main.lo
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DATA =  $(idl_DATA) $(ui_DATA)

HEADERS =  $(libnautilusinclude_HEADERS)

DIST_COMMON =  README Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(libnautilus_la_SOURCES)
OBJECTS = $(libnautilus_la_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) $(top_srcdir)/Makefile.shared
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps libnautilus/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libnautilus.la: $(libnautilus_la_OBJECTS) $(libnautilus_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libnautilus_la_LDFLAGS) $(libnautilus_la_OBJECTS) $(libnautilus_la_LIBADD) $(LIBS)

install-idlDATA: $(idl_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(idldir)
	@list='$(idl_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(idldir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(idldir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(idldir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(idldir)/$$p; \
	  fi; fi; \
	done

uninstall-idlDATA:
	@$(NORMAL_UNINSTALL)
	list='$(idl_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(idldir)/$$p; \
	done

install-uiDATA: $(ui_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(uidir)
	@list='$(ui_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(uidir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(uidir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(uidir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(uidir)/$$p; \
	  fi; fi; \
	done

uninstall-uiDATA:
	@$(NORMAL_UNINSTALL)
	list='$(ui_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(uidir)/$$p; \
	done

install-libnautilusincludeHEADERS: $(libnautilusinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libnautilusincludedir)
	@list='$(libnautilusinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libnautilusincludedir)/$$p"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libnautilusincludedir)/$$p; \
	done

uninstall-libnautilusincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	list='$(libnautilusinclude_HEADERS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(libnautilusincludedir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = libnautilus

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) top_distdir="$(top_distdir)" distdir="$(distdir)" dist-hook
nautilus-bonobo-workarounds.lo nautilus-bonobo-workarounds.o : \
	nautilus-bonobo-workarounds.c ../config.h \
	nautilus-bonobo-workarounds.h
nautilus-clipboard.lo nautilus-clipboard.o : nautilus-clipboard.c \
	../config.h nautilus-clipboard.h nautilus-bonobo-ui.h
nautilus-distributed-undo-common.lo nautilus-distributed-undo-common.o : \
	nautilus-distributed-undo-common.c nautilus-distributed-undo.h
nautilus-distributed-undo-skels.lo nautilus-distributed-undo-skels.o : \
	nautilus-distributed-undo-skels.c nautilus-distributed-undo.h
nautilus-distributed-undo-stubs.lo nautilus-distributed-undo-stubs.o : \
	nautilus-distributed-undo-stubs.c nautilus-distributed-undo.h
nautilus-idle-queue.lo nautilus-idle-queue.o : nautilus-idle-queue.c \
	../config.h nautilus-idle-queue.h
nautilus-undo-transaction.lo nautilus-undo-transaction.o : \
	nautilus-undo-transaction.c ../config.h \
	nautilus-undo-transaction.h nautilus-undo.h \
	nautilus-distributed-undo.h nautilus-undo-private.h \
	nautilus-bonobo-workarounds.h
nautilus-undo.lo nautilus-undo.o : nautilus-undo.c ../config.h \
	nautilus-undo.h nautilus-undo-private.h \
	nautilus-distributed-undo.h nautilus-undo-transaction.h \
	nautilus-undo.h
nautilus-view-component-common.lo nautilus-view-component-common.o : \
	nautilus-view-component-common.c nautilus-view-component.h
nautilus-view-component-skels.lo nautilus-view-component-skels.o : \
	nautilus-view-component-skels.c nautilus-view-component.h
nautilus-view-component-stubs.lo nautilus-view-component-stubs.o : \
	nautilus-view-component-stubs.c nautilus-view-component.h
nautilus-view-standard-main.lo nautilus-view-standard-main.o : \
	nautilus-view-standard-main.c ../config.h \
	nautilus-view-standard-main.h nautilus-view.h \
	nautilus-view-component.h
nautilus-view.lo nautilus-view.o : nautilus-view.c ../config.h \
	nautilus-view.h nautilus-view-component.h \
	nautilus-bonobo-workarounds.h nautilus-idle-queue.h \
	nautilus-undo.h

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLTLIBRARIES
install-exec: install-exec-am

install-data-am: install-idlDATA install-uiDATA \
		install-libnautilusincludeHEADERS
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLTLIBRARIES uninstall-idlDATA \
		uninstall-uiDATA uninstall-libnautilusincludeHEADERS
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(idldir) \
		$(DESTDIR)$(uidir) $(DESTDIR)$(libnautilusincludedir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean-am:  mostlyclean-libLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-libLTLIBRARIES clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-libLTLIBRARIES distclean-compile \
		distclean-libtool distclean-tags distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile \
mostlyclean-libtool distclean-libtool clean-libtool \
maintainer-clean-libtool uninstall-idlDATA install-idlDATA \
uninstall-uiDATA install-uiDATA uninstall-libnautilusincludeHEADERS \
install-libnautilusincludeHEADERS tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir info-am info dvi-am dvi check \
check-am installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


$(nautilus_view_component_idl_sources): nautilus_view_component_idl_stamp
nautilus_view_component_idl_stamp: nautilus-view-component.idl
	$(ORBIT_IDL) $(IDL_CFLAGS) --define=NAUTILUS_VIEW_COMPONENT_COMPILATION $(srcdir)/nautilus-view-component.idl
	touch nautilus_view_component_idl_stamp

$(nautilus_distributed_undo_idl_sources): nautilus_distributed_undo_idl_stamp
nautilus_distributed_undo_idl_stamp: nautilus-distributed-undo.idl
	$(ORBIT_IDL) $(IDL_CFLAGS) $(srcdir)/nautilus-distributed-undo.idl
	touch nautilus_distributed_undo_idl_stamp

$(libnautilus_la_OBJECTS): nautilus_view_component_idl_stamp nautilus_distributed_undo_idl_stamp

dist-hook:
	cd $(distdir); rm -f $(CLEANFILES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
