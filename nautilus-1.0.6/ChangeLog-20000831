2000-08-31  Robey Pointer  <robey@eazel.com>

	* components/services/trilobite/libtrilobite/Makefile.am:

	Libtrilobite now needs gnome-vfs -- oops.

2000-08-31  J Shane Culpepper  <pepper@eazel.com>

	* components/services/summary/lib/eazel-summary-shared.c:
	(parse_a_service), (parse_a_eazel_news_item),
	(parse_a_update_news_item):
	* components/services/summary/lib/eazel-summary-shared.h:

	Adding the rest of the xml parser.	

2000-08-31  Robey Pointer  <robey@eazel.com>

	* components/services/trilobite/libtrilobite/Makefile.am:
	* components/services/trilobite/libtrilobite/trilobite-core-utils.c
	: (trilobite_close_log), (trilobite_open_uri),
	(trilobite_fetch_uri), (trilobite_fetch_uri_to_file):
	* components/services/trilobite/libtrilobite/trilobite-core-utils.h
	:

	Add trilobite_fetch_uri() and trilobite_fetch_uri_to_file() to the
	core utils in libtrilobite.  This makes it easy to use gnome-vfs
	to fetch a remote file into a buffer (hint: XML).
	
	* components/services/trilobite/libtrilobite/trilobite-redirect.c:
	* components/services/trilobite/libtrilobite/trilobite-redirect.h:

	Fetch the url redirection table from an XML file on the server and
	store it in gconf for other views to use.
	
	* components/services/trilobite/libtrilobite/trilobite-root-client.
	c: (trilobite_root_client_initialize):

	Clarify the FIXME.

2000-08-31  John Sullivan  <sullivan@eazel.com>

	* components/tree/nautilus-tree-expansion-state.c:
	Made the tree view expansion state preference use a full gconf
	path so it's not coupled to user level.

2000-08-31  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-throbber.c: (select_throbber_image),
	(nautilus_throbber_load_images):
	made the throbber throb in the intended direction (clockwise); the
	problem was caused by prepending to the image list, which was reversing
	their order - fixed by making it append instead.
	
2000-08-31  J Shane Culpepper  <pepper@eazel.com>

	* components/services/summary/lib/eazel-summary-shared.c:
	(summary_data_new), (services_data_new), (eazel_news_data_new),
	(update_news_data_new), (parse_a_service),
	(parse_a_eazel_news_item), (parse_a_update_news_item),
	(build_services_glist_from_xml), (build_eazel_news_glist_from_xml),
	(build_update_news_glist_from_xml), (parse_summary_xml_file):

	New snapshot of the summary xml parser.  Getting closer to finished.

2000-08-31  Andy Hertzfeld  <andy@eazel.com>

	various cleanups and enhancements for the rpm view

	* components/rpmview/nautilus-rpm-view.h:
	moved the details private again by moving them out of the header file
	* components/rpmview/nautilus-rpm-view.c:
	(nautilus_rpm_view_initialize),
	(nautilus_rpm_view_update_from_uri), (nautilus_rpm_view_get_uri),
	(nautilus_rpm_view_verify_package_callback):
	moved the details back here; added an accessor for the uri field;
	added a verify button; changed label info text back to using non-aa
	text, since aa-text doesn't justify right yet; captured images
	from the header if present.
	* components/rpmview/nautilus-rpm-view-install.c:
	(nautilus_rpm_view_install_done),
	(nautilus_rpm_view_install_package_callback):
	used the new accessor for uris.
	
2000-08-31  John Sullivan  <sullivan@eazel.com>

	* libnautilus-extensions/nautilus-gtk-extensions.c:
	(finish_button_activation): Little bitty code cleanup.

2000-08-31  Gene Z. Ragan  <gzr@eazel.com>

	Fixed bug 1699, get help stuff to render in mozilla.
	
	* components/mozilla/main.c: (main):
	* components/mozilla/nautilus-mozilla-content-view.c:
	(mozilla_vfs_read_callback), (mozilla_vfs_callback),
	Two new callbacks to handle streaming of data into
	the mozilla component.
	
	(nautilus_mozilla_content_view_load_uri):
	* components/mozilla/nautilus-mozilla-content-view.oafinfo:
	Modified file so mozilla component will handle all types.

2000-08-31  Rebecca Schulman  <rebecka@eazel.com>
	Completed the rest of 2369 for the required
	milestone.

	* check-FIXME.pl: Make the script a little
	bit smarter about recognizing FIXMEs with
	bug reports.

	* src/nautilus-search-bar-criterion.c:
	* src/nautilus-search-bar-criterion.h:
	* src/nautilus-search-bar-criterion-private.h:	
	(nautilus_search_bar_criterion_destroy),
	(nautilus_search_bar_criterion_new), (option_menu_callback),
	(nautilus_search_bar_criterion_set_callback),
	(nautilus_search_bar_criterion_new_from_values),
	(nautilus_search_bar_criterion_next_new),
	(nautilus_search_bar_criterion_first_new),
	(nautilus_search_bar_criterion_get_location),
	(get_next_default_search_criterion_type),
	(nautilus_search_bar_criterion_show),
	(nautilus_search_bar_criterion_hide),
	(nautilus_search_bar_criterion_human_from_uri),
	(nautilus_search_uri_get_first_criterion), (get_name_location_for),
	(get_content_location_for), (get_file_type_location_for),
	(get_size_location_for), (get_emblem_location_for),
	(get_date_modified_location_for), (get_owner_location_for),
	(make_emblem_value_menu), (emblems_changed_callback):
	* libnautilus-extensions/Makefile.am:
	* src/Makefile.am:
	moved search bar criterion class out of 
	libnautilus-extensions and into /src
	Added acceptance of the emblems changed signal, which
	causes a redraw of an emblem criteria menu.
	
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_destroy), (construct_private_metafile_vfs_uri),
	(nautilus_directory_new):
	Changed the name of metafile_vfs_uri function from
	metafile_uri to reflect its return of a gnome vfs uri.
	Check for the case where the metafile was not successfully 
	created when freeing.

	* src/nautilus-complex-search-bar.c: (criterion_callback):
	got rid of extraneous print statement.
	
	* src/nautilus-property-browser.c: (remove_emblem),
	(emblem_dialog_clicked), (emit_emblems_changed_signal):
	Added the emission of signals that happen when the list of 
	emblems change so that we tell the search bar about it.
	
	* src/nautilus-signaller.c: (nautilus_signaller_initialize_class):
	* src/nautilus-signaller.h:
	Added an "emblems changed" signal to the signaller's vocabulary,
	since we need a global signal, so this seems to be the logical
	object to attach it to.

2000-08-31  John Sullivan  <sullivan@eazel.com>

	Fixed bug 2013 (Enter should start complex search when any
	search text field has focus)

	* libnautilus-extensions/nautilus-gtk-extensions.c:
	(nautilus_gtk_button_auto_click): Now checks for insensitive
	state and does nothing in that case.
	
	* src/nautilus-complex-search-bar.c:
	(nautilus_complex_search_bar_initialize):
	Made find button get created before criteria widgets.
	(attach_criterion_to_search_bar): Wire up "activate"
	signal for text field to auto_click the find button.
	* src/nautilus-simple-search-bar.c:
	(nautilus_simple_search_bar_initialize): Now the
	"activate" signal for the one text field here calls
	auto_click on the button instead of calling a separate
	callback that checks button sensitivity (indirectly) and 
	then starts search. Watch the button depress as if by magic! 
	Impress your friends!

2000-08-31  John Sullivan  <sullivan@eazel.com>

	Fixed bug 1037 (Use "folder" instead of "directory" consistently)

	I think I found them all. If you find any others, fix them or
	write up new bug reports about them.

	* libnautilus-extensions/nautilus-file.c:
	(format_item_count_for_display), (nautilus_file_dump):
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_display_selection_info):
	* src/file-manager/fm-error-reporting.c:
	(fm_report_error_renaming_file): Replaced uses of "directory"
	and "directories" in the UI with "folder" and "folders"
	
	* src/nautilus-window-menus.c: (nautilus_window_initialize_menus):
	* src/nautilus-window-private.h:
	* src/nautilus-window-toolbars.c: Same as above. Also moved the
	hint strings used by both toolbar buttons and menu items into
	a shared header file instead of duplicating them.

2000-08-31  Ramiro Estrugo  <ramiro@eazel.com>

	* components/mozilla/Makefile.am:
	* components/mozilla/nautilus-mozilla-content-view.c:
	(nautilus_mozilla_content_view_initialize),
	(bonobo_mozilla_callback):
	Add commented out support for registering a component.
	Add a dumb streaming example.
	
2000-08-31  Ramiro Estrugo  <ramiro@eazel.com>

	* components/mozilla/mozilla-components.cpp:
	* components/mozilla/mozilla-components.h:
	New dumb wrapper for registering a mozilla xpcom component from the
	Nautilus universe.
	
2000-08-31  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-toolbar.c: (nautilus_toolbar_size_allocate):
	fixed bug 2628, merged toolbar items appear after throbber, by
	saving and restoring the current position around the positioning
	of the throbber.
	
2000-08-31  John Sullivan  <sullivan@eazel.com>

	Converted more preferences to not be coupled to user level,
	following up on Ramiro's change to make this possible. Note
	that some of your preferences might experience a one-time
	change after this checkout (most noticeably the sidebar width).

	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_register): Removed default values for
	sidebar width.
	
	* libnautilus-extensions/nautilus-global-preferences.h:
	Renamed NAUTILUS_PREFERENCES_ICON_VIEW_TEXT_ATTRIBUTE_NAMES to
	NAUTILUS_PREFERENCES_ICON_CAPTIONS.
	Moved NAUTILUS_PREFERENCES_ICON_CAPTIONS, 
	NAUTILUS_PREFERENCES_SHOW_BUILT_IN_BOOKMARKS, and 
	NAUTILUS_PREFERENCES_SIDEBAR_WIDTH to the non-user-level-coupled
	section, and gave them full gconf paths.
	Added clarifying comment to NAUTILUS_PREFERENCES_SIDEBAR_PANELS_NAMESPACE.
	
	* src/file-manager/fm-directory-view.c:
	Removed mysterious semicolon that was the first character in the file.
	(fm_directory_view_initialize), (fm_directory_view_destroy):
	Update for name change of NAUTILUS_PREFERENCES_ICON_CAPTIONS.
	* src/file-manager/fm-icon-text-window.c:
	(changed_attributes_option_menu_callback),
	(create_icon_text_window), (fm_icon_text_window_destroy_callback),
	(fm_get_text_attribute_names_preference_or_default):
	Update for name change of NAUTILUS_PREFERENCES_ICON_CAPTIONS.
	
	* src/nautilus-window.c: (nautilus_window_initialize): Teensy
	comment clarification.

2000-08-31  John Sullivan  <sullivan@eazel.com>

	Fixed bug 2327 (Alt-key shortcuts to navigate menus shouldn't
	work on Desktop). Control-key shortcuts to invoke items directly
	still work. I had to fix a Bonobo bug to make this work, so
	until you get a new Bonobo this won't work for you (but it will
	still compile and run and all).

	* src/nautilus-window.h:
	Prototype for nautilus_window_disable_keyboard_navigation_for_menus.
	
	* src/nautilus-window-menus.c: Added normal_menu_titles, a static
	array of menu paths used for iterating across all the textual
	menu titles.
	(get_menu_title): New function, returns menu title given path.
	(remove_underline_accelerator_from_menu_title): New function,
	resets the label of a menu to be the same, but without the underline.
	(nautilus_window_disable_keyboard_navigation_for_menus): New function,
	iterates through normal_menu_titles calling remove_underline_... 
	on each.
	(new_top_level_menu): Now computes title from path using get_menu_title
	instead of taking title as parameter.
	(nautilus_window_create_top_level_menus): New function, creates all
	the top-level menus (other than weird user level one) by iterating
	across normal_menu_titles.
	(nautilus_window_initialize_menus): Now calls _create_top_level_menus
	instead of creating each one at a time.

	* src/nautilus-desktop-window.c: (nautilus_desktop_window_new):
	Now calls nautilus_window_disable_keyboard_navigation_for_menus
	just after creating the NautilusWindow.

2000-08-31  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-about.c: (nautilus_about_initialize),
	(nautilus_about_draw_info):
	draw the passed-in comment in the appropriate position. This change
	completes the new about dialog.
	* src/nautilus-window-menus.c: (help_menu_about_nautilus_callback):
	tweaked the about window comment and authors.
	
2000-08-31  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-about.c: (nautilus_about_initialize):
	fixed bug 2653, about window crashes if shown more than once.
	Fixed by setting the "close_hides" boolean.  Also, set the
	title of the window to "About Nautilus".
	
2000-08-31  Ramiro Estrugo  <ramiro@eazel.com>

	Bug 1293.  Core dump if gconf returns bad values
	
	* libnautilus-extensions/nautilus-user-level-manager.c:
	(nautilus_user_level_manager_get_user_level):
	Add blurb explaining why its ok to trust the returned string.
	This was actually fixed by komrade Jirka's last checkin to this
	file.
	
2000-08-31  Ramiro Estrugo  <ramiro@eazel.com>

	* src/nautilus-window-menus.c: 
	(nautilus_window_initialize_menus): Use
	gtk_signal_connect_while_alive() for user_level_changed_callback
	so that we dont get callbacks after we are dead.

2000-08-31  Ramiro Estrugo  <ramiro@eazel.com>

	Task 1229.  Need support for preferences not coupled to user level.
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_register):
	Add FIXME for the issue of setting default values for non user
	level specific preferences.
	
	* libnautilus-extensions/nautilus-global-preferences.h:
	Add blurb explaining preferences that are user level specific and
	those that arent.

	* libnautilus-extensions/nautilus-preferences.c:
	(preferences_hash_node_add_by_user_level_callbacks),
	(preferences_hash_node_add_callback),
	New functions to deal with callbacks for preferences that are
	coupled to the user level.
	
	(preferences_hash_node_check_changes_func),
	(preferences_make_make_gconf_key),
	(preferences_gconf_by_user_level_callback),
	(preferences_gconf_callback), (nautilus_preferences_add_callback),
	New functions to deal with callbacks for preferences that are NOT
	coupled to the user level.

	(nautilus_preferences_set_boolean),
	(nautilus_preferences_get_boolean),
	(nautilus_preferences_set_string_list),
	(nautilus_preferences_get_string_list),
	(nautilus_preferences_set_enum), (nautilus_preferences_get_enum),
	(nautilus_preferences_set), (nautilus_preferences_get):
	Add support for preferences that are not coupled to the user
	level.  Compute gconf keys by taking the preference name into
	account.  If it begins with a "/" (indicating it is fully
	qualified) then treat it as a regular gconf key and use it as is.
	 Otherwise, use the user_level_manager to compute a key according
	to the current user level.
	
	* libnautilus-extensions/nautilus-preferences.h:
	Add documentation explaining the two different ways to specify
	preference names depending on whether they are user level specific
	or not.

	* src/nautilus-first-time-druid.c: (set_http_proxy):
	Use the non user level specific perferences support instead of
	poking gconf directly.
	
2000-08-31  Eskil Heyn Olsen  <eskil@eazel.com>

	* nautilus-installer/src/evil.xpm:
	Forget the evil xpm for failed operation.

2000-08-31  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_emit_done):
	Debug output.
	
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(eazel_install_flatten_categories), (install_new_packages),
	(eazel_install_download_packages),
	(eazel_install_pre_install_packages),
	(eazel_install_do_install_packages),
	(eazel_install_prune_packages),
	(eazel_install_package_name_compare),
	(eazel_install_fetch_rpm_dependencies):
	Revamped a lot to prevent multiple downloads of the same file (bug
	2643), as the installer revealed some easy ways to trigger
	that. Basically, I no longer handle each category individually,
	but flatten the list. Also handles package-list xml's with
	dependency trees.
	
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(parse_category), (osd_parse_implementation), (osd_parse_softpkg):
	Removed xml_get_prop and use xml_get_value instead. 

	* nautilus-installer/src/Makefile:
	* nautilus-installer/src/Makefile.am:
	* nautilus-installer/src/callbacks.c: (begin_install):
	* nautilus-installer/src/installer.c: (create_pixmap),
	(create_what_to_do_page), (create_install_page),
	(create_finish_page_good), (create_finish_page_evil),
	(create_window), (install_done), (toggle_button_lock),
	(toggle_button_toggled), (eazel_installer_add_category),
	(create_info_druid_page), (check_system),
	(eazel_install_parse_dont_shows), (eazel_install_parse_must_haves),
	(eazel_install_parse_depends), (eazel_installer_load_dependencies),
	(eazel_install_get_depends), (eazel_installer_initialize):
	* nautilus-installer/src/installer.h:
	* nautilus-installer/src/link.sh:
	* nautilus-installer/src/main.c: (nautilus_pixmap_file):
	* nautilus-installer/src/package-list-depends.xml:
	* nautilus-installer/src/prescript:
	Slam bam thank you mam. Now uses the nautilus-druid, and only grew
	by 100k... phew.
	Added some funky xml parsing so you can control category
	dependency via a xml file.
	
2000-08-31  J Shane Culpepper  <pepper@eazel.com>

	* components/services/summary/lib/eazel-summary-shared.c:
	(build_services_glist_from_xml), (build_eazel_news_glist_from_xml),
	(build_update_news_glist_from_xml), (parse_summary_xml_file):
	* components/services/summary/lib/eazel-summary-shared.h:

	Added the beginnings of the summary configuration xml parser.
	Nowhere close to working yet.

2000-08-31  Andy Hertzfeld  <andy@eazel.com>

	added a new about box that uses anti-aliased text.
	
	* icons/Makefile.am:
	* icons/about_background.png:
	added image for about background
	
	* src/Makefile.am:
	* src/nautilus-about.c,h: (nautilus_about_initialize_class),
	(nautilus_about_destroy), (nautilus_about_initialize),
	(nautilus_about_new), (draw_pixbuf), (nautilus_about_repaint),
	(draw_aa_string), (nautilus_about_draw_info):
	added a new class for our about box
	
	* src/nautilus-window-menus.c: (help_menu_about_nautilus_callback):
	invoked nautilus_about instead of gnome_about
	update the list of authors and other info
	
2000-08-31  Mathieu Lacage  <mathieu@eazel.com>

	* components/tree/nautilus-tree-view.c: fix bug 2468.
	maciej now owes me a restaurant. (zuni ?)
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_type_as_string): update to gnome-vfs API 
	changes.

2000-08-30  Ramiro Estrugo  <ramiro@eazel.com>

	* test/test-nautilus-label.c: (justification_changed_callback),
	(drop_shadow_offset_changed_callback),
	(create_justification_frame), (create_drop_shadow_offset_frame),
	(main):
	Add justification tests.  Add drop shadow tests.

2000-08-30  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-volume-monitor.c: (eject_cdrom):
	Fixed bug 2446, need to implement CDROM ejection.
	It's in there.  Let's see what breaks.
			
	* src/nautilus-window.c: (nautilus_window_initialize_class):	
	(realize):
	Added a new hint for sawfish and removed a focus flag at the
	reccomendation of John Harper.
	
2000-08-30  John Sullivan  <sullivan@eazel.com>

	Fixed bug 2393 (need cleaner way for directory view subclasses
	to insert menu items)

	I'm going to be futzing with directory view context menu items
	soon, so I started by cleaning up the architecture a little to
	make future futzing easier.

	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-directory-view.c: 
	(set_menu_item_path): New function, stores the menu's path 
	identifier in the GtkMenuItem (via set_data) so that it can
	be compared against later.
	(menu_item_matches_path): New function, checks whether a menu
	item's stored path matches a specified one.
	(fm_directory_view_add_context_menu_item): Renamed this function
	from fm_directory_view_add_menu_item for clarity, and gave it
	a path parameter so callers could specify the path by which the
	item can later be identified. Calls set_menu_item_path with
	path.
	(append_gtk_menu_item_with_view): call set_menu_item_path.
	(real_create_background_context_menu_zoom_items),
	(fm_directory_view_real_create_background_context_menu_items):
	Update for fm_directory_view_add_context_menu_item change.
	(add_open_with_gtk_menu_item): Add comment about lameness that I
	will fix soon.
	(fm_directory_view_get_context_menu_index): Reimplement using
	menu_item_matches_path instead of hardwiring indices that could
	easily get out of synch with actual menu-creation code (and were
	in fact out of synch). Added a GtkMenu parameter as part of this.

	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_create_background_context_menu_items):
	Update for fm_directory_view_add_context_menu_item change.
	* src/file-manager/fm-icon-view.c:
	(fm_icon_view_create_selection_context_menu_items),
	* src/file-manager/fm-search-list-view.c:
	(real_create_selection_context_menu_items): Update for
	fm_directory_view_get_context_menu_index change.

2000-08-30  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-throbber.c: (get_throbber_dimensions),
	(nautilus_throbber_initialize):
	made the throbber compute its size using all of its constituent
	images instead of just the rest image.  Plus some minor clean-ups.
	
2000-08-30  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory.c:
	(construct_private_metafile_uri), (nautilus_self_check_directory):
	* libnautilus-extensions/nautilus-icon-factory.c:
	(make_thumbnail_path):
	* libnautilus-extensions/nautilus-link.c: (make_local_path):
	Use escape function in gnome-vfs instead of one in Nautilus.
	
	* libnautilus-extensions/nautilus-string.h:
	* libnautilus-extensions/nautilus-string.c:
	(nautilus_str_strip_chr), (nautilus_str_double_underscores),
	(nautilus_str_middle_truncate): Use g_new instead of g_malloc.
	Helps get rid of silly "sizeof (char)" business.
	Remove nautilus_str_escape_slashes.

2000-08-30  J Shane Culpepper  <pepper@eazel.com>

	* components/services/summary/Makefile.am:
	* components/services/summary/lib/.cvsignore:
	* components/services/summary/lib/Makefile.am:
	* components/services/summary/lib/eazel-summary-shared.c:
	(http_fetch_remote_file):
	* components/services/summary/lib/eazel-summary-shared.h:
	* configure.in:

	Adding a portion of the shared download / parse framework
	for summary configuration.

2000-08-30  Rebecca Schulman  <rebecka@eazel.com>
	Most of the work on 2369, to add the emblems to the search
	criteria.  This work involved refactoring the code to generate
	property information for display.  This new code is used by the
	code to create the search criterion, and also by the emblem
	display code, which is in nautilus-property-browser.
	

	* libnautilus-extensions/Makefile.am:
	* libnautilus-extensions/nautilus-customization-data.c:
	* libnautilus-extensions/nautilus-customization-data.h:
	(nautilus_customization_data_new),
	(nautilus_customization_data_get_next_element_for_display),
	(nautilus_customization_data_private_data_was_displayed),
	(nautilus_customization_data_destroy),
	(get_global_customization_uri), (get_private_customization_uri),
	(get_file_path_for_mode),
	(nautilus_customization_make_background_chit),
	(format_name_for_display), (strip_extension):
	New file with extracted methods from nautilus-property browser.
	The new API initiates a new structure, and has an iterative call
	to "get the next element for display" which returns a correctly
	sized pixmap widget and a label widget containing the name appropriate
	for display.

	* libnautilus-extensions/nautilus-dateedit-extensions.c:
	(nautilus_gnome_date_edit_get_date_as_string):
	Removed extraneous debugging printf.
	
	* libnautilus-extensions/nautilus-search-bar-criterion.c:
	* libnautilus-extensions/nautilus-search-bar-criterion.h:
	(nautilus_search_bar_criterion_new_from_values),
	(nautilus_search_bar_criterion_next_new),
	(nautilus_search_bar_criterion_get_location),
	(get_emblem_location_for), (get_date_modified_location_for),
	(make_emblem_value_menu):
	Added code to generate the emblem menu, and to generate a 
	search criterion for the search uri from the menu's settings.
	
	* libnautilus-extensions/nautilus-search-uri.c:
	More language updated, and added text for emblems
	
	* src/nautilus-property-browser.c: (make_drag_image),
	(make_properties_from_directories), (make_category):
	Updated this code to deal with new refactoring.
	

2000-08-30  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-icon-view.c: (fm_icon_view_merge_menus):
	Moved the "Tighter Layout" and "Reversed Order" toggle items
	into the "Lay out items" submenu, after discussing with Andy
	(who had earlier discussed with Arlo).

2000-08-30  Robey Pointer  <robey@eazel.com>

	* src/nautilus-main.c: (main):
	* src/nautilus-shell.c: (corba_open_default_window),
	(save_window_states), (restore_window_states), (corba_restart):

	Make restart save window sizes, positions, and uri's in a gconf
	setting, so that the windows can be (mostly) restored.

2000-08-30  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-throbber.c: (nautilus_throbber_initialize),
	(nautilus_throbber_load_images),
	(nautilus_throbber_button_press_event):
	some samll clean-ups for the throbber, including removing some
	debug messages that were accidentally left in, which John called
	"throbber spam".
	
2000-08-30  Mike Fleming  <mfleming@eazel.com>

	eazel:summary view now calls ammonite to log in.
	Also added ammonite dependency to configure.in when 
	nautilus is compiled with --enable-eazel-services

	* components/services/summary/nautilus-view/Makefile.am:
	* components/services/summary/nautilus-view/nautilus-summary-view.c
	: (entry_changed_cb), (authn_cb_succeeded), (authn_cb_failed),
	(login_button_cb), (logout_button_cb),
	(nautilus_summary_view_initialize),
	(nautilus_summary_view_destroy):
	* configure.in:

2000-08-30  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-mime-actions.c:
	(nautilus_mime_get_default_component_for_uri_internal):
	Fixed bug 1158, GnomeVFSMimeHandlers code needs error handling.

	There was a lonely FIXME here.  A NULL is now returned instead of
	an assert. A NULL is handled properly by all callers of this function.

	* src/file-manager/fm-desktop-icon-view.c: (event_callback),
	(fm_desktop_icon_view_initialize):
	Work in progress trying to get keyboard events to the desktop.
	I am working with John Harper on this.

2000-08-30  Ali Abdin  <aliabdin@aucegypt.edu>

        New tags to fix the following bugs: #2383, #2384, #2386, #2387,
         #2382, #2523

        Also add in a first cut at Navigation Links (Bug #2201)

        * components/help/converters/gnome-db2html2/gdb3html.h:
        Add the following tags: superscript, systemitem, varname, option,
        quote, blockquote - Fixes bug #2383, #2384, #2386, #2387, #2382, #2523
        Add a sect1id_stack GList to the Context struct

        * components/help/converters/gnome-db2html2/sect-elements.[ch]:
        (sect_blockquote_start_element),
        (sect_blockquote_end_element),
        (sect_quote_start_element),
        (sect_quote_end_element),
        (sect_sup_start_element),
        (sect_sup_end_element): New functions to handle some of the new tags

        * components/help/converters/gnome-db2html2/gdb3html.c:
        (find_first_element): Remove inadvertant debug check-in
        (sect_footer),
        (print_footer): New functions to handle the output of a footer
        (sect1_start_element): New 'shared' function that builds a GList of
        sect1 id's
        (article_end_element): No longer print out </HTML> or </BODY> as that
        should be handled by the footer
        (parse_file): Modify to print out the footer

        * components/help/converters/gnome-db2html2/toc-elements.c:
        * components/help/converters/gnome-db2html2/sect-preparse.c:
        (sect_preparse_sect_start_element): Make a call to the
        sect1_start_element function when we encounter a sect1 tag
        (toc_sect_start_element): ditto

2000-08-30  Robin * Slomkowski  <rslomkow@eazel.com>

	README: added requirement of GCONF_0_8 tag

2000-08-30  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/rpmview/nautilus-rpm-view.c:
	(nautilus_rpm_view_update_from_uri):
	Changed the comments reg. bug 1657
	 
	components/services/install/command-line/eazel-alt-install-corba.c:
	(create_package), 
	Handles ~ in filenames now
	(main):
	Proper gtk_signal_func cast for the delete_files signal
	
	* components/services/install/command-line/eazel-gen-pre-xml.sh:
	Script to generate a colon-delimited file for eazel-gen-xml, by
	using rpm -qp on rpm files.
	
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_class_initialize), (eazel_install_initialize):
	-DEAZEL_INSTALL_SLIM no longer creates a userlocal rpmdb
	
	* components/services/install/lib/eazel-install-protocols.c:
	(gnome_vfs_xfer_callback), (free_string),
	(gnome_vfs_fetch_remote_file)
	(get_url_for_package):
	Added D: to debug output, nicefied the gnome-vfs stuff after shane
	laughed at me
	(eazel_install_fetch_package),
	Added the md5 stuff, it's commented out, as there is no md5 in the
	xml from the server, thus checking md5 would fail all packages.
	
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(eazel_install_download_packages), (download_all_packages),
	(eazel_install_pre_install_packages), (install_packages),
	(uninstall_packages), 
	(eazel_install_prepare_rpm_system), (eazel_install_add_to_rpm_set),
	(eazel_install_check_existing_packages),
	(eazel_install_fetch_rpm_dependencies):
	So much...
		- xml packagelist can now have soft_depends which 
		  the download and install now checks for
	        - removed some leaks
	        - check for reopening rpmdb which is bad
		- clarifying comments for div FIXME's
	(eazel_install_prune_packages),
	Fixed a vaarg usage
	
	* components/services/install/lib/eazel-install-types.h:
	Added md5 to the PackageData struct

	* components/services/install/lib/eazel-install-types.c:
	(categorydata_new), (categorydata_destroy_foreach),
	(packagedata_new), (packagedata_destroy_foreach),
	Added md5 to the PackageData struct
	Now has some debug stuff to check for deallocating structes.	
	(packagedata_remove_soft_dep), 
	added function to remove a package from another packages soft_deps
	(rpmfilename_from_packagedata):
	Fixed a wrong g_strconcat
	
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(generate_xml_package_list)
	Generates nicer category names...
	(parse_category), (parse_memory_transaction_file),
	Uses categorydata_new now
	(osd_parse_implementation),
	Added FIXME reg. md5 check
	(parse_osd_xml_from_memory):
	D: to debug output
	
	* components/services/install/lib/makefile.staticlib.in:
	No longer sets the defines, they are now set in the link.sh
	scrip in the nautilus-installer
	
	* nautilus-installer/src/Makefile:
	* nautilus-installer/src/Makefile.am:
	* nautilus-installer/src/callbacks.c: (druid_cancel),
	(begin_install), (druid_finish), (prep_install):
	* nautilus-installer/src/installer.c: (set_white_stuff),
	(create_what_to_do_page), (create_install_page),
	(create_finish_page), (create_window), (set_images),
	(eazel_install_progress), (eazel_download_progress),
	(install_failed_helper), (install_failed), (download_failed),
	(eazel_install_preflight), (eazel_install_dep_check),
	(eazel_install_delete_files), (eazel_installer_add_category),
	(check_system), (eazel_installer_do_install),
	(eazel_installer_finalize), (eazel_installer_unref),
	(eazel_installer_class_initialize), (eazel_installer_initialize),
	(eazel_installer_get_type), (eazel_installer_new):
	* nautilus-installer/src/installer.h:
	* nautilus-installer/src/interface.c:
	* nautilus-installer/src/link.sh:
	* nautilus-installer/src/main.c: (oaf_init), (bonobo_init):
	* nautilus-installer/src/support.c:
	* nautilus-installer/src/support.h:
	Created a gtkobject for the installer, revamped the choice stuff,
	so it now offers the categories, stabilization work etc.

2000-08-30  Andy Hertzfeld  <andy@eazel.com>

	added a Netscape-like throbber widget to the toolbar, to give busy feedback.  It uses
	uses a generic animation from Arlo, but it's themable.  It still needs some clean-up
	but it's mostly done.
	
	* configure.in:
	* icons/Makefile.am:
	* icons/throbber
	* icons/throbber/.cvsignore:
	* icons/throbber/Makefile.am:
	* icons/throbber/*.png:
	added a directory of frame images for the generic throbber.
	
	* src/Makefile.am:
	* src/nautilus-throbber.c,h: (nautilus_throbber_initialize_class),
	(nautilus_throbber_destroy), (get_throbber_dimensions),
	(nautilus_throbber_initialize), (nautilus_throbber_new),
	(nautilus_throbber_theme_changed), (draw_pixbuf),
	(select_throbber_image), (draw_throbber_image),
	(nautilus_throbber_draw), (nautilus_throbber_expose),
	(bump_throbber_frame), (nautilus_throbber_start),
	(nautilus_throbber_stop), (nautilus_throbber_unload_images),
	(load_themed_image), (make_throbber_frame_name),
	(nautilus_throbber_load_images),
	(nautilus_throbber_button_press_event),
	(nautilus_throbber_size_allocate):
	added a throbber widget that animates while pages are loaded.
	
	* src/nautilus-toolbar.h:
	made the nautilus toolbar know about the throbber
	* src/nautilus-toolbar.c,h: (nautilus_toolbar_set_throbber),
	(nautilus_toolbar_size_allocate):
	made the nautilus toolbar position the throbber on the far right
	
	* src/nautilus-window-toolbars.c: (allocate_throbber),
	(nautilus_window_initialize_toolbars):
	allocate the throbber when we make the toolbar
	
	* src/nautilus-window.c: (nautilus_window_allow_stop):
	tell the throbber to start and stop when page loading begins/ends.  We piggy-back
	off of the stop button.
	* src/nautilus-window.h:
	made the nautilus_window know about the throbber

2000-08-29  Mike Fleming  <mfleming@eazel.com>

	* src/nautilus-first-time-druid.c:
	(next_proxy_configuration_page_callback), (download_callback),
	(initiate_file_download), (set_http_proxy), (getline_dup),
	(load_nscp_proxy_settings), (attempt_http_proxy_autoconfigure):

	Bug #1812
	First-time druid now autoprobes for HTTP proxy settings and
	saves them to GConf.  Now gnome-vfs needs to be fixed to make use
	of this (ammonite already does).

Tue Aug 29 22:43:15 2000  George Lebl <jirka@5z.com>

	This should close bug #1361

	* configure.in, cut-n-paste-code/widgets/Makefile.am,
	  cut-n-paste-code/widgets/nautilus-druid/*,
	  po/POTFILES.in:
	  Remove the nautilus druid hack from here.  We can do all
	  that we need from libnautilus extensions without need of
	  cut and paste code.

	* libnautilus-extensions/nautilus-druid.[ch],
	  libnautilus-extensions/nautilus-druid-page-eazel.[ch],
	  po/POTFILES.in:
	  Make NautilusDruid be a derivation of GnomeDruid and
	  the NautilusDruidPageEazel of GnomeDruidPage.  Also make
	  use of more of the nautilus style of coding in both.  Federico
	  will kill me for using remove/add to move a file, but it's more
	  then just a move anyway.

	* src/nautilus-first-time-druid.c (set_up_proxy_config_page)
	  (next_update_page_callback) (next_update_feedback_page_callback)
	  (next_proxy_configuration_page_callback)
	  (finish_page_back_callback) (nautilus_first_time_druid_show)
	  (download_callback) (initiate_file_download):
	  Use the new nautilus druid and the new eazel druid page everywhere.
	  Also fix one case of double adding things to a GtkBox.

2000-08-29  Gene Z. Ragan  <gzr@eazel.com>

	
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_create_background_context_menu_items):
	Added an accelerator for the New Folder item.
	
	* src/file-manager/fm-directory-view.c: (select_all_callback),
	(fm_directory_view_add_menu_item),
	(fm_directory_view_real_create_background_context_menu_items):
	Added support for accelerators in popup menu items.  You 
	specify the accelerator key by placing an _ before the desired
	letter.
	
	* libnautilus-extensions/nautilus-drag.c:
	(nautilus_drag_can_accept_item):
	Fixed a bug dealing with dragging over trash.
	
2000-08-29  Andy Hertzfeld  <andy@eazel.com>

	* components/rpmview/nautilus-rpm-view.c:
	(nautilus_rpm_view_initialize),
	(nautilus_rpm_view_update_from_uri):
	used nautilus_label to provide anti-aliased text in the rpm-view,
	as well as some other clean-ups.  The labels aren't aligned properly,
	due to a bug in nautilus_label that Ramiro will be fixing soon.
	
	* src/nautilus-property-browser.c:
	(nautilus_property_browser_initialize), (make_category_link),
	(nautilus_property_browser_update_contents):
	changed command buttons at bottom back to using non-aa text at
	Arlo's request; also, put the labels inside the category buttons
	like Susan and Arlo both want, as well as other minor tweaks.
	
	* src/nautilus-sidebar-title.c: (update_font):
	changed a comment as part of resolving a FIXME.
	
2000-08-29  Arlo Rose  <arlo@eazel.com>

	Fixed all outstanding cHRM white point problems.

 	* data/emblems/OK.png
	* data/emblems/draft.png 
 	* data/emblems/erase.png
	* data/emblems/favorite.png 
 	* data/emblems/important.png
	* data/emblems/new.png 
 	* data/emblems/ohno.png
	* data/emblems/personal.png 
 	* data/emblems/urgent.png
	* icons/backgrounds.png 
	* icons/colors.png
 	* icons/emblems.png 
	* icons/knob.png 
	* icons/nautilus-logo.png 
 	* icons/search.png 
	* icons/eazel/i-directory-aa.png 
 	* icons/eazel/i-directory-accept-72.png 

2000-08-29  Robin * Slomkowski <rslomkow@eazel.com>

	* cut-n-paste-code/widgets/nautilus-druid/Makefile.am:
	added VFS_CFLAGS so it could find gnome vfs headers.

2000-08-29  Robey Pointer  <robey@eazel.com>

	* components/services/install/nautilus-view/nautilus-service-instal
	l-view.c: (current_progress_bar_complete),
	(nautilus_service_install_preflight_check),
	(show_dialog_and_run_away), (nautilus_service_install_done),
	(nautilus_service_install_failed):

	Restore code to jump to the summary widget after an install (for
	demo), and make a dialog popup before then.

2000-08-29  Michael Engber  <engber@eazel.com>

	Fixed warning caused by passing NULL for a directory - bug 2079.
	* src/file-manager/fm-icon-view.c: (layout_changed_callback):

2000-08-29  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c:
	(call_ready_callbacks), (start_or_stop_io),
	(nautilus_directory_async_state_changed):
	Fixed bug that showed up as warnings on exit and fails of "make
	check". The code needs to check for I/O that must be stopped after
	calling "call_when_ready" callbacks. I improved the structure here
	a bit too by making a new function.
	
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_self_check_directory): Fixed a mistake in the self-check
	that made it check the wrong thing.
	
	* libnautilus-extensions/nautilus-link-set.c: (link_set_path_name):
	Use nautilus_make_path instead of the hard-coded equivalent.
	
	* libnautilus-extensions/nautilus-gtk-extensions.h: Reformatted.
	* src/nautilus-property-browser.c: (remove_emblem): Formatting tweak.

2000-08-29  John Sullivan  <sullivan@eazel.com>

	Fixed bug 2223 (selecting separator of "View As" option
	menu causes problems).

	Surprise, surprise, surprise -- separator menu items are
	not treated as insensitive by default, so you can select
	them. This makes no difference in pull-down menus, but
	leads to trouble in option menus.

	* src/nautilus-window.c: 
	(new_gtk_separator): New convenience function, makes
	a separator item, sets it to be insensitive, and shows it.
	(replace_special_current_view_in_content_view_menu),
	(nautilus_window_load_content_view_menu): Deploy new_gtk_separator.

2000-08-29  Gene Z. Ragan  <gzr@eazel.com>
	
	Refactored function and fixed a bug.
	
	* libnautilus-extensions/nautilus-drag.c:
	(nautilus_drag_can_accept_item):
	
	Fixed bug 1950, Trash icon on desktop should have
	"Empty Trash" in its right click menu

	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize_class),
	(new_folder_menu_item_callback), (empty_trash_callback),
	(trash_link_is_selection),
	(fm_desktop_icon_view_create_selection_context_menu_items),
	(fm_desktop_icon_view_create_background_context_menu_items):

	* src/file-manager/fm-directory-view.c:
	(bonobo_menu_open_callback),
	(fm_directory_trash_link_in_selection),
	(real_create_background_context_menu_zoom_items),
	(fm_directory_view_real_create_background_context_menu_items),
	(fm_directory_view_real_create_selection_context_menu_items),
	(create_selection_context_menu):
	* src/file-manager/fm-directory-view.h:

2000-08-29  Mathieu Lacage  <mathieu@eazel.com>

	* libnautilus-extensions/nautilus-search-uri.c: (parse_uri),
	(nautilus_self_check_search_uri): fix a checks. fix a space 
	added in the generated sentences. 

2000-08-29  John Sullivan  <sullivan@eazel.com>

	Fixed bug 1884 (mistyped URL is changed back to previous)

	* src/nautilus-window-manage-views.c:
	(nautilus_window_end_location_change_callback): Replaced
	a nautilus_navigation_bar_set_location call with a comment
	explaining why not to call it there.

2000-08-29  John Sullivan  <sullivan@eazel.com>

	Fixed bug 2173 (We should allow clearing the History list)
	There's now a Forget History item in the Go menu which
	(after confirmation) forgets the history items in the Go
	menu and the back/forward chains of each Nautilus window.
	Afterwards, the Go menu's history list contains only locations
	currently being displayed.

	* src/nautilus-window.h: Changed back_list and forward_list
	from GSList * to GList * so I could use nautilus glist 
	convenience functions (there's no efficiency issue with these 
	small lists). Added prototypes for new functions
	nautilus_clear_back_list, nautilus_clear_forward_list, and
	nautilus_forget_history.
	
	* src/nautilus-window.c: 
	(nautilus_window_clear_forward_list),
	(nautilus_window_clear_back_list): New functions that free and
	set to NULL the back & forward lists.
	(nautilus_window_destroy): Use nautilus_window_clear_back_list
	and nautilus_window_clear_forward_list instead of replicating code.
	(nautilus_window_back_or_forward),
	(nautilus_window_get_base_page_index): Replace "slist" with "list"
	(free_history_list): Set history_list variable to NULL in addition
	to freeing its contents.
	(nautilus_forget_history): New function, walks through all windows
	clearing out their back/forward lists, and throws away all of the
	history list except currently-displayed locations.

	* src/nautilus-window-manage-views.c: (handle_go_back),
	(handle_go_forward), (handle_go_elsewhere): Changed "slist"
	to "list" in various places; called new nautilus_clear_forward_list
	instead of replicating code.
	
	* src/nautilus-window-menus.c: 
	(forget_history_if_confirmed): New function, calls nautilus_history_forget
	if user confirms via modeless dialog (because it would be a pain to
	accidentally choose this menu item and erase your history).
	(go_menu_forget_history_callback): New function used by new menu item,
	calls forget_history_if_confirmed.
	(nautilus_window_initialize_menus): Add "Forget History" item to Go menu.
	
	* src/nautilus-window-toolbars.c: (create_back_or_forward_menu):
	Replace "slist" with "list"

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_real_create_background_context_menu_items):
	Just clarified a comment.

2000-08-29  J Shane Culpepper  <pepper@eazel.com>

	* components/services/summary/nautilus-view/nautilus-summary-view.c
	: (generate_summary_form), (login_button_cb), (logout_button_cb):

	Adding the logout button so that Mike can hook up the callbacks.

2000-08-29  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-buffered-widget.c:
	* libnautilus-extensions/nautilus-label.h:
	* libnautilus-extensions/nautilus-scalable-font.h:
	Dumb documentation typos.
	
2000-08-29  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-string-map.c:
	Remove a FIXME (bug 2442) which i already fixed.
	
2000-08-29  John Sullivan  <sullivan@eazel.com>

	Fixed bug 2182 (right-clicking on zoom control changes zoom level)

	* src/nautilus-zoom-control.c:
	(nautilus_zoom_control_button_press_event): Made the zoom
	control use Ramiro's nifty nautilus_pop_up_context_menu code
	to offset the menu position slightly.

2000-08-29  John Sullivan  <sullivan@eazel.com>

	Redid changes that converted "Ascending/Descending" menu items
	into single "Reversed Order" menu item. Andy accidentally
	clobbered my entire set of changes with a more recent check-in.

	* src/file-manager/fm-icon-view.c: (tighter_layout_callback),
	(update_layout_menus), (sort_callback), (sort_direction_callback),
	(manual_layout_callback), (fm_icon_view_merge_menus),
	(fm_icon_view_initialize_class):

2000-08-29  John Sullivan  <sullivan@eazel.com>

	Added more bug numbers to FIXMEs. All Nautilus FIXMEs currently
	have bug numbers. Huzzah! (Too bad the same can't be said for
	gnome-vfs, oaf, medusa, ...)

	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_initialize):
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(eazel_install_check_existing_packages),
	(eazel_install_fetch_rpm_dependencies):
	* components/services/install/lib/eazel-install-types.c:
	* components/services/install/nautilus-view/nautilus-service-instal
	l-view.c: (current_progress_bar_complete),
	(nautilus_service_install_downloading):
	* components/services/time/nautilus-view/trilobite-eazel-time-view.
	c:
	* components/services/trilobite/libtrilobite/helixcode-utils.c:
	* components/services/trilobite/libtrilobite/trilobite-core-utils.c
	: (trilobite_pexec):
	* components/services/trilobite/libtrilobite/trilobite-root-client.
	c: (trilobite_root_client_initialize):
	* components/services/vault/command-line/main.c:
	* src/nautilus-view-frame-bonobo-control.c:
	(nautilus_view_frame_activate_uri):
	* src/nautilus-view-frame-bonobo-embeddable.c:
	(bonobo_subdoc_load_location):
	* src/nautilus-window-private.h:

2000-08-29  John Sullivan  <sullivan@eazel.com>

	Added more bug numbers to FIXMEs. 21 to go.	

	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-stand
	ard.c: (nautilus_druid_page_standard_init):
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid.c:
	(nautilus_druid_size_request), (nautilus_druid_next_callback):
	* libnautilus-extensions/nautilus-background-canvas-group.c:
	(nautilus_background_canvas_group_render):
	* libnautilus-extensions/nautilus-directory-background.c:
	(nautilus_connect_background_to_directory_metadata):
	* libnautilus-extensions/nautilus-file-operations-progress.c:
	(truncate_string_from_start):
	* libnautilus-extensions/nautilus-file-operations.c:
	(handle_xfer_duplicate):
	* libnautilus-extensions/nautilus-font-picker.c:
	(nautilus_font_picker_initialize):
	* libnautilus-extensions/nautilus-gdk-extensions.c:
	(nautilus_gdk_font_get_bold):
	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.c:
	(nautilus_gdk_pixbuf_draw_text):
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog):
	* libnautilus-extensions/nautilus-gtk-extensions.c:
	(nautilus_gtk_button_auto_click),
	(nautilus_popup_menu_position_func):
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_for_file),
	(cached_image_still_valid),
	(nautilus_icon_factory_make_thumbnails):
	* libnautilus-extensions/nautilus-icon-text-item.c:
	(iti_paint_text):
	* libnautilus-extensions/nautilus-list.c:
	(show_context_menu_callback), (nautilus_list_get_drop_action):

2000-08-29  John Sullivan  <sullivan@eazel.com>

	Added more bug numbers to FIXMEs. 49 to go.

	* components/services/install/lib/eazel-install-rpm-glue.c:
	(eazel_uninstall_downward_traverse):
	* libnautilus-extensions/nautilus-merged-directory.c:
	(nautilus_merged_directory_add_real_directory):
	* libnautilus-extensions/nautilus-mime-actions.c:
	(make_oaf_query_with_known_mime_type),
	(make_oaf_query_with_uri_scheme_only):
	* libnautilus-extensions/nautilus-preferences.c:
	(nautilus_preferences_set_string_list):
	* libnautilus-extensions/nautilus-program-chooser.c:
	(program_file_pair_compute_status), (get_supertype_from_file):
	* libnautilus-extensions/nautilus-scalable-font.c:
	(nautilus_scalable_font_measure_text):
	* libnautilus/nautilus-view.c: (view_frame_call_begin):
	* nautilus-installer/src/support.c: (create_pixmap),
	(create_image):
	* src/file-manager/fm-desktop-icon-view.c: (create_mount_link),
	(volume_unmounted_callback), (place_home_directory):
	* src/file-manager/fm-icon-view.c: (get_next_position),
	(play_file), (get_icon_text_callback):
	* src/file-manager/fm-list-view.c: (fm_list_view_initialize),
	(create_list), (fm_list_view_set_zoom_level),
	(fm_list_view_font_family_changed):
	* src/file-manager/nautilus-indexing-info.c:
	(nautilus_indexing_info_show_dialog):
	* src/nautilus-application.c: (nautilus_application_startup):
	* src/nautilus-first-time-druid.c:
	(next_proxy_configuration_page_callback), (initiate_file_download):
	* src/nautilus-property-browser.c: (add_background_to_browser):
	* src/nautilus-shell.c:

2000-08-29  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-first-time-druid.c: (proxy_selection_changed),
	(set_up_proxy_config_page), (next_update_feedback_page_callback),
	(next_proxy_configuration_page_callback),
	(finish_page_back_callback), (nautilus_first_time_druid_show),
	(download_callback), (initiate_file_download):
	made the first time druid handle proxy configuration, which is presented to
	the user if an error occurs during the initial http update process.  Plus some
	other cleanups.
	
	* src/nautilus-property-browser.c:
	tweaked the background color
	* src/nautilus-theme-selector.c:
	tweaked the background color

2000-08-28  Robey Pointer  <robey@eazel.com>

	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_install_packages):

	Fix small bug that made emit_done() always signal success.
	
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_packages), (eazel_install_start_transaction):
	* components/services/install/lib/eazel-install-rpm-signature.c:
	(trilobite_check_rpm_signature):

	Return failure if the transaction fails.  Only call root-helper
	once now (let root-helper handle the password retries).  Fix pexec
	calls to check for the new return value.
	
	* components/services/install/nautilus-view/nautilus-service-instal
	l-view.c: (nautilus_service_try_again), (set_root_client):

	Set up try_again callback to allow 3 attempts at entering the root
	password.
	
	* components/services/trilobite/idl/trilobite-service.idl:
	* components/services/trilobite/libtrilobite/trilobite-root-client.
	c: (impl_Trilobite_PasswordQueryClient_try_again),
	(trilobite_root_client_get_epv),
	(trilobite_root_client_class_initialize):
	* components/services/trilobite/libtrilobite/trilobite-root-helper.
	c: (trilobite_root_helper_destroy),
	(trilobite_root_helper_class_initialize), (eazel_helper_start),
	(eazel_helper_password), (trilobite_root_helper_start):
	* components/services/trilobite/libtrilobite/trilobite-root-helper.
	h:
	* components/services/trilobite/libtrilobite/trilobite-service-pass
	wordquery.c: (trilobite_passwordquery_initialize),
	(trilobite_passwordquery_get_password),
	(trilobite_passwordquery_try_again):

	Add try_again signal to the root-client, root-helper, and
	PasswordQueryClient APIs.
	
	* components/services/trilobite/libtrilobite/trilobite-core-utils.c
	: (trilobite_pexec), (trilobite_init):

	pexec now returns the child pid.

2000-08-29  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_fetch_remote_package_list):
	Smarter package-list url generation.
	
	* components/services/install/lib/eazel-install-public.h:
	Expose fetch_remote_package_list call, used for the installer.
	
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(eazel_uninstall_downward_traverse):
	Removed FIXME that was in error.
	
	* nautilus-installer/src/callbacks.c: (druid_cancel),
	(begin_install), (druid_finish), (prep_install):
	* nautilus-installer/src/callbacks.h:
	* nautilus-installer/src/installer.c: (check_system),
	(eazel_installer_do_install):
	* nautilus-installer/src/installer.h:
	* nautilus-installer/src/interface.c: (set_white_stuff),
	(create_what_to_do_page), (create_window), (set_images),
	(eazel_install_progress), (eazel_download_progress),
	(install_failed_helper), (install_failed), (download_failed),
	(eazel_install_preflight), (eazel_install_dep_check),
	(eazel_install_delete_files), (eazel_installer_add_category),
	(eazel_installer_finalize), (eazel_installer_unref),
	(eazel_installer_class_initialize), (eazel_installer_initialize),
	(eazel_installer_get_type), (eazel_installer_new):
	* nautilus-installer/src/interface.h:
	* nautilus-installer/src/main.c: (main):
	Slaughtering and revamping the installer. It now loads the
	packagelist as one of the first things (needs changing to support
	proxies), then inserts a radiobutton pr. category (needs to be
	togglebuttons instead). 
	
2000-08-28  Mathieu Lacage  <mathieu@eazel.com>

	* NEWS: add news from latest PR1 release.
	* components/tree/nautilus-tree-view.c: make dnd do real file operations
	from tree view to other views. Dnd to tree view depends on the views code 
	which needs to be fixed (related to bug 2353).
	* libnautilus-extensions/Makefile.am: add nautilus-fils-operations.
	* libnautilus-extensions/nautilus-file-operations-progress.c:
	(nautilus_file_operations_progress_update),
	(nautilus_file_operations_progress_close),
	(nautilus_file_operations_progress_destroy),
	(nautilus_file_operations_progress_initialize),
	(nautilus_file_operations_progress_initialize_class),
	(nautilus_file_operations_progress_new),
	(nautilus_file_operations_progress_set_total),
	(nautilus_file_operations_progress_set_operation_string),
	(nautilus_file_operations_progress_new_file),
	(nautilus_file_operations_progress_clear),
	(nautilus_file_operations_progress_update_sizes),
	(nautilus_file_operations_progress_freeze),
	(nautilus_file_operations_progress_thaw): modify API name.
	* libnautilus-extensions/nautilus-file-operations-progress.h: idem
	* libnautilus-extensions/nautilus-file-operations.c: idem
	(xfer_dialog_clicked_callback), (create_xfer_dialog),
	(progress_dialog_set_files_remaining_text),
	(progress_dialog_set_to_from_item_text), (handle_xfer_ok),
	(handle_xfer_vfs_error), (nautilus_file_operations_copy_move),
	(nautilus_file_operations_new_folder),
	(nautilus_file_operations_move_to_trash),
	(nautilus_file_operations_delete),
	(nautilus_file_operations_empty_trash):
	* libnautilus-extensions/nautilus-file-operations.h: idem.
	* src/file-manager/Makefile.am: remove dfos* from compilation.
	* src/file-manager/fm-directory-view.c: 
	(bonobo_menu_empty_trash_callback),
	(fm_directory_view_create_links_for_files),
	(fm_directory_view_duplicate_selection),
	(fm_directory_view_trash_or_delete_selection),
	(fm_directory_view_new_folder),
	(fm_directory_view_move_copy_items): make it call nautilus-file-operations 
	functions.

2000-08-28  Robey Pointer  <robey@eazel.com>

	* components/services/install/nautilus-view/nautilus-service-instal
	l-view.c: (nautilus_install_parse_uri), (make_new_status),
	(turn_cylon_off), (current_progress_bar_complete),
	(nautilus_service_install_preflight_check),
	(nautilus_service_install_download_failed),
	(nautilus_service_install_done), (nautilus_service_install_failed):
	* components/services/install/nautilus-view/nautilus-service-instal
	l-view.h:

	Add "?version=" checking into the install view url, for
	bootstrapping the installer.
	
	* components/services/nautilus-dependent-shared/shared-service-widg
	ets.c: (create_label_widget), (create_services_title_widget),
	(create_services_header_widget):

	Change titlebar font sizes to fit Arlo specifications.

2000-08-28  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-buffered-widget.c:
	(nautilus_buffered_widget_initialize),
	(nautilus_buffered_widget_destroy),
	(buffered_widget_update_pixbuf),
	(create_background_pixbuf_from_none),
	(create_background_pixbuf_from_solid),
	(create_background_pixbuf_from_ancestor),
	(create_background_pixbuf),
	(nautilus_buffered_widget_get_vertical_offset),
	(nautilus_buffered_widget_set_background_type),
	(nautilus_buffered_widget_get_background_type),
	(nautilus_buffered_widget_set_background_color),
	(nautilus_buffered_widget_get_background_color):
	* libnautilus-extensions/nautilus-buffered-widget.h:

	* libnautilus-extensions/nautilus-gdk-extensions.c:
	(nautilus_gdk_gc_ref_if_not_null),
	(nautilus_gdk_gc_unref_if_not_null):
	* libnautilus-extensions/nautilus-gdk-extensions.h:
	Add unref/ref functions for gcs that take NULL.

	* libnautilus-extensions/nautilus-label.c: (nautilus_label_new):
	* libnautilus-extensions/nautilus-label.h:
	Make the constructor work just like GtkLabel by accepting a string.
	
	* components/music/nautilus-music-view.c:
	(nautilus_music_view_initialize), (add_play_controls):
	Use the new NautilusLabel constructor.

	* components/services/nautilus-dependent-shared/shared-service-widg
	ets.c: (create_label_widget):
	Use the new NautilusLabel constructor.

	* src/nautilus-first-time-druid.c: (make_anti_aliased_label),
	(set_up_update_feedback_page):
	Use the new NautilusLabel constructor.

	* src/nautilus-property-browser.c:
	(nautilus_property_browser_initialize),
	(make_properties_from_directory_path),
	(make_properties_from_xml_node), (make_category_link):
	Use the new NautilusLabel constructor.
	Fix the tile names to be antialises by using the new buffered
	widget SOLID background mode.
	
	* src/nautilus-sidebar-title.c:
	(sidebar_create_smooth_components_if_needed):
	Use the new NautilusLabel constructor.

	* src/nautilus-theme-selector.c:
	(nautilus_theme_selector_initialize):
	Use the new NautilusLabel constructor.

	* test/test-nautilus-image.c: (main):
	* test/test-nautilus-label.c: (main):
	Use the new NautilusLabel constructor.
	
2000-08-28  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-window-menus.c: (get_static_bookmarks_file_path):
	use the static bookmarks that were downloaded from the service
	if they are present; otherwise fall back to the built-in ones.
	
2000-08-28  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar-title.c:
	(nautilus_sidebar_title_select_text_color),
	(nautilus_sidebar_title_theme_changed),
	(sidebar_create_smooth_components_if_needed):
	added a drop shadow to the sidebar labels, controllable by the
	current theme
	* icons/arlo/arlo.xml:
	added a drop shadow offset to the arlo theme
	* libnautilus-extensions/nautilus-label.h:
	fixed a cut-n-paste error in the set_drop_shadow_offset call, by
	changing the parameter from "alpha" to "offset"
	
2000-08-28  Darin Adler  <darin@eazel.com>

	* src/file-manager/fm-directory-view.c: (display_pending_files):
	Lets try that again, this time with feeling.

2000-08-28  Darin Adler  <darin@eazel.com>

	* src/file-manager/fm-directory-view.c: (display_pending_files):
	Fixed a FIXME.

2000-08-28  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/command-line/Makefile.am:
	Readded eazel-gen-xml
	 
	* components/services/install/command-line/eazel-alt-install-corba.c:
	(done), 
	Check the result flag
	(main):
	Added revert to the commandline options.
	
	* components/services/install/idl/trilobite-eazel-install.idl:
	Added a boolean flag to the done signal
	
	* components/services/install/lib/eazel-install-corba-callback.c:	
	(impl_done), (eazel_install_callback_class_initialize),
	Added a boolean flag to the done signal
	(eazel_install_callback_simple_query):
	Removed a blank line!
	
	* components/services/install/lib/eazel-install-corba-callback.h:
	Added a boolean flag to the done signal

	* components/services/install/lib/eazel-install-corba.c:
	(impl_Eazel_Install_simple_query):
	Corrected the parse of the root argument
	
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_class_initialize), (eazel_install_install_packages),
	(eazel_install_uninstall_packages),
	(eazel_install_revert_transaction_from_xmlstring),
	(eazel_install_query_package_system), 
	Uses the enum return status from eazel-install-rpm-glue.c. The
	delete_files signal now depend on this enum.
	(eazel_install_emit_done), (eazel_install_emit_done_default):
	Added a boolean flag to the done signal

	* components/services/install/lib/eazel-install-public.h:
	Added a boolean flag to the done signal

	* components/services/install/lib/eazel-install-query.c:
	(eazel_install_simple_rpm_query):
	Added the root field to the packagedata
	
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_new_packages), (download_all_packages),
	(install_packages), (uninstall_all_packages), (uninstall_packages),
	(hest), (revert_transaction),
	(eazel_install_start_transaction_make_rpm_argument_list),
	(eazel_install_do_transaction_save_report),
	(eazel_install_monitor_rpm_propcess_pipe),
	(eazel_install_monitor_subcommand_pipe),
	(eazel_install_start_transaction),
	(eazel_install_free_rpm_system_close_db_foreach),
	(eazel_install_prepare_rpm_system),
	(eazel_install_prepare_package_system),
	(eazel_install_check_existing_packages), (print_package_list),
	(eazel_uninstall_upward_traverse),
	(eazel_uninstall_downward_traverse),
	(eazel_uninstall_check_for_install), (eazel_uninstall_globber):
	Uses the enum return status from eazel-install-rpm-glue.c. Also
	added "D: " to all the debug output, so I can easily remove them
	in the future.
	
	* components/services/install/lib/eazel-install-rpm-glue.h:
	Redefined the functions to return an enum status instead of bool.
	
	* components/services/install/lib/eazel-install-types.h:
	* components/services/install/lib/eazel-install-types.c:
	(packagedata_new), (packagedata_destroy_foreach):
	Added the root field to the packagedage (bug 2345)
	
	* components/services/time/service/main.c:
	(trilobite_service_factory_destroy):
	Fixed the destruction of the factory object
	 
	* components/services/time/service/trilobite-eazel-time-service-publi
	c.h:
	* components/services/time/service/trilobite-eazel-time-service.c:
	(impl_Trilobite_Eazel_Time_Service_check_time),
	(trilobite_eazel_time_service_finalize),
	(trilobite_eazel_time_service_unref),
	(trilobite_eazel_time_service_class_initialize),
	(trilobite_eazel_time_service_initialize_load_config),
	(trilobite_eazel_time_service_initialize),
	(trilobite_eazel_time_service_do_http_request):
	Added "D: " to debug output. The service now reads config from a
	xml config file (bug 945). Removed the _destroy call and added a
	unref and finallize instead.
	
	* components/services/trilobite/libtrilobite/helixcode-utils.h:
	* components/services/trilobite/libtrilobite/helixcode-utils.c:
	(xml_get_value):
	Returns the string as a g_strdup'ed value instead. Added a bug
	(2448) reg. making it return const char * instead.
	 
	* components/services/trilobite/libtrilobite/trilobite-core-utils.h:
	*components/services/trilobite/libtrilobite/trilobite-core-utils.c:
	(trilobite_get_config_dir_string):
	Added this call, which returns the top dir for	
	 
	* nautilus-installer/src/Makefile:
	* nautilus-installer/src/callbacks.c:
	* nautilus-installer/src/callbacks.h:
	* nautilus-installer/src/installer.c: (installer):
	* nautilus-installer/src/interface.c: (create_window):
	* nautilus-installer/src/main.c:
	Begun work on using the categories.

2000-08-28  Robey Pointer  <robey@eazel.com>

	* components/services/install/lib/Makefile.am:
	* components/services/install/lib/eazel-install-md5.c:
	(_byte_reverse), (md5_init), (md5_update), (md5_final),
	(md5_transform), (md5_get_digest), (md5_get_digest_from_file),
	(main):
	* components/services/install/lib/eazel-install-md5.h:

	Add MD5 code (stolen from evolution).

2000-08-28  John Sullivan  <sullivan@eazel.com>

	Added more bug numbers to FIXMEs. 77 to go. I am exhausted
	from creating bug reports, so the remaining ones will have
	to wait until at least tomorrow.

	* src/nautilus-complex-search-bar.c:
	(nautilus_complex_search_bar_set_location),
	(fewer_options_callback), (update_options_buttons_state):
	* src/nautilus-search-bar.c:
	* src/nautilus-sidebar-tabs.c: (draw_one_tab_themed),
	(get_tab_width):
	* src/nautilus-sidebar.c: (receive_dropped_uri_list),
	(receive_dropped_keyword), (add_command_buttons):
	* src/nautilus-simple-search-bar.c:
	(nautilus_search_uri_to_simple_search_criteria),
	(nautilus_simple_search_criteria_to_search_uri):
	* src/nautilus-switchable-search-bar.c:
	(search_bar_preference_changed_callback),
	(nautilus_switchable_search_bar_set_location),
	(nautilus_search_uri_is_displayable_by_mode):

2000-08-28  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-property-browser.c: (make_anti_aliased_label),
	(nautilus_property_browser_initialize),
	(make_properties_from_directory_path),
	(make_properties_from_xml_node), (make_category),
	(make_category_link), (nautilus_property_browser_update_contents):
	used anti-aliased text via nautilus_label where appropriate
	* src/nautilus-theme-selector.c: (make_anti_aliased_label),
	(nautilus_theme_selector_initialize):
	used anti-aliased text via nautilus_label where appropriate

2000-08-28  J Shane Culpepper  <pepper@eazel.com>

	* components/services/install/lib/eazel-install-types.h:
	Removing old FIXME comments.

2000-08-28  Ali Abdin  <aliabdin@aucegypt.edu>

        * components/help/converters/gnome-db2html2/TODO:
        Updated.

        * components/help/converters/gnome-db2html2/AUTHORS:
        New file (to give credit where its due and to show who to contact
        for maintainership purposes)

        * components/help/converters/gnome-db2html2/sect-elements.c
        (sect_table_with_border_start_element) Its a good idea to actually

2000-08-28  John Sullivan  <sullivan@eazel.com>

	Added more bug numbers to FIXMEs. 94 to go.

	* libnautilus-extensions/nautilus-icon-canvas-item.c: (map_pixbuf),
	(draw_label_text_aa), (nautilus_icon_canvas_item_event):
	* libnautilus-extensions/nautilus-icon-container.c: (icon_free),
	(get_all_icon_bounds), (lay_down_icons_tblr), (lay_down_icons),
	(nautilus_icon_container_move_icon), (stop_rubberbanding),
	(destroy), (hide_rename_widget):
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(nautilus_icon_container_dropped_icon_feedback),
	(receive_dropped_keyword), (auto_scroll_timeout_callback),
	(nautilus_icon_container_find_drop_target),
	(nautilus_icon_dnd_update_drop_target), (nautilus_icon_dnd_fini):
	* libnautilus-extensions/nautilus-link-set.c: (link_set_path_name),
	(expand_uri):
	* libnautilus-extensions/nautilus-link.c:
	(nautilus_link_get_root_property),
	(nautilus_link_get_additional_text), (make_local_path),
	(nautilus_link_get_image_uri), (nautilus_link_get_link_uri),
	(nautilus_link_get_link_type):
	* src/nautilus-sidebar-title.c:
	(nautilus_sidebar_title_select_text_color), (update_font),
	(update_title), (update_more_info), (update_emblems),
	(update_notes):

2000-08-28  Michael Engber  <engber@eazel.com>
	
	The three zooming related items no longer appear in
	the desktop's right click menu (bug 1737)

	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize_class),
	(change_desktop_background_menu_item_callback),
	(fm_desktop_icon_view_create_background_context_menu_zoom_items):
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize_class),
	(real_create_background_context_menu_zoom_items),
	(create_background_context_menu_zoom_items),
	(fm_directory_view_real_create_background_context_menu_items):
	* src/file-manager/fm-directory-view.h:

2000-08-28  John Sullivan  <sullivan@eazel.com>

	Added more bug numbers to FIXMEs. 142 to go.

	* src/nautilus-view-frame-nautilus-view.c: (load_location),
	(stop_loading), (selection_changed), (title_changed):
	* src/nautilus-view-frame.c:
	(nautilus_view_frame_handle_client_destroy),
	(nautilus_view_frame_set_active_errors):
	* src/nautilus-window-manage-views.c:
	(nautilus_window_report_load_underway),
	(nautilus_window_report_load_complete),
	(nautilus_window_report_load_failed),
	(nautilus_window_update_view),
	(nautilus_window_load_sidebar_panel), (open_location),
	(nautilus_window_update_state),
	(nautilus_window_end_location_change_callback):
	* src/nautilus-window-menus.c: (get_static_bookmarks_file_path):
	* src/nautilus-window.c: (nautilus_window_load_content_view_menu):
	* tools/leak-checker/nautilus-leak-checker.c: (detect_reentry):
	* tools/leak-checker/nautilus-leak-hash-table.c:
	(nautilus_leak_hash_element_vector_add),
	(nautilus_leak_hash_table_remove):

2000-08-28  Robey Pointer  <robey@eazel.com>

	components/services/install/nautilus-view/nautilus-service-install-
	view.c: (generate_install_form), (create_package),
	(nautilus_install_parse_uri), (make_new_status),
	(current_progress_bar_complete),
	(nautilus_service_install_downloading),
	(nautilus_service_install_dependency_check),
	(nautilus_service_install_preflight_check),
	(nautilus_service_install_download_failed),
	(nautilus_service_install_installing),
	(nautilus_service_install_done), (nautilus_service_install_failed),
	(nautilus_service_need_password),
	(nautilus_service_install_view_update_from_uri),
	(service_install_load_location_callback):
	components/services/install/nautilus-view/nautilus-service-install-
	view.h:

	support local file RPMs and using a specific server (mostly for
	demo purposes); make sure "test mode" is off; some i18n cleanup
	 
2000-08-28  John Sullivan  <sullivan@eazel.com>

	Added more bug numbers to FIXMEs. 166 to go.

	* libnautilus-extensions/nautilus-search-bar-criterion.c:
	(nautilus_search_bar_criterion_destroy), (get_size_location_for),
	(get_emblem_location_for):
	* libnautilus-extensions/nautilus-search-uri.c:
	* libnautilus-extensions/nautilus-stock-dialogs.c:
	(timed_wait_callback):
	* libnautilus-extensions/nautilus-string-map.c:
	* libnautilus-extensions/nautilus-trash-directory.c:
	(get_volume_vfs_uri_if_writable):
	* libnautilus-extensions/nautilus-volume-monitor.c:
	(mount_volume_mount), (eject_cdrom), (mount_volume_floppy_add),
	(mount_volume_add_aliases), (mntent_is_removable_fs),
	(find_volumes), (nautilus_volume_monitor_mount_unmount_removable):

2000-08-28  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_is_in_trash):
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_can_move_file_to_trash):
	Fix FIXME 2428 and 2389.
	Made it so that the respective gnome_vfs_find_directory calls
	won't do any I/O.

2000-08-28  John Sullivan  <sullivan@eazel.com>

	Added more bug numbers to FIXMEs. 187 to go. This time I
	didn't check in until I was sure I hadn't broken the build.

	* libnautilus-extensions/nautilus-directory-async.c:
	(allow_metafile), (set_up_request_by_file_attributes),
	(activation_uri_nautilus_link_read_callback),
	(activation_uri_gmc_link_read_callback):
	* libnautilus-extensions/nautilus-file-utilities.c:
	* libnautilus-extensions/nautilus-file-utilities.h:
	* libnautilus-extensions/nautilus-file.c: (nautilus_file_rename),
	(nautilus_file_compare_for_sort), (nautilus_file_can_get_owner),
	(nautilus_file_set_owner), (nautilus_file_can_get_group),
	(nautilus_file_get_group_name), (nautilus_file_set_group),
	(nautilus_file_get_owner_as_string), (nautilus_file_is_in_trash),
	(nautilus_file_mark_gone), (nautilus_file_dump):

2000-08-28  Andy Hertzfeld  <andy@eazel.com>

	* src/file-manager/fm-properties-window.c: (attach_owner_menu):
	fixed problem with extra slash in comment breaking the build
	
2000-08-28  John Sullivan  <sullivan@eazel.com>

	Added more bug numbers to FIXMEs. 207 to go.

	* components/tree/nautilus-tree-model.c:
	(nautilus_tree_model_destroy),
	(nautilus_tree_model_monitor_remove), (report_node_added),
	(report_node_changed), (nautilus_tree_stop_monitoring_internal):
	* components/tree/nautilus-tree-view.c:
	(nautilus_tree_view_should_skip_file): Added bug numbers to FIXMEs.
	
	* src/file-manager/fm-directory-view.c: Doh! Added a forward
	declaration for a function that I changed from public to private
	earlier and checked in without building accidentally.

2000-08-28  John Sullivan  <sullivan@eazel.com>

	Wrote new bug reports for FIXMEs, and added bug numbers.
	Now there are 219 Nautilus FIXMEs without bug numbers.

	* components/hardware/nautilus-hardware-view.c:
	(get_RAM_description):
	* components/help/converters/gnome-db2html2/gdb3html.c:
	(parse_file):
	* components/help/help-method.c: (escape_for_shell),
	(help_uri_to_string), (convert_file_to_uri), (find_help_file):
	* components/music/nautilus-music-view.c: (play_status_display),
	(slider_moved_callback), (slider_release_callback),
	(nautilus_music_view_drag_data_received):
	* components/rpmview/nautilus-rpm-view.c:
	(nautilus_rpm_view_update_from_uri):
	* components/sample/nautilus-sample-content-view.c:

2000-08-28  Gene Z. Ragan  <gzr@eazel.com>

	Fixed bug #1942, Trash icon on desktop has "Move to Trash" in
	right-click menu.
	
	* libnautilus-extensions/nautilus-link.c:
	(nautilus_link_is_home_link), (nautilus_link_is_trash_link),
	(nautilus_link_can_accept_drag):
	Rename path argument to uri.  The funciton can accrept
	a URI.
	
	* libnautilus-extensions/nautilus-link.h:
	* src/file-manager/fm-directory-view.c: (trash_link_is_in_files),
	(fm_directory_trash_link_in_selection),
	(fm_directory_view_real_create_selection_context_menu_items):
	New functions to identify if a Trash link is in the selection.

2000-08-28  Pavel Cisler  <pavel@eazel.com>

	* README:
	Added libunicode to the list of dependencies because new
	gtkhtlm depends on it now.

2000-08-28  John Sullivan  <sullivan@eazel.com>

	Some FIXME work. Removed some obsolete FIXMEs, and added
	bug numbers to others (some existing bug reports, some new
	bug reports). 236 FIXMES without bug numbers remain.

	* src/file-manager/fm-directory-view.c:
	(zoomable_zoom_to_fit_callback),
	(fm_directory_view_can_move_file_to_trash),
	(fm_directory_view_trash_or_delete_selection), (activate_callback),
	(fm_directory_view_activate_file),
	(fm_directory_view_get_context_menu_index):
	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-error-reporting.c: (fm_rename_file):
	* src/file-manager/fm-error-reporting.h:
	* src/file-manager/fm-properties-window.c:
	(activate_group_callback), (attach_group_menu),
	(activate_owner_callback), (attach_owner_menu),
	(create_basic_page), (create_permissions_page):
	* src/file-manager/fm-search-list-view.c: (real_merge_menus):
	* src/nautilus-sidebar.c: (receive_dropped_uri_list):

2000-08-28  Rebecca Schulman  <rebecka@eazel.com>

	Work on task 1969, allow content searches to
	be done by looking for "All of the words" or
	"any of the words"
	The work to correct the Search results titles
	still needs to be done.

	* libnautilus-extensions/nautilus-search-bar-criterion.c:
	(nautilus_search_bar_criterion_new_from_values),
	(nautilus_search_bar_criterion_next_new),
	(get_next_default_search_criterion_type),
	(get_content_location_for):
	Change content information.  Also removed location criterion
	because we are not shipping vault searching for 1.0, so the
	location is always "my computer"
	* libnautilus-extensions/nautilus-search-bar-criterion.h:
	* src/nautilus-complex-search-bar.c:
	(unattach_criterion_from_search_bar):
	Fixed bug that would not detach date criteria correctly

2000-08-28  Ramiro Estrugo  <ramiro@eazel.com>

	Complete task 1511.  Icons not AA in properties dialog.
	
	* src/file-manager/fm-properties-window.c:
	(get_pixbuf_for_properties_window),
	(update_properties_window_icon), (create_image_widget_for_file),
	(create_basic_page):
	Use NautilusImage instead of GtkPixmap so that if the
	SMOOTH_GRAPHICS preference is true, the icon will display using
	alpha compositing.
	
2000-08-28  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-buffered-widget.c:
	(nautilus_buffered_widget_initialize),
	(nautilus_buffered_widget_realize),
	(nautilus_buffered_widget_draw),
	(background_appearance_changed_callback),
	(connect_to_background_if_needed):
	Delay the connection to the NautilusBackground until its time to
	redraw the widget.  Only make this connection if an ancestor
	widget with an attatched NautilusBackground exists.

	This allows subclasses to be used on both widgets with and without
	NautilusBackgrounds attatched.
	
2000-08-28  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-label.c:
	(nautilus_label_set_font_from_components):
	* libnautilus-extensions/nautilus-label.h:
	New convenient function to set the font from components.  
	
	* components/music/nautilus-music-view.c:
	(nautilus_music_view_initialize), (add_play_controls):
	Use new nautilus_label_set_font_from_components to avoid font
	object leaks.
	 
	components/services/nautilus-dependent-shared/shared-service-widgets.c:
	(create_label_widget), (create_services_title_widget):
	Use new nautilus_label_set_font_from_components.
	 
	* src/nautilus-first-time-druid.c: (make_anti_aliased_label),
	(make_hbox_user_level_radio_button), (set_up_update_feedback_page):
	Use new nautilus_label_set_font_from_components to avoid font
	object leaks.

2000-08-28  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-first-time-druid.c: (make_anti_aliased_label),
	(make_hbox_user_level_radio_button), (set_up_user_level_page),
	(set_up_service_signup_page), (set_up_update_page),
	(set_up_update_feedback_page), (nautilus_first_time_druid_show),
	(download_callback), (initiate_file_download):

	used anti-aliased text, via nautilus_label, throughout the first time druid
	
	* components/music/nautilus-music-view.c:
	(nautilus_music_view_initialize),
	(music_view_set_selected_song_title), (add_play_controls),
	(nautilus_music_view_update_from_uri):

	used anti-aliased text via nautilus_label, for title and other labels
	
2000-08-27  J Shane Culpepper  <pepper@eazel.com>

	components/services/summary/nautilus-view/nautilus-summary-view.c:
	(generate_summary_form), (maintenance_button_cb), (goto_vault_cb),
	(update_netscape_cb):

	Another summary snapshot.  Still needs alot of ui work as well as
	hooking up the xml parsing.

2000-08-27  Ali Abdin  <aliabdin@aucegypt.edu>

        Entity support done in the bad evil way! (fixes bug #2200)
        (we should re-write gnome-db2html2 to use the DOM parser - but this
        should be filed as another bug - and this code is here until
        gnome-db2html2 IS written to use the DOM parser)

        * components/help/converters/gnome-db2html2/toc-elements.c:
        Extend the ElementInfo toc_elements[] table down to the 'TABLE' tag
        Fixes bug #2361 - It took me an INSANE amount of time for such a
        simple little FIX. The shitty thing is, I knew the problem when I
        started but then I decided to 'explore'

        * components/help/converters/gnome-db2html2/gdb3html.[ch]:
        Include libxml header's (for entity support). Include an
        xmlParserCtxtPtr in the Context struct
        (gdb3html_comment), (gdb3html_warning), (gdb3html_error),
        (gdb3html_characters): Renamed into its own namespace (to avoid clash
        with libxml header)

        (gdb3html_internalSubset), (gdb3html_isStandalone),
        (gdb3html_hasInternalSubset), (gdb3html_hasExternalSubset),
        (gdb3html_resolveEntity), (gdb3html_entityDecl),
        (gdb3html_notationDecl), (gdb3html_attributeDecl),
        (gdb3html_elementDecl), (gdb3html_unparsedEntityDecl),
        (gdb3html_reference), (gdb3html_processingInstruction),
        (gdb3html_getParameterEntity): New functions (that handle DOM parsing
        using SAX)

        (cdata_block), (gdb3html_characters), (end_element),
        (start_element), (start_document), (end_document),
        (get_entity): Include calls to the DOM SAX handler

        (xml_parse_document): New function to get the xmlDocPtr without
        spewing warning/error messages all over the place.
        (parse_file): Initialize the ParserCtxt and substitute entities by
        default

2000-08-26  Andy Hertzfeld  <andy@eazel.com>
 
	cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-eazel.c
	: (nautilus_druid_page_eazel_prepare):
	fixed bug in the new eazel druid where the next and back buttons weren't
	being enabled and disabled properly for standard pages
	
2000-08-26  Andy Hertzfeld  <andy@eazel.com>

	* src/file-manager/fm-directory-view.c: (compute_menu_item_info),
	(fm_directory_view_real_create_selection_context_menu_items):
	cleaned up the context menu a little bit by adding a separator after
	the 3 open commands and adding an ellipsis to "Show Properties".
	
2000-08-26  Andy Hertzfeld  <andy@eazel.com>

	At Bud's request, added a "use tighter layout" option in the view menu, which causes
	the icon view to use a tighter layout algorithm. It defaults to off.
	
	* libnautilus-extensions/nautilus-icon-container.c:
	* libnautilus-extensions/nautilus-icon-container.h:
	* libnautilus-extensions/nautilus-icon-private.h:
	(get_icon_space_width), (lay_down_one_line),
	(lay_down_icons_horizontal),
	(nautilus_icon_container_set_tighter_layout),
	(nautilus_icon_container_is_auto_layout),
	(nautilus_icon_container_is_tighter_layout):
	added a "tighter layout" boolean; when it's set, don't pad out
	to the nearest power of two.
	
	* libnautilus-extensions/nautilus-metadata.h:
	added a tag for tighter layout in the metadata
	
	* src/file-manager/fm-icon-view.c,h: (tighter_layout_callback),
	(compute_menu_item_info), (insert_one_context_menu_item),
	(update_layout_menus), (fm_icon_view_get_directory_tighter_layout),
	(fm_icon_view_real_get_directory_tighter_layout),
	(fm_icon_view_set_directory_tighter_layout),
	(fm_icon_view_real_set_directory_tighter_layout),
	(fm_icon_view_begin_loading),
	(insert_bonobo_menu_item), (sort_callback),
	(sort_direction_callback), (manual_layout_callback),
	(layout_changed_callback), (fm_icon_view_merge_menus),
	(update_one_menu_item), (fm_icon_view_initialize_class):
	added a "tighter layout" boolean as an instance variable,
	added a toggle menu item, and hooked everything up so the
	menu item toggles the tighter layout state.  It stores it
	per directory in the metadata.

2000-08-25  Rebecca Schulman  <rebecka@eazel.com>

        Fixed bug 2071 to improve the date modified search
	criterion.  Also, an change to the indexing info dialog
	because of a change in the medusa search service API
	
	* libnautilus-extensions/nautilus-dateedit-extensions.c:
	(nautilus_gnome_date_edit_get_date_as_string):
	* libnautilus-extensions/nautilus-dateedit-extensions.h:
	* libnautilus-extensions/Makefile.am:
	An extra addition to the gnome dateedit widget we need for
	the modified search criterion

	* src/nautilus-complex-search-bar.c:
	(nautilus_complex_search_bar_get_location),
	(attach_criterion_to_search_bar):
	* libnautilus-extensions/nautilus-search-bar-criterion-private.h:
	* libnautilus-extensions/nautilus-search-bar-criterion.c:
	* libnautilus-extensions/nautilus-search-bar-criterion.h:
	(nautilus_search_bar_criterion_new_from_values),
	(nautilus_search_bar_criterion_next_new),
	(nautilus_search_bar_criterion_get_location),
	(get_date_modified_location_for):
	Changed date modified bar to take a date edit widget
	instead of an entry or menu, and parse the operatory coorectly
	

	* src/file-manager/nautilus-indexing-info.c:
	(nautilus_indexing_info_show_dialog):
	Changed because medusa api was updated


2000-08-25  J Shane Culpepper  <pepper@eazel.com>

	 
	components/services/summary/nautilus-view/nautilus-summary-view.c:
	(generate_summary_form), (entry_changed_cb), (login_button_cb),
	(maintenance_button_cb):

	Another summary snapshot.   Added the login frame skeleton.

2000-08-25  Robey Pointer  <robey@eazel.com>

	* src/nautilus-application.c: (nautilus_application_startup):
	* src/nautilus-application.h:
	* src/nautilus-first-time-druid.c: (druid_finished):
	* src/nautilus-main.c: (main):
	* src/nautilus-shell-interface.idl:
	* src/nautilus-shell.c: (nautilus_shell_get_epv), (corba_quit),
	(corba_restart):

	Add corba 'restart' call to the IDL, and match it with
	command-line option '--restart'.  On restart, Nautilus goes
	through all the exit code, then does an exec() on itself instead
	of exit().

2000-08-25  John Sullivan  <sullivan@eazel.com>

	Fixed bug 1782 (File->Open after opening a folder crashes)
	The problem was that the menus weren't being updated when
	switching locations, so menus like "Open" were still sensitive
	because there used to be a selection.

	* src/file-manager/fm-directory-view.c:
	Added menus_merged boolean to Details struct.
	(fm_directory_view_merge_menus): Set menus_merged to TRUE.
	(fm_directory_view_load_uri): update menus when loading URI,
	but only if menus_merged is TRUE (so you don't try to update
	nonexistent menus the first time, which would make Bonobo sad)

2000-08-25  John Sullivan  <sullivan@eazel.com>

	Fixed bug 1934 ("View as" menu gets ludicrously tall when
	you add search criteria)

	* src/nautilus-window.c: (nautilus_window_constructed):
	Put "View as" option menu into a GtkVBox so it doesn't
	insist on filling the available space vertically.

Fri Aug 25 18:13:09 2000  George Lebl <jirka@5z.com>

	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-eazel.c,
	  cut-n-paste-code/widgets/nautilus-druid/nautilus-druid.c
	  (nautilus_druid_size_request):
	  Fix height issue in size_request and set the druid page height back
	  to the correct size (322 pixels)

	* src/nautilus-first-time-druid.c (user_level_selection_changed),
	  (make_label_bold) (make_hbox_user_level_radio_button)
	  (set_up_user_level_page):  Partial arloyfication of the
	  user level page.  Not yet using NautilusLabel because
	  that appears to be broken (or I'm using it wrong, will
	  investigate).

2000-08-25  Michael Engber  <engber@eazel.com>

	Refactored draw_pixbuf_aa.

	* libnautilus-extensions/nautilus-background.c: (draw_pixbuf_aa),
	(draw_pixbuf_scaled_aspect_aa), (draw_pixbuf_scaled_aa),
	(draw_pixbuf_centered_aa), (draw_pixbuf_tiled_aa):

2000-08-25  Mathieu Lacage  <mathieu@eazel.com>

	components/tree/nautilus-tree-view.c: implement dnd to/from 
	tree view. Closes tasks 1533 and 1534. 
	
2000-08-25  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-volume-monitor.h:
	* libnautilus-extensions/nautilus-volume-monitor.c:
	(is_floppy_mount_path): Added helper.
	(floppy_sort): Simplified logic.
	(nautilus_volume_monitor_get_removable_volume_names): Used the
	prepend/reverse idiom instead of append.
	(nautilus_volume_monitor_volume_is_mounted): Fixed extremely
	unlikely but possible buffer overflow and checked result from
	sscanf.
	(mount_volume_mount): Use g_strchomp instead of rolling our own.
	Took out some dead code.
	(mount_volumes_update_is_mounted): Fixed extremely unlikely but
	possible buffer overflow and checked result from sscanf.
	(mount_volume_add_aliases): Fixed possible buffer overflow and
	storage leak.
	(mount_volume_ext2_add): Removed code to ignore all ext2 volumes
	other than "/". Moved the hack into FMDesktopIconView.
	(mount_volume_cdrom_set_state), (mount_volume_floppy_set_state),
	(mount_volume_ext2_set_state), (mount_volume_set_state),
	(volume_set_state_empty) (mount_volume_activate_cdrom),
	(mount_volume_activate_floppy), (mount_volume_activate_ext2),
	(mount_volume_activate), (eject_cdrom), (mount_volume_deactivate),
	(mount_volume_check_change), (check_permissions),
	(mount_volume_floppy_add),
	(cdrom_ioctl_frenzy), (mount_volume_iso9660_add),
	(add_mount_volume), (mntent_is_removable_fs), (find_volumes),
	(nautilus_volume_monitor_mount_unmount_removable),
	(free_volume_info), (get_iso9660_volume_name),
	(get_ext2_volume_name), (get_floppy_volume_name):
	Removed mount_type and volume_fd. Made a bunch of formerly-
	public things private and added NAUTILUS_ prefix to some public
	identifier that didn't have it.

	* libnautilus-extensions/nautilus-trash-directory.c:
	(get_volume_vfs_uri_if_writable):
	Changed callers to use the constants with the NAUTILUS_ prefix.
	
	* src/file-manager/fm-desktop-icon-view.c: (create_mount_link):
	Moved the "/" hack here (marked with a FIXME and bug number) and
	made the two cases that create mount links share code. Also
	made it use type instead of the now-gone mount_type.
	(startup_create_mount_links), (volume_mounted_callback): Call the
	new common routine instead of having two copies of the same code.

2000-08-25  John Sullivan  <sullivan@eazel.com>

	Made sorting by size put big ones first, to match
	common sense. (Date now puts recent ones first by
	the same reasoning.) Changed "Ascending/Descending"
	pair of items to single "Reversed Order" item so
	it isn't making any promises about order.

	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_compare_directories_by_size): Reverse
	the logic for directory ordering.
	* src/file-manager/fm-icon-view.c: 
	Changed Details field from updating_bonobo_radio_menu_item
	to updating_bonobo_marked_menu_item since it now covers one
	toggle item also.
	(update_layout_menus), (sort_callback), (sort_direction_callback),
	(manual_layout_callback), (fm_icon_view_merge_menus): Changed
	all the code dealing with "Ascending/Descending" radio-item pair
	to deal with single "Reversed Order" toggle item instead.

2000-08-24  Ali Abdin  <aliabdin@aucegypt.edu>

        * components/help/converters/gnome-db2html2/sect-elements.c:
        * components/help/converters/gnome-db2html2/gdb3html.h:
        Add in support for the <mousebutton> tag

2000-08-25  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-buffered-widget.c:
	(nautilus_buffered_widget_initialize_class),
	(nautilus_buffered_widget_realize),
	(nautilus_buffered_widget_draw),
	(nautilus_buffered_widget_size_allocate),
	(nautilus_buffered_widget_expose_event):
	Some dumb renamings and superfluous assertion removal.

	* libnautilus-extensions/nautilus-image.c:
	(nautilus_image_initialize_class), (nautilus_image_draw),
	(nautilus_image_expose_event), (nautilus_image_paint),
	(nautilus_image_set_alpha_mode):
	Add support for two alpha rendering modes: 1) FULL, the pixbuf is
	composited on top of the widget's background - expensive.  2)
	THRESHOLD, the pixbuf is drawn with an alpha threshold without any
	compositing - fast but not as smooth.
	
	* libnautilus-extensions/nautilus-label.c: (render_buffer_pixbuf):
	Remove a dumb printf i left in before.
	
	* src/nautilus-sidebar-title.c:
	(nautilus_sidebar_title_initialize), (update_icon),
	(nautilus_sidebar_title_hit_test_icon),
	(sidebar_create_smooth_components_if_needed),
	(sidebar_create_normal_components_if_needed),
	(smooth_graphics_mode_changed_callback):
	Use the new dual alpha support in the image class to simplify
	things.  Create only one icon and change the alpha mode on that
	when the smooth graphics preference changes.  Ill do the same for
	emblems later.
	
2000-08-25  Ramiro Estrugo  <ramiro@eazel.com>

	* test/test-nautilus-label.c:
	(red_label_color_value_changed_callback),
	(green_label_color_value_changed_callback),
	(blue_label_color_value_changed_callback),
	(alpha_label_color_value_changed_callback),
	(red_background_color_value_changed_callback),
	(green_background_color_value_changed_callback),
	(blue_background_color_value_changed_callback),
	(alpha_background_color_value_changed_callback),
	(widget_set_nautilus_background_image),
	(widget_set_nautilus_background_color),
	(widget_get_nautilus_background_color),
	(background_changed_callback), (main):

	Fix the background color test.
	
2000-08-25  Ramiro Estrugo  <ramiro@eazel.com>

	components/services/nautilus-dependent-shared/shared-service-widgets.c:
	(create_label_widget), (create_services_title_widget),
	(create_services_header_widget):
	components/services/nautilus-dependent-shared/shared-service-widgets.h:

	Update for changes label/image changes that fix the ugly margins.

2000-08-25  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-buffered-widget.c:
	(nautilus_buffered_widget_initialize),
	(buffered_widget_update_pixbuf),
	(nautilus_buffered_widget_set_tile_pixbuf),
	(nautilus_buffered_get_tile_pixbuf_size),
	(nautilus_buffered_widget_set_horizontal_offset),
	(nautilus_buffered_widget_get_horizontal_offset),
	(nautilus_buffered_widget_set_vertical_offset),
	(nautilus_buffered_widget_get_vertical_offset):
	* libnautilus-extensions/nautilus-buffered-widget.h:

	Add suport for a vertical and horizontal offset.  Pass these on to
	the pixbuf render function so that the subclasses can do stuff
	with them.

	* libnautilus-extensions/nautilus-image.c:
	(nautilus_image_initialize), (nautilus_image_size_request),
	(render_buffer_pixbuf), (nautilus_image_set_overall_alpha),
	(nautilus_image_set_alpha_mode), (nautilus_image_get_alpha_mode):
	* libnautilus-extensions/nautilus-image.h:

	Use the GtkMisc xpad/ypad into account when computing the
	requested geometry.
	
	Add preliminary support an alpha mode so that the image widget can
	server as a regular thresholded pixbuf display without doing the
	full and expensive compositing on the background.  Not hooked up yet.

	Update for vertical/horizontal offset support.

	* libnautilus-extensions/nautilus-label.c:
	(nautilus_label_size_request), (render_buffer_pixbuf):
	
	Use the GtkMisc xpad/ypad into account when computing the
	requested geometry.

	Update for vertical/horizontal offset support.
	
2000-08-25  Maciej Stachowiak  <mjs@eazel.com>

	* components/tree/Makefile.am:
	* components/tree/libmain.c: (tree_shlib_object_destroyed),
	(tree_shlib_make_object):
	* components/tree/main.c: (tree_exe_object_destroyed),
	(tree_exe_make_object), (main):
	* components/tree/nautilus-tree-view-iids.h:
	* components/tree/nautilus-tree-view.oafinfo: Removed
	* components/tree/nautilus-tree-view.oafinfo.exe: Added
	* components/tree/nautilus-tree-view.oafinfo.shlib: Added
	* configure.in:

	Added capability to build the tree view as either a shared library
	server or an executable server, as part of the plan to fix
	1647. However, using the shlib component causes massive
	instability in both the tree view and nautilus in general. I am
	leaving the executable component the default until I fix this.
	
Fri Aug 25 02:17:17 2000  George Lebl <jirka@5z.com>

	* cut-n-paste-code/widgets/nautilus-druid/Makefile.am,
	  cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-finish.c,
	  cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-finish.h,
	  cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-start.c,
	  cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-start.h:
	  Remove these as they are obscolete anyway.

	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid.c
	  (nautilus_druid_init), (nautilus_druid_size_request),
	  (nautilus_druid_size_allocate):
	  Fix calculating of size and borders

	* icons/Makefile.am, icons/druid_*.png: Add Arlo's druid images.

	* po/POTFILES.in,
	  cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-eazel.c,
	  cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-eazel.h:
	  Add the eazel druid page.  Theoretically this should move to
	  libnautilus-extentions soon, including deriving nautilus-druid from
	  gnome-druid, in which way we can eliminate the entire
	  cut-n-paste mess for the druid.  Likely to do this tommorrow with
	  the rest of the arloification.

	* src/nautilus-first-time-druid.c (set_up_background),
	  (set_up_user_level_page), (set_up_service_signup_page),
	  (set_up_update_page), (set_up_update_feedback_page),
	  (set_page_sidebar), (nautilus_first_time_druid_show):
	  Use the eazel page for the druid and set up the sidebar image
	  to the standard one.

2000-08-25  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/command-line/Makefile.am:
	No longer builds anything else then eazel-install.
	* components/services/install/command-line/eazel-alt-install-corba.c:
	(install_failed), 
	Changed output...
	(create_package), 
	if used with --file and the filename does not start with /, adds
	$cwd to filename
	(main):
	Commandline arg for rpm db root
	
	* components/services/install/idl/trilobite-eazel-install.idl:
	Added the rpm db root arg to install, uninstall, query and revert.
	
	* components/services/install/lib/eazel-install-corba-callback.h:
	* components/services/install/lib/eazel-install-corba-callback.c:
	(eazel_install_callback_install_packages),
	(eazel_install_callback_uninstall_packages),
	(eazel_install_callback_simple_query),
	(eazel_install_callback_revert_transaction):
	Added support for rpm db root arguments for the four major
	operations. Encodes root==NULL to ""
	
	* components/services/install/lib/eazel-install-corba.c:
	(impl_Eazel_Install_install_packages),
	(impl_Eazel_Install_uninstall_packages),
	(impl_Eazel_Install_revert_transaction),
	(impl_Eazel_Install_simple_query):
	Decode the root arg... big stuff heh ?
	
	* components/services/install/lib/eazel-install-public.h:
	* components/services/install/lib/eazel-install-private.h:
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_set_arg), (eazel_install_class_initialize),
	(eazel_install_initialize), (eazel_install_install_packages),
	(eazel_install_uninstall_packages),
	(eazel_install_revert_transaction_from_xmlstring),
	(eazel_install_revert_transaction_from_file),
	(eazel_install_query_package_system), (string_list_copy),
	(eazel_install_set_root_dirs):
	Changed the root_dir GtkArg to a GList, so you can set the array
	of roots to use. The object defaults to use /var/lib/rpm and
	~/.nautilus/rpmdb as roots. If ~/.nautilus/rpmdb does not exist,
	it will create a rpmdb in this dir.
	In -private.h, I've removed the rpmdb var in the packsys.rpm
	union, and now have a hashtable that maps from root dir to rpmdb.
	in the private struct, there is also a cur_root var, which holds
	the root given to the four calls, or DEFAULT_RPM_DB_ROO
	(/var/lib/rpm) if called with root==NULL.

	* components/services/install/lib/eazel-install-protocols.c:
	(gnome_vfs_xfer_callback), (gnome_vfs_fetch_remote_file):
	Added gnome_vfs_callback_struct so I can transfer both the
	file_to_report and EazelInstall object. Thus gnome-vfs downloads
	now again reports short names (eg. xfig instead of
	xfig-3.2.2-_beta1-2).
	
	* components/services/install/lib/eazel-install-query.h:
	Comments on how to use the query call.
	
	* components/services/install/lib/eazel-install-query.c:
	(eazel_install_simple_rpm_query), 
	Now collects the result into a parameter instead of returning a glist.
	(eazel_install_simple_query):
	If no cur_root is set in the EazelInstall object, it queries on
	all the databases, otherwise, it only queries the cur_root db.
	Plus I fixed some horribleness in the vaarg stuff.
	
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_new_packages), (download_all_packages),
	(install_packages), (uninstall_packages),
	(eazel_install_start_transaction),
	(eazel_install_free_rpm_system_close_db_foreach),
	(eazel_install_free_rpm_system),
	(eazel_install_prepare_rpm_system),
	(eazel_install_prepare_package_system),
	(eazel_install_add_to_rpm_set),
	(eazel_install_check_existing_packages),
	(eazel_install_fetch_rpm_dependencies),
	(eazel_install_ensure_deps), 
	Changed to use the new hashtable of rpmdb's.
	
	(eazel_uninstall_upward_traverse),
	(eazel_uninstall_downward_traverse),
	(eazel_uninstall_check_for_install), 
	(eazel_uninstall_globber):
	The uninstall stuff uses eazel_install_simple_query now (bug
	1697). Also did more work on the downward traverse, although I
	still feel it's too dangerous to actually use. But now the upwards
	works properly (by using the neglist feature in the query, fixes
	bug 1539)
	
	* components/services/install/lib/eazel-install-types.c:
	(packagedata_fill_from_rpm_header):
	Eek, I used pointers into the rpmheader instead of copying them
	out. At least that 
	
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(xml_get_prop), 
	Made a funky xml_get_prop call, that like xmlGetProp gets a
	property, but also g_strdup's it and free the malloc'ed libxml value.
	(parse_category), (generate_xml_package_list),
	(osd_parse_implementation), (osd_parse_softpkg),
	(parse_osd_xml_from_memory):
	Uses xml_get_prop
	 
	* components/services/install/nautilus-view/nautilus-service-install.
	c: (nautilus_service_install_view_install_package_callback),
	(nautilus_service_install_view_uninstall_package_callback):
	Pass NULL for the root parameter, that causes eazelinstall to
	default to the /var/lib/rpm db

2000-08-24  J Shane Culpepper  <pepper@eazel.com>

	 
	components/services/summary/nautilus-view/nautilus-summary-view.c:
	(generate_summary_form):
	Snapshot checkin of the parent frame layout.  Still looks bad but
	I wanted capture the parent changes in case I do something dumb.

2000-08-24  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-buffered-widget.c:
	(nautilus_buffered_widget_expose),
	(buffered_widget_create_pixbuf_from_background),
	(nautilus_buffered_widget_get_tile_pixbuf),
	(nautilus_buffered_get_tile_pixbuf_size):
	* libnautilus-extensions/nautilus-buffered-widget.h:
	New function to access the tile_height.
	
	* libnautilus-extensions/nautilus-label.c:
	(nautilus_label_size_request):
	Take the tile height into account when computing the requested
	label height.

2000-08-24  Maciej Stachowiak  <mjs@eazel.com>

	* components/tree/nautilus-tree-view.c
	(view_node_to_uri): New function.
	(lots of places): Use it.

2000-08-24  Ali Abdin  <aliabdin@aucegypt.edu>

        * components/help/converters/gnome-db2html2/sect-elements.[ch]:
        (sect_table_with_border_start_element): Renamed from
        sect_table_start_element to this.
        (sect_table_without_border_start_element): New function
        (sect_member_start_element): ditto
        (sect_member_end_element): ditto

        * components/help/converters/gnome-db2html2/gdb3html.h:
        Add in support for the <simplelist> and <member> tags

2000-08-24  Darin Adler  <darin@eazel.com>

	Moved functions to gnome-vfs.

	* components/music/nautilus-music-view.c: (play_current_file),
	(nautilus_music_view_update_from_uri):
	* libnautilus-extensions/nautilus-bookmark.c:
	(nautilus_bookmark_uri_known_not_to_exist):
	* libnautilus-extensions/nautilus-directory-background.c:
	(theme_image_path_to_uri),
	(nautilus_directory_background_read_desktop_settings),
	(nautilus_directory_background_write_desktop_settings):
	* libnautilus-extensions/nautilus-file-utilities.c:
	(nautilus_get_user_main_directory), (nautilus_is_remote_uri):
	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.c:
	(nautilus_gdk_pixbuf_load):
	* libnautilus-extensions/nautilus-icon-factory.c:
	(make_thumbnail_path), (path_represents_svg_image),
	(load_specific_image), (nautilus_icon_factory_make_thumbnails):
	* libnautilus-extensions/nautilus-link-set.c: (expand_uri):
	* libnautilus-extensions/nautilus-link.c: (nautilus_link_create),
	(nautilus_link_set_icon), (nautilus_link_set_link_uri),
	(nautilus_link_set_type), (nautilus_link_get_root_property),
	(make_local_path), (nautilus_link_get_image_uri):
	* libnautilus-extensions/nautilus-preferences-item.c:
	(add_icon_themes):
	* libnautilus-extensions/nautilus-program-choosing.c:
	(nautilus_launch_application_parented):
	* libnautilus-extensions/nautilus-trash-directory.c:
	(get_volume_vfs_uri_if_writable):
	* libnautilus-extensions/nautilus-volume-monitor.c:
	(mount_volume_mount):
	* src/file-manager/fm-desktop-icon-view.c:
	(startup_create_mount_links), (volume_mounted_callback),
	(place_home_directory), (get_local_path):
	* src/file-manager/fm-directory-view.c: (activate_callback):
	* src/file-manager/fm-icon-view.c: (play_file):
	* src/file-manager/fm-properties-window.c:
	(get_and_ref_file_to_display):
	* src/nautilus-desktop-window.c: (nautilus_desktop_window_new):
	* src/nautilus-property-browser.c:
	(nautilus_property_browser_drag_data_get), (remove_background),
	(remove_emblem), (emblem_image_file_changed),
	(add_background_to_browser), (emblem_dialog_clicked),
	(make_properties_from_directory):
	* src/nautilus-sidebar.c: (map_local_data_file),
	(uri_is_local_image):
	* src/nautilus-theme-selector.c: (populate_list_with_themes):
	* src/nautilus-view-frame-bonobo-embeddable.c:
	(bonobo_subdoc_load_location):
	* src/nautilus-window.c: (nautilus_window_go_home):
	Changed to use local path functions from gnome-vfs now that
	they are moved there from Nautilus.
	
	* libnautilus-extensions/nautilus-file-utilities.h:
	* libnautilus-extensions/nautilus-file-utilities.c:
	Removed the local path functions since they are in gnome-vfs
	now and all callers have been changed to use those.

2000-08-24  Robey Pointer  <robey@eazel.com>
	 
	* components/services/install/nautilus-view/nautilus-service-install-view.c:
	(nautilus_service_install_view_destroy),
	(nautilus_install_parse_uri), (spin_cylon),
	(nautilus_service_install_downloading),
	(nautilus_service_install_download_failed),
	(nautilus_service_install_done), (nautilus_service_install_failed),
	(nautilus_service_install_view_update_from_uri):
	* components/services/install/nautilus-view/nautilus-service-install-view.h:

	Hardcode rpm install server host/port (for now), changing the url
	format to the requested "eazel-install:xfig".  Unref the root
	client and install service correctly.  Spin a cylon when waiting
	to contact the remote server.
	 
	* components/services/nautilus-dependent-shared/shared-service-widgets.c:
	(create_label_widget), (create_services_title_widget),
	(create_services_header_widget):
	 
	* components/services/trilobite/libtrilobite/trilobite-core-utils.c:
	(trilobite_init):
	* libnautilus/nautilus-view.c: (view_frame_call_end):

2000-08-24  Mathieu Lacage  <mathieu@eazel.com>

	* nautilus-gdk-extensions.c: (nautilus_gdk_color_to_rgb): space,
	(nautilus_gdk_rgb_to_color): add function.. could be useful. 
	* nautilus-gdk-extensions.h: add prototype.
	* nautilus-gtk-extensions.c: (rgb_to_hls): new internal function. converts
	from rgb to hls., (hls_to_rgb): from hls to rgb,
	(nautilus_gtk_style_shade): necassery magic to "shade a color by a given 
	amount... All this was copied from panel.c which was in turn copied from 
	gtk.
	* nautilus-gtk-extensions.h: add prototype.

2000-08-24  Robey Pointer  <robey@eazel.com>

	* components/services/install/nautilus-view/nautilus-service-install-view.c:
	(generate_install_form),
	(nautilus_service_install_view_destroy),
	(nautilus_install_parse_uri), (make_new_status),
	(current_progress_bar_complete),
	(nautilus_service_install_downloading),
	(nautilus_service_install_installing),
	(nautilus_service_install_failed),
	(nautilus_service_need_password), (set_root_client),
	(nautilus_service_install_view_update_from_uri):
	* components/services/install/nautilus-view/nautilus-service-install-view.h:

	More cleanup of the RPM install view: rudimentary password dialog,
	cleaned out old unused code, and hooked up the RPM package info to
	display in the top field, instead of the fake "The Gimp" info.
	Also removed the forced delays in updating (install happens in
	"realtime" now!).
	 
2000-08-24  Arlo Rose  <arlo@eazel.com>
	
	* icon/search_results.png
	Added an icon to be used in the search results side bar.

2000-08-24  J Shane Culpepper  <pepper@eazel.com>

	* components/services/install/nautilus-view/main.c:
	(service_install_object_destroyed), (service_install_make_object),
	(main):
	 
	* components/services/install/nautilus-view/nautilus-service-install-view.c:
	(show_overall_feedback),
	(nautilus_service_install_view_initialize_class),
	(nautilus_service_install_view_initialize),
	(nautilus_service_install_view_destroy),
	(nautilus_service_install_view_get_nautilus_view),
	(nautilus_service_install_downloading),
	(nautilus_service_install_installing),
	(nautilus_service_install_view_update_from_uri),
	(nautilus_service_install_view_load_uri),
	(service_install_load_location_callback):
	* components/services/inventory/lib/eazel-inventory-shared.c:
	(add_package_info), (read_proc_info), (add_info), (add_io_info),
	(add_hardware_info), (synchronize_configuration_metafile),
	(update_configuration_metafile), (create_configuration_metafile):
	* components/services/inventory/nautilus-view/main.c:
	(inventory_object_destroyed), (inventory_make_object), (main):
	 
	* components/services/inventory/nautilus-view/nautilus-inventory-view.c:
	(generate_inventory_form), (gather_config_button_cb),
	(register_later_cb), (show_feedback), (make_http_post_request),
	(go_to_uri), (get_home_uri), (update_now), (generate_form_title),
	(nautilus_inventory_view_initialize_class),
	(nautilus_inventory_view_initialize),
	(nautilus_inventory_view_destroy),
	(nautilus_inventory_view_get_nautilus_view),
	(nautilus_inventory_view_load_uri),
	(inventory_load_location_callback):
	* components/services/login/nautilus-view/main.c:
	(login_object_destroyed), (login_make_object), (main):
	* components/services/login/nautilus-view/nautilus-login-view.c:
	(entry_changed_cb), (login_button_cb), (maintenance_button_cb),
	(nautilus_login_view_initialize_class),
	(nautilus_login_view_initialize), (nautilus_login_view_destroy),
	(nautilus_login_view_get_nautilus_view),
	(nautilus_login_view_load_uri), (login_load_location_callback):
	 
	* components/services/nautilus-dependent-shared/shared-service-utilities.c:
	(go_to_uri), (is_location):
	* components/services/startup/nautilus-view/main.c:
	(service_object_destroyed), (service_make_object), (main):
	 
	* components/services/startup/nautilus-view/nautilus-service-startup-view.c:
	(generate_form_logo),
	(nautilus_service_startup_view_initialize_class),
	(nautilus_service_startup_view_initialize),
	(nautilus_service_startup_view_destroy),
	(nautilus_service_startup_view_get_nautilus_view),
	(nautilus_service_startup_view_load_uri),
	(service_load_location_callback):
	* components/services/summary/nautilus-view/main.c:
	(summary_object_destroyed), (summary_make_object), (main):
	 
	* components/services/summary/nautilus-view/nautilus-summary-view.c:
	(generate_summary_form), (nautilus_summary_view_initialize_class),
	(nautilus_summary_view_initialize),
	(nautilus_summary_view_destroy),
	(nautilus_summary_view_get_nautilus_view),
	(nautilus_summary_view_load_uri), (summary_load_location_callback):

	Cleaning up some code to meet coding standards.

2000-08-24  Michael Engber  <engber@eazel.com>

	Added a Change Desktop Background item to the right click
	menu of the desktop. I brings up the background capplet (bug
	1791). While I was at it I made it so the Change Background
	item for the desktop was called Change Desktop Background in
	accordance with Arlo's wishes.

	* libnautilus-extensions/nautilus-directory-background.c:
	(nautilus_directory_background_is_set):
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize_class),
	(reset_desktop_background_menu_item_callback),
	(change_desktop_background_menu_item_callback),
	(fm_desktop_icon_view_create_background_context_menu_background_ite
	ms):
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize_class),
	(real_create_background_context_menu_background_items),
	(create_background_context_menu_background_items),
	(fm_directory_view_real_create_background_context_menu_items):
	* src/file-manager/fm-directory-view.h:

2000-08-24 Alastair McKinstry <mckinstry@computer.org>

	* configure.in: Added "ga" to ALL_LINGUAS

2000-08-24  John Sullivan  <sullivan@eazel.com>

	Fixed bug 1653 (new menu layout). View menu now contains
	Show/Hide items for tool bar, location bar, sidebar, and
	status bar. The preference now controls only what you get
	for new windows. Any future "menus aren't quite right" 
	issues should be filed as new bugs.

	* libnautilus-extensions/nautilus-global-preferences.h:
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog), (global_preferences_register):
	Renamed NAUTILUS_PREFERENCES_DISPLAY_SIDEBAR and its ilk to
	NAUTILUS_PREFERENCES_START_WITH_SIDEBAR since these preferences
	now only affect the initial appearance of new windows. Also,
	clarified the text that appears in the preferences window for these.
	
	* src/nautilus-window-menus.c:
	Removed a bunch of code #ifdeffed WINDOW_ITEMS_TEST since the
	functionality it partly implemented is now implemented for real.
	(view_menu_show_hide_sidebar_callback),
	(view_menu_show_hide_tool_bar_callback),
	(view_menu_show_hide_location_bar_callback),
	(view_menu_show_hide_status_bar_callback):
	New menu callback functions that toggle the visibility of the
	various views.
	(nautilus_window_update_show_hide_menu_items): New function,
	sets the text in the show/hide menu items based on current
	visibility.
	(nautilus_window_initialize_menus): Put the Show/Hide menu items
	in the menu.
	* src/nautilus-window-private.h: Add prototype for
	nautilus_window_update_show_hide_menu_items.
	* src/nautilus-window.h: Renamed statusbar_ctx -> status_bar_context_id
	and statusbar_clear_id -> status_bar_clear_id; renamed show/hide
	locationbar/toolbar/statusbar to use location_bar, tool_bar, and
	status_bar (GTK bad English usage notwithstanding); added prototypes
	for nautilus_window_sidebar_showing and its ilk.
	* src/nautilus-window.c: 
	(nautilus_window_initialize), (nautilus_window_destroy): Removed
	monitoring & unmonitoring of DISPLAY_SIDEBAR-type preferences since
	changing these preferences now has no dynamic effect.
	(nautilus_window_clear_status), (nautilus_window_set_status),
	(nautilus_window_constructed): Fixed wordgroupingification of 
	status_bar et al.
	(show_dock_item), (hide_dock_item): New functions to share code of
	show/hide location bar & tool bar functions; these call
	nautilus_window_update_show_hide_menu_items now also.
	(dock_item_showing): New function, tests visibility of named dock item.
	(nautilus_window_hide_location_bar),
	(nautilus_window_show_location_bar),
	(nautilus_window_hide_tool_bar), (nautilus_window_show_tool_bar):
	Use new code-sharing functions.
	(nautilus_window_location_bar_showing),
	(nautilus_window_tool_bar_showing), 
	(nautilus_window_sidebar_showing),
	(nautilus_window_status_bar_showing): New functions to test visibility
	(nautilus_window_hide_sidebar),
	(nautilus_window_show_sidebar), 
	(nautilus_window_hide_status_bar),
	(nautilus_window_show_status_bar): These call 
	nautilus_window_update_show_hide_menu_items now.
	(nautilus_window_show): Updated for naming changes.

	* RENAMING: Noted that the evil one-word "toolbar" phrase
	is still rampant in Nautilus.

2000-08-24  John Sullivan  <sullivan@eazel.com>

	Fixed bug 2119 (Alt-key navigation for menus doesn't work).

	* libnautilus-extensions/nautilus-icon-container.c:
	(key_press_event):
	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_key_press):
	Made the type-select mechanism for list and icon views not
	eat alt-key combinations, so they can be used for pulling
	down menus.

2000-08-23  Maciej Stachowiak  <mjs@eazel.com>

	Fix for 1528. "Where's the money, Lebowski?"
	
	* components/tree/nautilus-tree-model.c
	(nautilus_tree_model_monitor_node): A few changes to avoid
	crashing when re-monitoring a node.

	* components/tree/nautilus-tree-view.c
	(uri_to_view_node, model_node_to_view_node): New convenience
	functions.
	(insert_hack_node, nautilus_tree_view_insert_model_node,
	nautilus_tree_view_remove_model_node,
	nautilus_tree_view_update_model_node,
	nautilus_tree_view_find_parent_node): Use the new functions
	(notify_done_loading, notify_node_seen,
	nautilus_tree_view_model_node_added_callback,
	nautilus_tree_view_model_done_loading_callback,
	get_uri_sequence_to_root, call_when_root_seen,
	call_when_uri_loaded_or_parent_done_loading,
	cancel_selection_in_progress, expand_uri_sequence_and_select_end,
	nautilus_tree_view_load_uri, tree_load_location_callback,
	tree_select_row_callback): New mess^Wcode to select on content
	view navigation, handling all the asynchronicity.

	* libnautilus-extensions/nautilus-file-utilities.h,
	libnautilus-extensions/nautilus-file-utilities.c:
	(nautilus_make_uri_canonical): Export the function formerly known
	as `make_uri_canonical' in natuilus-directory.c.
	(nautilus_self_check_file_utilities): Move tests here.
	* libnautilus-extensions/nautilus-directory.c:
	(make_uri_canonical): remove
	(nautilus_directory_get_internal):
	s/make_uri_canonical/nautilus_make_uri_canonical/
	(nautilus_self_check_directory): Remove tests for
	make_uri_canonical
	
2000-08-24  Andy Hertzfeld  <andy@eazel.com>
 
	cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-finish.c:
	(nautilus_druid_page_finish_init),
	(nautilus_druid_page_finish_destroy),
	(nautilus_druid_page_finish_configure_size),
	(nautilus_druid_page_finish_set_logo):
	changed the logo from being a fixed width and height to 
	automatically adjusting image dimensions; also, made it use the 
	anti-aliased canvas for prettier images
	
	cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-standard.c: 
	(nautilus_druid_page_standard_init),
	(nautilus_druid_page_standard_configure_size),
	(nautilus_druid_page_standard_construct),
	(nautilus_druid_page_standard_set_logo):
	ditto for standard pages; this stuff should really be in the superclass
	
	cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-start.c:
	(nautilus_druid_page_start_init),
	(nautilus_druid_page_start_configure_size):
	ditto for the finish page
	
	* src/nautilus-first-time-druid.c: (druid_finished),
	(nautilus_first_time_druid_show), (download_callback):
	added setting the logo image and some other improvements; the logo image 
	still looks a bit crufty and needs to be tweaked by Susan
	
2000-08-23  Robey Pointer  <robey@eazel.com>

	* components/services/install/nautilus-view/Makefile.am:

	Fix RPM install view's include path to find libtrilobite.
	 
	components/services/install/nautilus-view/nautilus-service-install-
	view.c: (generate_install_form), (generate_current_progress),
	(create_package), (nautilus_install_parse_uri), (make_new_status),
	(spin_cylon), (current_progress_bar_complete),
	(nautilus_service_install_downloading),
	(nautilus_service_install_dependency_check),
	(nautilus_service_install_preflight_check),
	(nautilus_service_install_download_failed),
	(nautilus_service_install_installing),
	(nautilus_service_install_done), (get_password_dude),
	(set_root_client), (nautilus_service_install_view_update_from_uri),
	(service_install_load_location_callback):
	components/services/install/nautilus-view/nautilus-service-install-
	view.h:

	Make RPM install view actually work (using the trilobite install
	service) instead of being smoke & mirrors.  Make bottom panel be a
	fixed table that scrolls through (label, progress-bar) pairs for
	status on downloading and installing various RPMs.
	 
2000-08-23  John Sullivan  <sullivan@eazel.com>

	More work on bug 1653 (new menu layout). Now there's a
	permanent "View" menu that contains Refresh and zooming
	items and the icon view merges its stuff in there. The
	icon view now has a "Clean Up by Name" item to do a
	one-shot sort of icons in manual layout mode.

	* libnautilus-extensions/nautilus-icon-container.c:
	(key_press_event): 
	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_key_press):
	Don't use any control-key combinations for type-select 
	(this was blocking Control-= and others)
	
	* libnautilus/nautilus-bonobo-ui.h: Added #defines for View menu
	and placeholders in it.
	
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize_class), (bump_zoom_level),
	(zoom_to_level), (restore_default_zoom_level), (can_zoom_in),
	(can_zoom_out): Override all zoom-related functions to do
	nothing, so you can't use keyboard equivalents or other trickery
	to zoom on the desktop.
		
	* src/file-manager/fm-icon-view.h:
	Define clean_up function pointer
	* src/file-manager/fm-icon-view.c: 
	(set_sort_criterion): Just moved this function.
	(fm_icon_view_clean_up): New function, calls virtual function.
	(fm_icon_view_real_clean_up): New function, sorts one time by name.
	(clean_up_callback): New function, calls fm_icon_view_clean_up
	(compute_menu_item_info): Add clean up case
	(update_layout_menus): Update sensitivity of Clean Up item
	(get_next_position): New helper function to get a position for
	a Bonobo menu item based on the one you want to be after. Works
	around Bonobo bug where the last item's position is reported as -1.
	(fm_icon_view_merge_menus): Deploy get_next_position; get rid of
	Layout menu and redo items in View menu to match design in bug 1653.
	(fm_icon_view_initialize_class): Wire up clean_up function pointer
	
	* src/nautilus-window-menus.c: 
	(view_menu_reload_callback): Renamed from go_menu_reload_callback
	(view_menu_zoom_in_callback), (view_menu_zoom_out_callback),
	(view_menu_zoom_normal_callback): New functions, used by zooming menu
	items.
	(nautilus_window_initialize_menus): Add View menu; move Reload to
	View menu and rename it Refresh; add zooming menu items.
	* src/nautilus-window-private.h: Add #defines for zooming menu item paths;
	add prototypes for nautilus_window_zoom_xxx functions.
	* src/nautilus-window.c: 
	(nautilus_window_zoom_in),
	(nautilus_window_zoom_to_level), (nautilus_window_zoom_out),
	(nautilus_window_zoom_to_fit): Renamed these to better match new
	shared-between-files status, and reordered the parameters.
	(nautilus_window_constructed): use gtk_signal_connect_object with
	nautilus_window_zoom functions since their parameters have flipped.
	(nautilus_window_zoom_level_changed_callback): Set sensitivity of
	zooming menu items appropriately.
	* src/nautilus-window-manage-views.c:
	(nautilus_window_load_content_view): Desensitize the zoom menu items
	when we hide the zoom control.

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_real_create_background_context_menu_items):
	Change "Zoom to Default" to "Normal Size" in the context menu,
	to match terminology in View menu.
	* src/nautilus-window-toolbars.c: Rename Reload to Refresh to match
	menu item & new design

2000-08-23  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-undo-signal-handlers.c:
	* libnautilus-extensions/nautilus-undo-signal-handlers.h:
	(nautilus_undo_set_up_nautilus_entry_for_undo),
	(nautilus_undo_tear_down_nautilus_entry_for_undo),
	(nautilus_undo_set_up_editable_for_undo),
	(nautilus_undo_tear_down_editable_for_undo):
	Rename functions to be verb phrases as opposed to nouns.
	
	* components/notes/nautilus-notes.c: (finish_loading_note),
	(notes_load_location), (make_notes_view):
	Rename functions to use new names above.
	
	* libnautilus-extensions/nautilus-entry.c:
	(nautilus_entry_initialize):
	Rename functions to use new names above.
		
	* src/file-manager/fm-properties-window.c: (create_basic_page):
	Rename functions to use new names above.

2000-08-23  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-undo-signal-handlers.c:
	(nautilus_undo_teardown_nautilus_entry_for_undo),
	(nautilus_undo_teardown_editable_for_undo):
	Adding the call to unregister form the undo manager was not such
	a good idea.  I am backing it out for now.

2000-08-23  Gene Z. Ragan  <gzr@eazel.com>

	Fixed bug 2282, Undo menu item initially sensitive, but 
	nothing to undo.
	
	* components/notes/nautilus-notes.c: (finish_loading_note),
	(notes_load_location), (make_notes_view):
	Disconnect the editable object form the undo manager
	while location is being changed so an undo transaction
	is not registered during inital text loading.
	
	* libnautilus-extensions/nautilus-undo-signal-handlers.c:
	(nautilus_undo_teardown_nautilus_entry_for_undo),
	(nautilus_undo_setup_editable_for_undo),
	(nautilus_undo_teardown_editable_for_undo):
	When a teardown function is called, also unregister the
	GtkObject from the undo manager in addtion to signal
	disconnection.

2000-08-23  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-file-utilities.c:
	(nautilus_read_entire_file): Added missing close calls.
	(read_file_close_callback): Got rid of overzealous check for
	error code on close. The close could fail, and we really don't
	care much since we've already read the file contents.

2000-08-23  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c:
	(get_info_callback): Added missing call to nautilus_file_changed
	for the case where get_file_info fails.
	(start_getting_file_info): Fixed broken logic that was recursing
	instead of looping when get_file_info fails and added missing call
	to nautilus_file_changed.
	(nautilus_directory_async_state_changed): Moved the check for
	ready callbacks to the end of the function. This fixed the problem
	with the trash properties never showing up.
	
	* src/file-manager/dfos-xfer.c: (get_link_name),
	(get_duplicate_name), (handle_xfer_duplicate):
	Redid the duplicate names functions so they are easier to localize
	and marked the strings that need localizing with _().

	* libnautilus-extensions/nautilus-background.c:
	(nautilus_background_get_combine_mode),
	(nautilus_background_set_combine_mode),
	(nautilus_background_get_image_placement),
	(nautilus_background_set_image_placement): Added return_if_fail
	calls as appropriate.
	(nautilus_background_image_fully_obscures): Simplified nested if
	statements a bit.
	(nautilus_background_draw), (draw_pixbuf_aa): Added return_if_fail
	calls as appropriate.,
	(nautilus_background_draw_aa), (nautilus_background_is_set),
	(nautilus_background_is_loaded), (nautilus_background_reset) :
	Added return_if_fail calls as appropriate.
	(nautilus_background_real_reset): Added code to emit changed signals.
	(nautilus_background_is_dark): Added return_if_fail calls as appropriate.
	* libnautilus-extensions/nautilus-background.h:
	* libnautilus-extensions/nautilus-directory-background.c:
	(nautilus_directory_background_get_default_settings),
	(nautilus_directory_background_read_desktop_settings),
	(nautilus_directory_background_write_desktop_settings),
	(nautilus_directory_background_write_desktop_default_settings),
	(nautilus_directory_background_is_set),
	(saved_settings_changed_callback):
	Changed the type "nautilus_background_image_placement" to
	"NautilusBackgroundImagePlacement" to match our style guidelines
	(inherited from GNOME of course).

2000-08-23  John Sullivan  <sullivan@eazel.com>

	Checked in this patch from Ken Kocienda, which fixes
	bug 390 (wrong magic number used when computing alpha
	threshhold). Thanks Ken!

	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.h:
	New #define for NAUTILUS_STANDARD_ALPHA_THRESHHOLD

	* components/music/nautilus-music-view.c:
	(nautilus_music_view_update_from_uri):
	* libnautilus-extensions/nautilus-bookmark.c:
	(nautilus_bookmark_get_pixmap_and_mask):
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(nautilus_icon_dnd_begin_drag):
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_pixmap_and_mask_for_file):
	* libnautilus-extensions/nautilus-list-column-title.c:
	(load_up_indicator):
	* libnautilus-extensions/nautilus-list.c: (draw_cell):
	* src/file-manager/fm-properties-window.c:
	(get_pixmap_and_mask_for_properties_window),
	(create_image_widget_for_emblem):
	* src/nautilus-bookmarks-window.c:
	* src/nautilus-complex-search-bar.c:
	(load_find_them_pixmap_widget):
	* src/nautilus-property-browser.c: (set_emblem_image_from_file),
	(element_clicked_callback), (make_properties_from_directory_path):
	* src/nautilus-sidebar-title.c: (add_emblem):
	* src/nautilus-theme-selector.c: (add_theme):
	* src/nautilus-window.c: (nautilus_window_realize):
	Replaced all uses of correct or incorrect magic numbers
	with NAUTILUS_STANDARD_ALPHA_THRESHHOLD in calls to
	gdk_pixbuf_render_pixmap_and_mask.

2000-08-23  Yuri Syrota  <rasta@renome.rovno.ua>

	* configure.in: Added "uk" to ALL_LINGUAS

2000-08-23  Ramiro Estrugo  <ramiro@eazel.com>

	 
	components/services/nautilus-dependent-shared/shared-service-widgets.c:
	(create_image_widget), (create_label_widget),
	(create_services_title_widget), (create_services_header_widget),
	(set_widget_foreground_color), (show_feedback):
	components/services/nautilus-dependent-shared/shared-service-widgets.h:

	Update these for the last round of NautilusImage and NautilusLabel
	changes.  They look better now, but the margins are still off.
	Ill fix that soon.
	
2000-08-23  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-label.c: (render_buffer_pixbuf),
	(label_recompute_line_geometries), (nautilus_label_new),
	(nautilus_label_set_text), (nautilus_label_set_font),
	(nautilus_label_set_font_size):
	Bug 2286 - sidebar text gets cut off.  The problem was that the
	text geometry was not being recomputed on changes that affected
	it, like font and font size.   Put the geometry code to a new
	function.

	Also fix a dumb overflow bug caused by abusing guint16.
	
	* libnautilus-extensions/nautilus-scalable-font.c:
	(nautilus_scalable_font_draw_text_lines):
	Was not setting the rectangle end point.
	
2000-08-22  Gene Z. Ragan  <gzr@eazel.com>

	Fixed bug 1570, Undo of typing when renaming says
	"Undo Rename"
	
	* libnautilus-extensions/nautilus-icon-text-item.c:
	(register_rename_undo):
	Changed "Rename" to "Typing"

2000-08-22  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/lib/eazel-install-metadata.c:
	(create_default_configuration_metafile),
	Default DRY_RUN to FALSE instead of TRUE... beware.
	
	(init_default_install_configuration):
	Default transaction_dir to g_get_home_dir()/.nautilus/transactions/
	
	* components/services/install/lib/eazel-install-protocols.c:
	(gnome_vfs_xfer_callback), (eazel_install_fetch_package),
	Trying to make the gnomevfs fetching work properly.
	
	(get_url_for_package):
	Removed the check, since I need to do it in the gnome-vfs callback
	loop.

2000-08-22  Gene Z. Ragan  <gzr@eazel.com>

	Work in progress to support dragging onto 
	NautilusLink files.  Dragging on the trash 
	still does not work.
	
	* libnautilus-extensions/nautilus-icon-container.c:
	* libnautilus-extensions/nautilus-icon-container.h:
	(nautilus_icon_container_initialize_class),
	(nautilus_icon_container_get_icon_uri),
	(nautilus_icon_container_get_icon_drop_target_uri):
	New signal to return the target URI of a drag target.
	This was done to support dragging onto NautilyusLink files.
	
	* libnautilus-extensions/nautilus-drag.c:
	(nautilus_drag_can_accept_item):
	Add call to nautilus_icon_container_get_icon_drop_target_uri
	and remove call to nautilus_icon_container_get_icon_uri

	* libnautilus-extensions/nautilus-icon-dnd.c:
	* libnautilus-extensions/nautilus-icon-private.h:
	(nautilus_icon_container_find_drop_target):
	Some code cleanup to fix a leak.
	
	* libnautilus-extensions/nautilus-link.c:
	* libnautilus-extensions/nautilus-link.h:
	(nautilus_link_can_accept_drag):
	New function that currently return TRUE for all links.
	
	* src/file-manager/fm-icon-view.c: (get_icon_uri_callback),
	(get_icon_drop_target_uri_callback), (create_icon_container):
	Connect to new signal and add implementation.

2000-08-22  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/lib/eazel-install-protocols.c:
	(gnome_vfs_xfer_callback):
	Added the nessecary code for the download progress signal emits
	for gnome-vfs download
	
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(parse_osd_xml_from_memory):
	removed debug output

2000-08-22  Eskil Heyn Olsen  <eskil@eazel.com>
	 
	* components/services/install/command-line/eazel-alt-install-corba.c:
	* components/services/install/lib/eazel-install-metadata.c:
	(create_default_metadata), (get_boolean_value_from_string):
	About to make create_default_metadata switch to ~/ instead of /var.
	
	* components/services/install/lib/eazel-install-protocols.c:
	(get_url_for_package)
	Robey committed a fix for the multiple url stuff.
	
	(gnome_vfs_fetch_remote_file):
	english output instead of binary.
	
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(parse_osd_xml_from_memory):
	Insert null at the end for the </packages> tag. Needed to lose the
	weird </xmp> tags.

2000-08-22  John Sullivan  <sullivan@eazel.com>

	More work on bug 1653 (new menu layout)
	Fixed bug 1996 (No way to activate "Web Search" from keyboard)

	* src/file-manager/fm-directory-view.c: (compute_menu_item_info):
	Changed text from "Select All" to "Select All Files" for clarity.
	* src/nautilus-window-menus.c: 
	(file_menu_web_search_callback): New function, calls
	nautilus_window_go_web_search
	(nautilus_window_initialize_menus): Added underscore-accelerator
	to Close _All Windows; added separator before Select All;
	gave Find Control-F; added Web Search;
	gave Back Control-[; gave Forward Control-]; gave Add Bookmark
	Control-B. (Note that you might not see these until you delete
	the file ~/.gnome/accels/nautilus
	* src/nautilus-window-toolbars.c: 
	(toolbar_clear_search_mode): removed this function.
	(toolbar_home_callback),
	(toolbar_search_web_callback): Removed calls to
	toolbar_clear_search_mode; this behavior has been moved into
	nautilus_window_go_home and nautilus_window_go_web_search
	instead so the menu items can share it.
	* src/nautilus-window.c: (nautilus_window_go_web_search),
	(nautilus_window_go_home): Clear search mode in these
	bottleneck functions.

2000-08-22  Mathieu Lacage  <mathieu@eazel.com>

	Add rebecka's class for queues.
	
	* libnautilus-extensions/Makefile.am: add files.
	* libnautilus-extensions/nautilus-lib-self-check-functions.h:
	add self-test function for queues
	* libnautilus-extensions/nautilus-queue.c: (nautilus_queue_new),
	(nautilus_queue_add), (nautilus_queue_remove),
	(nautilus_queue_free_deep), (nautilus_queue_is_empty),
	(nautilus_queue_free), (nautilus_self_check_queue):
	* libnautilus-extensions/nautilus-queue.h: 

2000-08-22  John Sullivan  <sullivan@eazel.com>

	More work on bug 1653 (new menu layout)
	Fixed bug 1995 (No way to enter/leave search mode from keyboard)
	Fixed bug 1999 (No way to reload from keyboard)

	* libnautilus/nautilus-bonobo-ui.h: Added more placeholders.
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_real_merge_menus): Position "Empty Trash"
	menu item and separator using placeholder.
	* src/file-manager/fm-icon-view.c: (compute_menu_item_info):
	Fixed bug where "Restore Icon's Original Size" was using the
	wrong plurality.
	(insert_bonobo_menu_item): Renamed this from append_ and gave
	it a position parameter.
	(fm_icon_view_merge_menus): Used placeholders to put the menu
	items in the order specified by bug 1653.
	* src/nautilus-switchable-navigation-bar.h:
	* src/nautilus-switchable-navigation-bar.c:
	(nautilus_switchable_navigation_bar_get_mode): New function;
	formerly there was a public setter but no public getter.
	* src/nautilus-window-menus.c: 
	(file_menu_close_window_callback): Removed redundant assert.
	(file_menu_toggle_find_mode_callback): New function, toggles
	whether we're in search mode.
	(go_menu_reload_callback): New function, reloads.
	(nautilus_window_initialize_menus): Tweaked hint for "Close All Windows",
	added Find/Browse menu item; Changed "Up" to "Up a Level" to
	match bug 1653; added "Reload" to Go menu.
	(nautilus_window_update_find_menu_item): New function, sets the
	label of the Find/Browse menu item based on search mode's state.
	* src/nautilus-window-private.h: added #define for 
	NAUTILUS_MENU_PATH_RELOAD_ITEM; added prototype for 
	nautilus_window_update_find_menu_item.
	* src/nautilus-window-toolbars.c: Changed "Search" to "Find"
	to match menu item (and Arlo's design).
	* src/nautilus-window.h,
	* src/nautilus-window.c: 
	(navigation_bar_mode_changed_callback): Update Find menu item.
	(nautilus_window_get_search_mode): New function; formerly there
	was a public setter but no public getter.
	(nautilus_window_allow_reload): Update menu item sensitivity.

2000-08-22  Andy Hertzfeld  <andy@eazel.com>

	fixed bugs 643 and 605, by not accepting multiple or remote images
	as custom icons, and displaying informative error messages.
	
	* src/nautilus-sidebar.c: (receive_dropped_uri_list):
	added separate checks for multiple uris and remote files and displayed
	an appropriate message using nautilus_error_dialog.
	
	* libnautilus-extensions/nautilus-icon-factory.c:
	(load_specific_image):
	removed a fixme now that it's fixed
	
2000-08-22  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-background.c:
	(nautilus_background_image_fully_obscures):
	Added a missing paren to fix build breakage.

2000-08-22  Michael Engber  <engber@eazel.com>
	
	Fixed backgrounds to draw images scaled & centered
	in aa mode. (bug 2231)
	* libnautilus-extensions/nautilus-background.c:
	(nautilus_background_image_fully_obscures):

2000-08-22  Ali Abdin  <aliabdin@aucegypt.edu>

        * components/help/help-method.c:
        (transform_file): Ooops - there was a bug in this causing the
        index.html file not to load. It is now fixed (but is still broken
        until help renders with Mozilla)

        * components/help/converters/gnome-db2html2/toc-elements.c:
        (toc_title_end_element): Forgot a break in a case statement. This
        stops erroneous </A></H4> tags being inserted (Fixes Bug #2178)

        * components/help/converters/gnome-db2html2/gdb3html.h:
        * components/help/converters/gnome-db2html2/sect-elements.c:
        Added the 'Markup' tag - Fixes Bug #2228

        * components/help/converters/gnome-db2html2/gdb3html.[ch]:
        (start_element),
        (characters): Added a 'empty_element' to the Context struct.

        * components/help/converters/gnome-db2html2/sect-elements.[ch]:
        (sect_country_characters): New function - not used yet
        (sect_write_characters): Remove a 'hack' for the 'entry' tag
        (sect_entry_end_element): Print a &nbsp; if it is an empty element

2000-08-22  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_all_packages), 
	Print package name in front of install status
	
	(eazel_install_do_transaction_save_report),
	(eazel_install_monitor_rpm_propcess_pipe),
	Use transaction even when EAZEL_INSTALL_SLIM is defined. The lets
	the bootstrap installer save a transaction for the install of
	nautilus.
	
	(eazel_install_prune_packages),
	indention fix
	
	(eazel_install_fetch_rpm_dependencies), 
	When EAZEL_INSTALL_SLIM, ignore lib dep problems. This is a temp
	fix while the installer does not use SoftCat
	
	(print_package_list)
	Horrible mem mishandling
	
	* nautilus-installer/src/Makefile:
	* nautilus-installer/src/Makefile.am:
	Added -EAZEL_INSTALL_SLIM and -DNO_TEXT_BOX to the makefile
	
	* nautilus-installer/src/callbacks.c: (begin_install):
	After install, jump to next page
	
	* nautilus-installer/src/installer.c: (eazel_install_progress),
	, (eazel_install_dep_check), (check_system),
	(installer),
	Use the gtk_label instead of a gtk_text thingy.

	(install_failed_helper):
	Fixed output format
		
	* nautilus-installer/src/interface.c: (create_what_to_do_page):
	* nautilus-installer/src/main.c:
	Added the --force option, to force install.

2000-08-22  J Shane Culpepper  <pepper@eazel.com>

	 
	components/services/install/nautilus-view/nautilus-service-install-
	view.c: (nautilus_service_install_view_update_from_uri),
	(service_install_load_location_callback):
	 
	components/services/startup/nautilus-view/nautilus-service-startup-
	view.c: (generate_startup_form),
	(nautilus_service_startup_view_load_uri),
	(service_load_location_callback):
	* src/nautilus-first-time-druid.c: (druid_finished):

	Fixing the go_to_uri problem so that the first time druid works and
	eazel: redirects work more consistently.

2000-08-21  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-link.c:
	* libnautilus-extensions/nautilus-link.h:
	(nautilus_link_set_link_uri):
	New function to allow the setting of the LINK property
	tp be the URI passed in.
	
	* src/file-manager/fm-desktop-icon-view.c:
	(find_and_rename_trash_link):
	Change Trash link to use trash: uri insated of path to
	trash directory. This code checks and verifies that
	the trash link has this set properly on desktop launch.

Mon Aug 21 23:35:18 2000  George Lebl <jirka@5z.com>

	* components/html/ntl-web-browser.c (main): properly handle
	  gconf error, and init it to NULL first.  This will avoid
	  crashes on error.

	* libnautilus-extentions/Makefile.am,
	  libnautilus-extentions/nautilus-preferences-private.h,
	  libnautilus-extentions/nautilus-preferences.c:  Add a
	  nautilus_preferences_handle_error functions for use in
	  nautilus-preferences and user level manager to handle and reset
	  GConf exceptions.  The reason a new "private" header was added is
	  to preserve the gconf encapsulation outside libnautilus-extentions,
	  plus it's only useful there.

	* libnautilus-extentions/nautilus-preferences.c
	  (preferences_hash_node_add_callback)
	  (preferences_hash_node_remove_callback)
	  (preferences_gconf_callback) (preferences_initialize_if_needed)
	  (nautilus_preferences_set_boolean) (nautilus_preferences_get_boolean)
	  (nautilus_preferences_set_string_list)
	  (nautilus_preferences_get_string_list)
	  (nautilus_preferences_set_enum) (nautilus_preferences_get_enum)
	  (nautilus_preferences_set) (nautilus_preferences_get)
	  libnautilus-extensions/nautilus-user-level-manager.c
	  (user_level_manager_new) (user_level_manager_ensure_global_manager)
	  (nautilus_user_level_manager_set_user_level)
	  (nautilus_user_level_manager_get_user_level_as_string)
	  (nautilus_user_level_manager_set_default_value_if_needed)
	  (nautilus_user_level_manager_compare_preference_between_user_levels):
	  Handle GConf exceptions.  Try to revert to sane behaviour on
	  errors, such as using defaults.  Remove all the asserts for
	  conditions that arise from gconf errors.  Fixes bug 672

2000-08-21  Darin Adler  <darin@eazel.com>

	Finished task 571 (Make a Trash "virtual directory" with trash
	from all volumes). Some loose ends are already reported in bugs
	2146, 2243, and 2244.

	* libnautilus-extensions/Makefile.am:
	* libnautilus-extensions/nautilus-merged-directory.h:
	* libnautilus-extensions/nautilus-merged-directory.c:
	Moved all the guts of NautilusTrashDirectory that are solely
	about having a single directory that's a union of a bunch of
	real directories into a separate base class. Also finished the
	implementation, leaving only unimportant loose ends.
	
	* libnautilus-extensions/nautilus-trash-directory.h:
	* libnautilus-extensions/nautilus-trash-directory.c:
	(get_volume_vfs_uri_if_writable), (find_directory_callback),
	(add_volume), (remove_trash_volume), (remove_volume),
	(add_one_volume), (volume_mounted_callback),
	(volume_unmounted_callback), (nautilus_trash_directory_initialize),
	(remove_trash_volume_cover), (trash_destroy),
	(nautilus_trash_directory_initialize_class):
	Added the code to find the trash on all volumes.
	
	* libnautilus-extensions/nautilus-glib-extensions.h:
	* libnautilus-extensions/nautilus-glib-extensions.c:
	(flatten_hash_table_element),
	(nautilus_g_hash_table_safe_for_each): Added a new version of the
	hash table iterator that works even if the callback removes items
	from the hash table.
	
	* libnautilus-extensions/nautilus-scalable-font.c:
	(nautilus_scalable_font_largest_fitting_font_size): Added code to
	handle the case of an empty name; the old code worked with NULL,
	but not with "".
	
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_trash_state_changed_callback),
	(find_and_rename_trash_link), (create_or_rename_trash):
	* src/file-manager/nautilus-trash-monitor.c:
	(nautilus_trash_monitor_initialize):
	Changed to use the new "trash:" URL instead of locating one of
	the trash folders.

	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize_class),
	(fm_directory_all_selected_items_in_trash):
	* src/file-manager/fm-search-list-view.c:
	(fm_search_list_view_initialize_class):
	The "share_parent" optimization didn't work for the new trash.
	Instead of fixing it, I just removed it.
	
	* src/nautilus-window-manage-views.c: (compute_default_title),
	(nautilus_window_update_title): Made two changes to the default
	title: 1) Use "" instead of "Nautilus" when there's no title.
	We still use "Nautilus" in the window title, but not in the
	sidebar any more. 2) Use the scheme part of a URI if there's
	nothing after the colon. This works nicely for the trash.

	* libnautilus-extensions/nautilus-background-canvas-group.c:
	(nautilus_background_canvas_group_render): Removed some unneeded
	code and the FIXME that goes with it.
	
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_is_not_empty): Removed an overzealous assert.
	
2000-08-21  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/command-line/eazel-alt-install-corba.c:
	(eazel_install_progress_signal), (main):
	* components/services/install/command-line/eazel-package-query.c:
	(main):
	* components/services/install/command-line/eazel-revert.c:
	(eazel_install_progress_signal):
	* components/services/install/idl/trilobite-eazel-install.idl:
	* components/services/install/lib/eazel-install-corba-types.c:
	(corba_packagedatastruct_from_packagedata),
	(packagedata_from_corba_packagedatastruct):
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_revert_transaction_from_xmlstring),
	(eazel_install_revert_transaction_from_file):
	* components/services/install/lib/eazel-install-public.h:
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(download_all_packages), (eazel_uninstall_globber):
	* components/services/install/lib/eazel-install-tests.c:
	(dump_package_list):
	* components/services/install/lib/eazel-install-types.c:
	(categorydata_new), (packagedata_new),
	(packagedata_fill_from_rpm_header), (packagedata_destroy_foreach):
	* components/services/install/lib/eazel-install-types.h:
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(parse_package), (eazel_install_packagedata_to_xml),
	(osd_parse_softpkg):
	Renames the summary field to description (PackageData
	struc). Added a revert_transaction_from_file, which reads the xml
	file. Fixed some const issues.
	
	* nautilus-installer/src/callbacks.c:
	* nautilus-installer/src/installer.c: (eazel_install_progress),
	(eazel_install_preflight), (make_dirs), (check_system),
	(revert_nautilus_install), (installer):
	* nautilus-installer/src/interface.c: (create_what_to_do_page),
	(create_install_page), (create_finish_page):
	* nautilus-installer/src/link.sh:
	* nautilus-installer/src/main.c: (main):
	* nautilus-installer/src/prescript:
	Added GPL license to all the bootstrap installer code. Inserted a
	textbox into the installer, that
	displays current action/package description during download. It
	now also checks linux distro and for a helix install.
	
2000-08-21  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-link.c: 
	(nautilus_link_create):
	Added a link type argument to API to allow caller to 
	specify type of link.
	
	(nautilus_link_is_volume_link), (nautilus_link_is_home_link),
	(nautilus_link_is_trash_link):
	Renamed old constants to use _TAG at the end of old define.
	The name of th eprevious define is now used in the 
	enumeration of link types.
	
	* libnautilus-extensions/nautilus-link.h:
	Added argument to nautilus_link_create and created 
	an enum to define the types of links.
	
	* src/file-manager/fm-desktop-icon-view.c:
	(startup_create_mount_links), (volume_mounted_callback),
	(place_home_directory), (create_or_rename_trash),
	(get_sort_category):
	Changed callers of nautilus_link_create to use new argument.
	
	* src/file-manager/fm-properties-window.c:
	(get_and_ref_file_to_display):
	Changed callers of nautilus_link_create to use new argument.

2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog), (global_preferences_register):
	* libnautilus-extensions/nautilus-global-preferences.h:
	* src/file-manager/fm-directory-view.c:
	(smooth_graphics_mode_changed_callback),
	(fm_directory_view_initialize), (fm_directory_view_destroy):
	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-icon-view.c: (get_icon_images_callback),
	(fm_icon_view_smooth_graphics_mode_changed),
	(fm_icon_view_initialize_class),
	(fm_icon_view_update_smooth_graphics_mode),
	(create_icon_container):
	* src/nautilus-sidebar-title.c:
	(nautilus_sidebar_title_initialize),
	(nautilus_sidebar_title_destroy),
	(smooth_graphics_mode_changed_callback):

	Changed "anti_aliased_mode" to "smooth_graphics_mode" cause it
	much smoother.
	
2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-label.c:
	(nautilus_label_initialize), (nautilus_label_size_request),
	(render_buffer_pixbuf), (nautilus_label_set_text),
	(nautilus_label_set_font), (nautilus_label_set_text_color),
	(nautilus_label_set_text_alpha),
	(nautilus_label_set_drop_shadow_offset),
	(nautilus_label_get_drop_shadow_offset),
	(nautilus_label_set_drop_shadow_color):
	* libnautilus-extensions/nautilus-label.h:

	Add support for drop shadows.

	* src/nautilus-sidebar-title.c:
	(nautilus_sidebar_title_initialize):

	Make the offset between labels more pleasing to comrade arlo.
	
2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-scalable-font.c:
	(nautilus_scalable_font_measure_text_lines):

	Remove some dumbass assertions that were never meant to be there.
	
2000-08-21  John Sullivan  <sullivan@eazel.com>

	Finished bug 1750 ("Reveal in New Window" feature for 
	search results). Now choosing this menu item opens the
	right window, selects the right item, and scrolls as
	necessary to reveal the selected item.

	* libnautilus-extensions/nautilus-icon-container.h,
	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_reveal): New function, wrapper for
	existing private reveal_icon function that first finds the
	NautilusIcon for the given NautilusIconData.
	
	* libnautilus-extensions/nautilus-list.h,
	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_reveal_row): Renamed this function from
	reveal_row and made it public.
	(keyboard_row_reveal_timeout_callback): Accounted for
	name change
	(nautilus_list_get_first_selected_row): New function, returns
	index of first selected item.
	
	* src/file-manager/fm-icon-view.c: (fm_icon_view_set_selection),
	* src/file-manager/fm-list-view.c: (fm_list_view_set_selection):
	reveal first selected item. This has the (good, I think) side effect
	of scrolling as necessary to make sure at least one selected item
	is in view whenever the selection is explicitly set, which includes
	when creating a new folder and when switching views with an existing
	selection (but beware, switching from list view to icon view with a
	selection currently crashes due to bug 2222).

2000-08-21  Gene Z. Ragan  <gzr@eazel.com>

	Fixed bug 2137, renaming of trash causes a duplicate trash to 
	appear.
	If the user renames trash, it will get renamed back to Trash
	when the desktop is restarted.  When we have individual file reneaming
	permissions, this will never be an issue.

	Fixed bug 2144, renaming home link on desktop causes a duplicate 
	to appear.
	 
	* libnautilus-extensions/nautilus-link.c:
	* libnautilus-extensions/nautilus-link.h:
	(nautilus_link_is_home_link), (nautilus_link_is_trash_link):
	Two new functions to identify specific types of links
	
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize):
	Trash link is now created here,

	(find_home_link),
	(place_home_directory):
	Modified functions to handle situations where home link 
	has been renamed by the user.

	(find_and_rename_trash_link),
	(create_or_rename_trash):
	New functions to handle creation of trash link.
	
	* src/nautilus-desktop-window.c: 
	(nautilus_desktop_window_new):
	Moved creation of trash link to FMDesktopIconView

2000-08-21  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_get_current_icon_factory), (icon_theme_changed_callback):
	made the icon factory ask the current theme for the icon directory
	to use, so themes can easily use each other's icons without copying
	them.
	
2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-buffered-widget.c:
	(nautilus_buffered_widget_realize):
	Add a evil hack to keep track of background changes.  I have a
	better fix for this that I will commit soon.
	
	* src/nautilus-sidebar-title.c:
	(nautilus_sidebar_title_initialize),
	(nautilus_sidebar_title_destroy),
	(nautilus_sidebar_title_select_text_color),
	(nautilus_sidebar_title_theme_changed), (update_icon),
	(update_font), (update_title), (update_more_info), (update_all),
	(nautilus_sidebar_title_hit_test_icon),
	(sidebar_create_smooth_components_if_needed),
	(sidebar_create_normal_components_if_needed),
	(anti_aliased_mode_changed_callback):
	* src/nautilus-sidebar-title.h:
	* src/nautilus-sidebar.c: (background_appearance_changed_callback):

	Add support for smoother graphics.  Use new NautilusLabel and
	NautilusImage widgets to render alpha composited pixbufs and anti
	aliases text.

	The old non-smooth widgets are still supported and should continue
	to work as expected whenever the smooth graphics preference is
	toggled.

2000-08-21  J Shane Culpepper  <pepper@eazel.com>

	* components/services/Makefile.am:
	* components/services/install/nautilus-view/Makefile.am:
	* components/services/login/nautilus-view/Makefile.am:
	* components/services/nautilus-dependant-shared/.cvsignore:
	* components/services/nautilus-dependant-shared/Makefile.am:
	* components/services/nautilus-dependant-shared/icons/.cvsignore:
	* components/services/nautilus-dependant-shared/icons/Makefile.am:
	* components/services/nautilus-dependant-shared/shared-service-utilit
	ies.c:
	* components/services/nautilus-dependant-shared/shared-service-utilit
	ies.h:
	* components/services/nautilus-dependant-shared/shared-service-widget
	s.c:
	* components/services/nautilus-dependant-shared/shared-service-widget
	s.h:
	* components/services/nautilus-dependent-shared/.cvsignore:
	* components/services/nautilus-dependent-shared/Makefile.am:
	* components/services/nautilus-dependent-shared/icons/.cvsignore:
	* components/services/nautilus-dependent-shared/icons/Makefile.am:
	* components/services/nautilus-dependent-shared/shared-service-utilit
	ies.c: (go_to_uri), (is_location):
	* components/services/nautilus-dependent-shared/shared-service-utilit
	ies.h:
	* components/services/nautilus-dependent-shared/shared-service-widget
	s.c: (create_image_widget), (create_services_title_widget),
	(create_services_header_widget), (set_widget_foreground_color),
	(show_feedback):
	* components/services/nautilus-dependent-shared/shared-service-widget
	s.h:
	* components/services/startup/nautilus-view/Makefile.am:
	* components/services/summary/nautilus-view/Makefile.am:
	* configure.in:

	Moving nautilus-dependant-shared to nautilus-dependent-shared.  The
	poor spelling was too much.
	

2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-scalable-font.c:
	(parse_font_description_file), (font_family_new),
	(font_family_table_add_fonts), (font_family_string_map_new),
	(nautilus_scalable_font_new),
	(nautilus_scalable_font_largest_fitting_font_size),
	(nautilus_scalable_font_draw_text_lines),
	(font_family_table_get_family_list), (font_family_table_free),
	(nautilus_scalable_font_query_font),
	(default_font_at_exit_destructor),
	(font_family_table_at_exit_destructor),
	(font_family_string_map_at_exit_destructor),
	(initialize_global_stuff_if_needed):

	Add a simple font family map.  The idea is to make it very simple
	to specifiy font family names without having to know what the
	exact name of the font is.
	
2000-08-21  John Sullivan  <sullivan@eazel.com>

	After talking to Darin, split up 
	nautilus_file_get_parent_uri into a _for_display
	version and the standard "pure" one. We had callers
	that wanted each type.

	* libnautilus-extensions/nautilus-file.h,
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_parent_uri_for_display):
	New function, formats the result of get_parent_uri
	for user-ready display.
	(nautilus_file_get_parent_uri): Took out the format
	code from this more basic function.
	(nautilus_file_compare_by_directory_name): Use the
	for_display version here.
	(nautilus_file_get_string_attribute): Use the
	for_display version here.

2000-08-21  John Sullivan  <sullivan@eazel.com>

	Fixed bug 1456 ("file://" shouldn't appear in locations
	in Property window)

	Robert Brady <rwb197@zepler.org> submitted a patch for this
	bug (thanks Robert!). The patch worked, but I ended up fixing 
	it a somewhat different way when I realized that we had two 
	similar routines that needed to be merged.

	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_directory_name): Removed this function;
	callers should use get_parent_uri instead.
	(nautilus_file_get_parent_uri): Use 
	nautilus_format_uri_for_display before returning result,
	since this call is intended for display purposes; beef up
	comment to explain.
	(nautilus_file_compare_by_directory_name): Use _get_parent_uri
	instaed of _get_directory_name
	(nautilus_file_get_string_attribute): Eliminate "directory"
	string attribute.
	* src/file-manager/fm-search-list-view.c:
	(real_get_column_specification): Use "parent_uri" instead of
	"directory" name. The only visible effect this has is to remove
	the trailing slashes from the "Directory" column. Also, changed
	title of column from "Directory" to "Where" to match properties
	window.

2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-string-list.c:
	(nautilus_string_list_new), (nautilus_string_list_new_from_string),
	(nautilus_string_list_new_from_string_list),
	(nautilus_string_list_new_from_tokens),
	(nautilus_string_list_contains), (nautilus_string_list_equals),
	(nautilus_string_list_get_index_for_string),
	(nautilus_string_list_sort),
	(nautilus_string_list_remove_duplicates), (str_is_equal),
	(nautilus_self_check_string_list):
	* libnautilus-extensions/nautilus-string-list.h:

	Add support for case insensitive string lists.

	* libnautilus-extensions/nautilus-string-map.c,
	* libnautilus-extensions/nautilus-string-map.c:
	(nautilus_string_map_add), (map_entry_new),
	(map_entry_list_lookup_mapped_string), (str_is_equal),
	(nautilus_self_check_string_map):

	Add support for case insensitive string maps.

	* libnautilus-extensions/nautilus-string.c:
	(nautilus_istr_compare):

	Add missing function that apparentlt was missing and unnoticed. 
	
	* libnautilus-extensions/nautilus-font-picker.c:
	(font_picker_update_weight_picker),
	(font_picker_update_slant_picker),
	(font_picker_update_set_width_picker):
	* libnautilus-extensions/nautilus-preference.c:
	(preference_allocate_type_info):
	* libnautilus-extensions/nautilus-preferences-item.c:
	(preferences_item_create_font_family),
	(preferences_item_create_theme):
	* libnautilus-extensions/nautilus-scalable-font.c:
	(parse_font_description_file), (font_family_table_add_fonts),
	(nautilus_scalable_font_largest_fitting_font_size),
	(font_family_table_get_family_list),
	(nautilus_scalable_font_query_font):
	* libnautilus-extensions/nautilus-string-picker.c:
	(nautilus_string_picker_initialize),
	(nautilus_string_picker_get_string_list),
	(nautilus_string_picker_insert_string):
	* libnautilus-extensions/nautilus-user-level-manager.c:
	(user_level_manager_new),
	(nautilus_user_level_manager_get_user_level_names):
	* src/file-manager/fm-directory-view.c:
	(real_get_emblem_names_to_exclude):
	* src/nautilus-application.c:
	(nautilus_application_check_user_directories):
	* test/test-nautilus-image.c: (create_font_picker_frame):
	* test/test-nautilus-label.c: (create_font_picker_frame):
	* test/test-nautilus-widgets.c: (test_string_picker):

	Update for case insensitive support changes in string list api.

2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>
	 
	* libnautilus-extensions/nautilus-directory.c:
	Check for NULL before dereferencing 'directories'.

	I was playing around with test (moving their order of execution).
	directories was null at exit time, and an assertion was triggered
	inside the GHashTable.

	(nautilus_directory_number_outstanding),
	(nautilus_self_check_directory): Fix a typo that was making the
	checks fail.
	
2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.c:
	(nautilus_gdk_pixbuf_render_to_pixbuf_tiled), Fix from andy to
	properly deal with pixbufs that have alpha channels.
	(nautilus_gdk_pixbuf_fill_rectangle_with_color), New function to
	fill an area of a pixbuf with a given color.
	(nautilus_gdk_pixbuf_render_to_drawable),
	(nautilus_gdk_pixbuf_render_to_pixbuf),
	(nautilus_gdk_pixbuf_render_to_pixbuf_alpha), New functions to
	handle pixbuf rendering to various destinations using the same
	api.  Also, these do clipping if needed to prevent overflow.
	(nautilus_gdk_pixbuf_save_to_file),  Make this function public.
	It used to live in the icon factory.
	(nautilus_gdk_pixbuf_ref_if_not_null),
	(nautilus_gdk_pixbuf_unref_if_not_null): New functions to
	make pixbuf ref/unref code more readably by dealing with NULL
	pixbufs.
	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.h:
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_make_thumbnails):
	Make the save_pixbuf function public and move it to the gdk_pixbuf
	place.
		
2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-gtk-extensions.c:
	(nautilus_gtk_widget_set_background_color),
	(nautilus_gtk_widget_set_foreground_color),
	(nautilus_gtk_widget_find_windowed_ancestor):
	* libnautilus-extensions/nautilus-gtk-extensions.h:

	New function to find a windowed ancestor for a GtkWidget.
	New functions to change a widget's background and foreground.
	
2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-gdk-extensions.c:
	(nautilus_gdk_font_get_bold), (nautilus_gdk_create_copy_area_gc):
	* libnautilus-extensions/nautilus-gdk-extensions.h:

	New utility function to create copy area gcs.  

	New macros to pack and unpack RGBA values.
	
2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-string-picker.c:
	(nautilus_string_picker_insert_string),
	(nautilus_string_picker_contains):
	* libnautilus-extensions/nautilus-string-picker.h:

	New function to test whether the string picker contains a string.
	Also add some more documentation.
	
2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-glib-extensions.h:

	Add two dumb macros to make macro declaration easier.

2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-string-list.c:
	(nautilus_string_list_new_from_tokens),
	(nautilus_string_list_contains), (nautilus_string_list_sort),
	(nautilus_string_list_remove_duplicates),
	(nautilus_string_list_get_longest_string),
	(nautilus_string_list_get_longest_string_length),
	(nautilus_self_check_string_list):
	* libnautilus-extensions/nautilus-string-list.h:

	New functions to find the longest string and longest string length.
	
	Also, some function pointers cast cleanup.
	
2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>

	Tasks: 1612, 1274, 1511 and 1588.
	
	* libnautilus-extensions/nautilus-scalable-font.c:
	* libnautilus-extensions/nautilus-scalable-font.h:

	New GtkObject subclass that provdes a simple interface to raph's
	librsvg FreeType2 bases anti aliased text rendering.

	* libnautilus-extensions/nautilus-font-picker.c:
	* libnautilus-extensions/nautilus-font-picker.h:

	New font picker class.  I will soon use it in the preferences
	dialog instead of the current one.

	* libnautilus-extensions/nautilus-buffered-widget.c:
	* libnautilus-extensions/nautilus-buffered-widget.h:

	New virtual widget class that encapsulates the details of finding
	a suitable background for compositing pixbufs.

	* libnautilus-extensions/nautilus-image.c:
	* libnautilus-extensions/nautilus-image.h:

	Rewritten NautilusImage class.  Took out all the label stuff,
	which lives in its own class.  Now subclassed from
	NautilusBufferedWidget so that background the image gets
	composited on is always correct and groks NautilusBackground.

	* libnautilus-extensions/nautilus-label.c:
	* libnautilus-extensions/nautilus-label.h:

	New NautilusLabel widget class.  A label widget that is capable of
	displaying anti aliased text composited over a complex background.

	The background can be installed as NautilusBackground on a
	NautilusLabel widget or any of its ancestors.  The best background
	will automatically be found and used by the widget.

	* services/nautilus-dependant-shared/shared-service-widgets.c,
	* services/nautilus-dependant-shared/shared-service-widgets.h,
	* services/startup/nautilus-view/nautilus-service-startup-view.c:

	Update for changes in the NautilusImage api.  Unfortunately, these
	components are slightly broken now cause of the NautilusImage
	changes.  I will fix them shortly.

	* libnautilus-extensions/nautilus-string-map.c:
	* libnautilus-extensions/nautilus-string-map.h:

	New simple class to map an arbitrary number of strings to a single
	string.

	* libnautilus-extensions/nautilus-lib-self-check-functions.h:
	Add tests for the new string map class.
	
	* libnautilus-extensions/Makefile.am:

	Build the new widgets.  Also add some depedencies on the static
	libraries we link into this beast.  This way,
	libnautilus-extensions will rebuild of one if its dependency
	static libs is touched.

	* test/.cvsignore,
	* test/Makefile.am,
	* test/test-nautilus-font-picker.c,
	* test/test-nautilus-font.c,
	* test/test-nautilus-image.c,
	* test/test-nautilus-label.c:

	Update test programs for new widgets.
	
2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-background.c:
	(nautilus_widget_has_attached_background):
	* libnautilus-extensions/nautilus-background.h:

	New function to test whether a GtkWidget has an attatched
	NautilusBackground.  This is needed because of the
	nautilus_get_widget_background will implicitly attatch a
	background.  This creates serious problems for widget hierarchies
	where the only interesting background is that of an ancestor.
	
2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>

	* librsvg/test-ft.c: (main):

	Update for changes in librsvg glyph_xy return values.
	
2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-string.c:
	(nautilus_istr_is_equal), (nautilus_self_check_string):
	* libnautilus-extensions/nautilus-string.h:
	Add a case insensitive version of nautilus_str_is_equal.

2000-08-21  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-string.c:
	(nautilus_str_count_characters), (nautilus_self_check_string):
	* libnautilus-extensions/nautilus-string.h:
	New function to count the occurance of a character in a string.

2000-08-20  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-first-time-druid.c: (set_up_update_feedback_page),
	(next_update_page_callback), (nautilus_first_time_druid_show),
	(download_callback), (initiate_file_download):
	work on required task 1826; made the first time druid load the nautilus update file
	asynchronously, and then expand it into a directory at ~/.nautilus.  There's still
	a lot of refinement left to do, but the basic functionality is there now.
	
Sat Aug 19 23:43:23 2000  George Lebl <jirka@5z.com>

	* librsvg/rsvg.c (rsvg_ctx_free_helper) (rsvg_entity_decl):
	  use xml memory allocation/deallocation routines for strings
	  which are allocated/deallocated inside libxml to make glib
	  memory checking not crash

	* libnautilus-extentions/nautilus-gnome-extentions.[ch]:
	  add a function nautilus_gnome_stock_set_icon_or_register which
	  does the GnomeStock voodoo for setting stock toolbar icons to
	  arbitrary files

	* src/nautilus-window-toolbars.c (set_up_button):  Use the
	  nautilus_gnome_stock_set_icon_or_register function as per Darin's
	  FIXME which thus got removed.

2000-08-19  Maciej Stachowiak  <mjs@eazel.com>

	* components/tree/nautilus-tree-model.c: (report_node_added,
	report_node_changed): Create the NautilusDirectory for a node when
	and if we discover it is a directory.
	* components/tree/nautilus-tree-node.c:
	(nautilus_tree_node_destroy, nautilus_tree_node_new): Don't
	automatically create a NautilusDirectory; unref the
	NautilusDirectory only if present.
	* components/tree/nautilus-tree-view.c: Remove gratuitous include
	of nautilus-directory.h

2000-08-19  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar-tabs.c: (draw_or_layout_all_tabs):
	fixed a bug in the themed sidebar tabs where the layout and drawing
	code paths would get out of whack, resulting in messed up tab layout
	
2000-08-19  Mathieu Lacage  <mathieu@eazel.com>

	completes task 1567. it shows a bug in the way the history
	view displays the current location given the history. to be 
	fixed soon.
	
	* components/history/nautilus-history-view.c:
	(history_load_location), (history_title_changed), (make_obj):
	add title_changed_callback, connect it to changed_title signal.
	make it call load_location.
	Hack evil stuff in load_location: a hand-made lock because the 
	function calls some gtk calls which seem to make the main loop 
	run at least once. This allowed the main loop to use the events 
	in the event queue and it happened that the title_changed signal
	is usually emited more than once so it called again the 
	non-reentrant signal callback... BAD THINGS HAPPENED.
	
	
	* libnautilus/nautilus-view-component.idl: add changed_title method 
	to Nautilus::View.
	* libnautilus/nautilus-view.c: (impl_Nautilus_View_title_changed),
	(nautilus_view_initialize_class): implement the new idl function and
	add a signal for it.
	* libnautilus/nautilus-view.h: add the new signal class method.

	
	* src/nautilus-view-frame-bonobo-control.c: add the title_changed 
	field to the vtable.
	* src/nautilus-view-frame-nautilus-view.c: (title_changed): idem.
	* src/nautilus-view-frame-private.h: idem.
	* src/nautilus-view-frame.c: (nautilus_view_frame_title_changed):
	add api function to emit the signal and make the actual corba call.
	* src/nautilus-view-frame.h: add function prototype.
	* src/nautilus-window-manage-views.c: add calls to 
	(nautilus_window_update_title): to notify view frames of changed 
	titles.

2000-08-18  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-volume-monitor.c:
	* libnautilus-extensions/nautilus-volume-monitor.h:
	(nautilus_volume_monitor_initialize), (find_volumes):
	Removed public call to nautilus_volume_monitor_find_volumes
	and replaced with find_volumes which is called internally
	when class is initialized.
		
	* src/file-manager/fm-desktop-icon-view.c:
	(startup_create_mount_links), (fm_desktop_icon_view_initialize),
	(volume_mounted_callback):
	Create a callback that is called for each mounted volume
	to create mounted volume icons when desktop is created.
	
	* icons/trash-empty.png:
	* icons/trash-full.png:
	Added new Trash icons to try and make text appear centered.
	
Fri Aug 18 21:22:17 2000  George Lebl <jirka@5z.com>

	* components/hardware/nautilus-hardware-view.c
	  (read_proc_info) (extract_info) (get_CPU_description)
	  (get_RAM_description):
	  Use g_strdup instead of strdup
	  (get_CPU_description):
	  Free allocated data when returning due to an error

	* components/music/nautilus-music-view.c
	  (nautilus_music_view_update_from_uri):
	  Initialize clist_entry in a loop, use g_strdup_printf instead
	  of malloc and sprintf, and properly free allocated data after use

	* components/services/inventory/lib/eazel-inventory-shared.c
	  (read_proc_info) 
	  components/services/inventory/nautilus-view/nautilus-inventory-view.c
	  (gather_config_button_cb)
	  libnautilus-extensions/nautilus-string.c
	  (nautilus_str_middle_truncate)
	  librsvg/rsvg.c (rsvg_ctx_free):
	  Use g_strdup instead of strdup and g_free instead of free to
	  prevent crashes with glib compiled with --enable-mem-check 
	
	* src/file-manager/Makefile.am,
	  src/file-manager/nautilus-indexing-info.[ch],
	  src/file-manager/fm-search-list-view.c (indexing_info_callback)
	  (real_merge_menus):
	  Bug #1369: Add a dialog for indexing info to the file menu.  The
	  dialog shows the last time the indexing was done and allows to
	  update the indexes.  Only shown on the file search result dialog

2000-08-18  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-volume-monitor.c:
	(nautilus_volume_monitor_initialize),
	(nautilus_volume_monitor_destroy), (mount_volume_is_mounted),
	(mount_volume_cdrom_set_state), (mount_volume_floppy_set_state),
	(mount_volume_ext2_set_state), (mount_volume_set_state),
	(volume_set_state_empty), (mount_volume_mount),
	(mount_volume_activate_cdrom), (mount_volume_activate_floppy),
	(mount_volume_activate_ext2), (mount_volume_activate),
	(eject_cdrom), (mount_volume_deactivate),
	(mount_volume_do_nothing), (mount_volume_check_change),
	(mount_volumes_update_is_mounted), (mount_volumes_check_status),
	(mount_volume_floppy_add), (mount_volume_ext2_add),
	(mount_volume_iso9660_add), (mount_volume_add_aliases),
	(add_mount_volume), (mntent_is_removable_fs),
	(nautilus_volume_monitor_find_volumes),
	(nautilus_volume_monitor_each_volume),
	(nautilus_volume_monitor_each_mounted_volume),
	(nautilus_volume_monitor_mount_unmount_removable),
	(free_volume_info), (get_iso9660_volume_name),
	(get_ext2_volume_name), (get_floppy_volume_name):
	* libnautilus-extensions/nautilus-volume-monitor.h:
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize), (volume_mounted_callback),
	(volume_unmounted_callback):

	More naming fixes.  Remove info from NautilusDeviceInfo and renamed it
	NautilusVolume.  Removed device naming and use volume instead.  Named other
	structs with Nautilus prepended.
	
2000-08-18  John Sullivan  <sullivan@eazel.com>

	More work on bug 1750 ("Reveal in New Window" feature for 
	search results). Now it opens a new window with the right
	item selected. The only remaining work is to make the new
	window scroll as necessary to reveal the item.

	Along the way, fixed an unreported bug where the selection
	wasn't being maintained on view switches.

	* libnautilus-extensions/nautilus-gtk-extensions.h:
	added #define for nautilus_gtk_marshal_NONE__STRING_POINTER.
	
	* libnautilus/nautilus-view-component.idl:
	Added open_in_new_window_and_select call.
	
	* libnautilus/nautilus-view.h,
	* libnautilus/nautilus-view.c:
	(nautilus_view_open_in_new_window_and_select):
	* src/nautilus-view-frame-corba.c:
	(impl_Nautilus_ViewFrame_open_location_in_new_window),
	(impl_Nautilus_ViewFrame_open_in_new_window_and_select):
	* src/nautilus-view-frame-private.h:
	* src/nautilus-view-frame.c:
	(nautilus_view_frame_initialize_class),
	(nautilus_view_frame_open_in_new_window_and_select):
	* src/nautilus-view-frame.h: Wired together the various
	pieces to get open_in_new_window_and_select across CORBA
	and into the view frame.

	* src/nautilus-window.h: added pending_selection field
	* src/nautilus-window-manage-views.h: added
	nautilus_window_open_in_new_window_and_select
	* src/nautilus-window.c: 
	(nautilus_window_open_in_new_window_and_select_callback),
	(nautilus_window_connect_view): Wiring to connect view
	frame signals to window.
	(nautilus_window_destroy): free pending_selection
	* src/nautilus-window-manage-views.c:
	(nautilus_window_update_view): Changed call from 
	nautilus_window_report_selection_changed to
	nautilus_view_frame_selection_changed. This was the source
	of the selection-not-preserved-across-view-changes bug.
	Darin came up with this fix.
	(open_location): Added a new_selection parameter to this
	bottleneck function. It is set as the pending_selection
	in the window.
	(nautilus_window_open_location),
	(nautilus_window_open_location_in_new_window),
	(nautilus_window_report_location_change): Update existing
	callers of open_location to pass NULL for new_selection parameter.
	(nautilus_window_open_in_new_window_and_select): New function,
	calls open_location with a selection (among other parameters).
	(nautilus_window_update_state): When loading a new location, set
	the location to pending_selection rather than NULL (and clear
	pending_selection later so it doesn't unnecessarily hang around).

	* src/file-manager/fm-search-list-view.c:
	(reveal_selected_items_callback): 
	Call open_in_new_window_and_select instead of just 
	open_location_in_new_window

2000-08-18  Michael Engber  <engber@eazel.com>

	Final cut at syncing our desktop background with GNOME's (bug 1047)
	Now we are notified when the background capplet makes a change
	to the desktop. There are still some problems, e.g. we don't get
	notified when the "try" button is hit. A separate bug has been
	filed about the remaining issues.

	* libnautilus-extensions/nautilus-directory-background.c:
	(nautilus_directory_background_set_desktop),
	(call_settings_changed),
	(nautilus_directory_background_event_filter),
	(desktop_background_destroyed_callback),
	(nautilus_directory_background_receive_root_window_changes),
	(background_changed_callback), (saved_settings_changed_callback),
	(nautilus_directory_background_theme_changed),
	(background_reset_callback), (background_destroyed_callback),
	(nautilus_connect_background_to_directory_metadata):

2000-08-18  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-link.c:
	* libnautilus-extensions/nautilus-link.h:
	(nautilus_link_is_volume_link):
	New function.  Identifies if link is a volume link.
	
	* libnautilus-extensions/nautilus-volume-monitor.c:
	* libnautilus-extensions/nautilus-volume-monitor.h:
	(nautilus_volume_monitor_initialize_class),
	(mount_device_is_mounted), (mount_device_cdrom_set_state),
	(mount_device_floppy_set_state), (mount_device_ext2_set_state),
	(mount_device_set_state), (device_set_state_empty),
	(mount_device_mount), (mount_device_activate_cdrom),
	(mount_device_activate_floppy), (mount_device_activate_ext2),
	(mount_device_activate), (eject_cdrom), (mount_device_deactivate),
	(mount_device_do_nothing), (mount_device_check_change),
	(mount_devices_update_is_mounted), (mount_device_floppy_add),
	(mount_device_ext2_add), (mount_device_iso9660_add),
	(mount_device_add_aliases), (add_mount_device),
	(nautilus_volume_monitor_each_device),
	(nautilus_volume_monitor_each_mounted_device),
	(nautilus_volume_monitor_mount_unmount_removable),
	(free_device_info), (get_iso9660_volume_name),
	(get_ext2_volume_name), (get_floppy_volume_name):
	Renamed DeviceInfo to NautilusDeviceInfo.
	Removed all code that handled links and moved to 
	FMDesktopIconView.  Fixed creation of volume mounted signal
	to have proper signature,
			
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize), (volume_mounted_callback),
	(volume_unmounted_callback), (remove_old_mount_links):
	Added signal handlers for mount and unmount signals emitted
	by NautilusVolumeMonitor.  These handlers create and remove
	mount links.

2000-08-18  Mathieu Lacage  <mathieu@eazel.com>


	Cleans up the HistoryFrame : remove the History object
	and replaces it with HistoryList.
	* components/history/nautilus-history-view.c: (get_history_list),
	(history_load_location):
	* libnautilus/nautilus-view-component.idl:
	* src/nautilus-history-frame.c:
	* src/nautilus-view-frame.c:
	(nautilus_view_frame_get_history_list):
	* src/nautilus-view-frame.h:
	* src/nautilus-window.c:
	(nautilus_window_get_history_list_callback):

2000-08-18  John Sullivan  <sullivan@eazel.com>

	More menu tweaking, including switching over to use
	Bonobo "menu placeholders" for menu-merging components.

	Fixed bug 1859 (Need improved way to position added menu items)

	* libnautilus/nautilus-bonobo-ui.h:
	Removed all menu item paths except those we expect to
	be merged over (like "Select All"). Added new placeholder
	paths for components to use when merging instead of relying
	on the positions of specific menu items. Commented the intended
	use of each placeholder.

	* components/loser/content/nautilus-content-loser.c:
	(loser_merge_bonobo_items_callback):
	* components/loser/sidebar/nautilus-sidebar-loser.c:
	(loser_merge_bonobo_items_callback):
	* components/sample/nautilus-sample-content-view.c:
	(sample_merge_bonobo_items_callback):
	Updated menu-merging code to use placeholder paths.
	
	* src/file-manager/fm-directory-view.c:
	(reset_bonobo_trash_delete_menu), (reset_bonobo_open_with_menu),
	(fm_directory_view_real_merge_menus): Updated menu-merging code
	to use placeholder paths or to base positions off other
	directory view menu items. Added separator before Empty Trash.
	* src/file-manager/fm-directory-view.h: Updated #defines for
	directory view menu paths (some used by subclasses)
	
	* src/file-manager/fm-icon-view.c: (compute_menu_item_info):
	Change "Restore Icon to Unstretched Size" to "Restore Icon's
	Original Size" to match Arlo's wording (and similarly for
	the plural case)
	
	* src/nautilus-window-menus.c: 
	Moved in the menu paths that were moved out of nautilus-bonobo-ui.h
	(append_placeholder): New function, wrapper for 
	bonobo_ui_handler_menu_new_placeholder
	(nautilus_window_remove_bookmarks_menu_items),
	(refresh_dynamic_bookmarks), (append_static_bookmarks): 
	Simplified logic of rebuilding bookmarks menu by
	using placeholder instead of details->last_static_bookmark_path.
	(nautilus_window_initialize_menus): Insert the placeholders defined
	in nautilus-bonobo-ui.h; add Control-/ for "About Nautilus" per Arlo.
	(nautilus_window_remove_go_menu_items),
	(refresh_go_menu): Use placeholder to position History menu items.
	* src/nautilus-window-private.h: Removed last_static_bookmark_path;
	moved #defines for back/forward/up menu paths here.
	* src/nautilus-window.c: (nautilus_window_destroy): Removed
	last_static_bookmark_path.

	Fixed bug 2166 (Clearing name field in Properties window doesn't work right)

	* src/file-manager/fm-properties-window.c:
	(name_field_update_to_match_file): Changed a char * to const char *
	for clarity.
	(name_field_restore_original_name): New function, restores the original
	contents of the name field, no questions asked.
	(name_field_done_editing): When handling empty-string case, use
	restore_original_name instead of update_to_match_file, which was too
	clever for this case.

2000-08-18  Darin Adler  <darin@eazel.com>

	* src/nautilus-window-menus.c: (help_menu_about_nautilus_callback):
	* libnautilus-extensions/nautilus-program-chooser.c:
	(nautilus_program_chooser_new),
	(nautilus_program_chooser_show_no_choices_message):
	Fixed bug 2210 (GNOME is referred to as Gnome in the about
	dialog).  It was in one other place too.
	
	* libnautilus/nautilus-view-component.idl:
	Fixed some comments.

	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory-async.c:
	(dequeue_pending_idle_callback):
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_emit_files_changed),
	(nautilus_directory_emit_change_signals_deep),
	(nautilus_directory_emit_metadata_changed),
	(call_files_changed_free_list),
	(call_files_changed_unref_free_list):
	* libnautilus-extensions/nautilus-file.c: (nautilus_file_changed):
	Separated out the call so you can emit a files_changed without
	also emitting a changed signal on each file.
	
	
	* libnautilus-extensions/nautilus-trash-directory.h:
	* libnautilus-extensions/nautilus-trash-directory.c:
	(trash_callback_remove_directory), (directory_ready_callback),
	(forward_files_added_cover), (forward_files_changed_cover),
	(nautilus_trash_directory_add_real_directory),
	(trash_callback_remove_directory_cover),
	(nautilus_trash_directory_remove_real_directory),
	(remove_all_real_directories),
	(fm_desktop_icon_view_discover_trash_callback),
	(add_one_writable_device), (get_trashable_volume_uris),
	(nautilus_trash_monitor_async_get_trash_directories):
	More trash work. A bunch is commented out. I'm doing this *so*
	slowly, but I need to check in at this point for Gene's sake.
	
	* libnautilus-extensions/nautilus-volume-monitor.h:
	* libnautilus-extensions/nautilus-volume-monitor.c:
	(nautilus_volume_monitor_initialize_class),
	(mount_device_activate), (mount_device_deactivate):
	Changed the signals to be both more useful and easier to use.
	
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize):
	* src/file-manager/nautilus-trash-monitor.c:
	Moved 1/2-written trash code out of here.

	* HACKING: Spell checking.
	
2000-08-18  John Sullivan  <sullivan@eazel.com>

	* configure.in: Added pt_BR to ALL_LINGUAS

2000-08-17  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-caption.c:
	(nautilus_caption_initialize_class), (nautilus_caption_initialize),
	(nautilus_font_picker_show_all), (update_title),
	(nautilus_caption_set_show_title), (nautilus_caption_set_child):
	* libnautilus-extensions/nautilus-caption.h:
	New function to allow hiding the title.
	
2000-08-17  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-string-picker.c:
	(nautilus_string_picker_initialize),
	(nautilus_string_picker_destroy),
	(nautilus_string_picker_set_string_list),
	(nautilus_string_picker_get_string_list),
	(nautilus_string_picker_get_selected_string),
	(nautilus_string_picker_set_selected_string),
	(nautilus_string_picker_insert_string):
	* libnautilus-extensions/nautilus-string-picker.h:
	New function to insert a string without having to access the
	string list first.  Also renamed some poorly named functions.

	* libnautilus-extensions/nautilus-preferences-item.c:
	(preferences_item_create_font_family),
	(preferences_item_create_theme), (text_item_changed_callback):
	Update for string picker api changes.
	
	* test/test-nautilus-widgets.c: (test_string_picker),
	(string_picker_changed_callback):
	Update for string picker api changes.

2000-08-17  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-string-list.c:
	(nautilus_string_list_new_from_string_list),
	(nautilus_string_list_assign_from_string_list),
	(nautilus_string_list_free), (nautilus_string_list_equals),
	(nautilus_string_list_get_index_for_string), (compare_strings),
	(nautilus_string_list_sort),
	(nautilus_string_list_remove_duplicates),
	(nautilus_string_list_for_each), (nautilus_self_check_string_list):
	* libnautilus-extensions/nautilus-string-list.h:

	New function to assign one string list to another.
	New function to sort the string list.
	New function to remove duplicate strings.
	Also added tests for all these.
	
2000-08-17  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-string.c:
	(nautilus_str_is_equal), (nautilus_self_check_string):
	* libnautilus-extensions/nautilus-string.h:
	New function and tests.
	
2000-08-17  John Sullivan  <sullivan@eazel.com>

	Finished task 1991 (Need "Create Link" menu item) and did
	a little of bug 1653 (refined menu layout)

	* src/file-manager/fm-directory-view.h:
	#define FM_DIRECTORY_VIEW_MENU_PATH_CREATE_LINK
	* src/file-manager/fm-directory-view.c: 
	(fm_directory_view_create_links_for_files): New function,
	creates symbolic links in this directory for a set of files.
	(create_link_callback): New function used by both bonobo and
	context menu "Create Link" items. Calls _create_links_for_files
	on selected files.
	(compute_menu_item_info): Compute title & sensitivity of 
	link-creating menu item.
	(fm_directory_view_real_create_selection_context_menu_items):
	add Create Link to context menu.
	(reset_bonobo_trash_delete_menu): Spacing change only.
	(fm_directory_view_real_merge_menus): Gave Control-N to
	New Folder and Control-I (weird) to Show Properties. Added
	Create Link to bonobo menu.
	(fm_directory_view_real_update_menus): Update Create Link item
	when selection changes.
	(fm_directory_view_get_context_menu_index): Updated to match
	current set of items.
	
	* src/nautilus-window-menus.c: (nautilus_window_initialize_menus):
	Took Control-N away from "New Window" so "New Folder" could have it;
	gave "Close All Windows" Control-Shift-W

2000-08-17  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-dnd.c:
	(receive_dropped_keyword):
	implemented task 2078, we need a better drag and drop-based way to
	delete emblems, by adding an "erase emblems" emblem and special-casing
	it to erase the emblems.
	
	* data/emblems/Makefile.am:
	* data/emblems/erase.png:
	added Susan's erase emblem image
	
2000-08-17  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-image.c: (ensure_buffer_size),
	(nautilus_gdk_pixbuf_render_to_drawable):
	made it respect the alpha channel for ordinary images by making
	the buffer use an alpha channel and rending with an alpha channel if
	present.
	
	* src/nautilus-application.c: (need_to_show_first_time_druid):
	removed the code that set the first time flag here, since it
	shouldn't be set until the user has gone all the way through the
	druid.
	
	* src/nautilus-first-time-druid.c:
	(druid_set_first_time_file_flag), (druid_finished),
	(update_selection_changed), (set_up_update_page),
	(set_up_update_feedback_page), (next_update_page_callback),
	(finish_page_back_callback), (nautilus_first_time_druid_show):
	started to add the "welcome package" service download to the
	druid, which I'll finish soon.  Also, set the first time flag
	at the end of the druid and other clean-ups.
	
2000-08-17  Darin Adler  <darin@eazel.com>

	* components/tree/nautilus-tree-model.c:
	(nautilus_tree_model_monitor_node):
	* libnautilus-extensions/nautilus-directory-async.c:
	(nautilus_directory_monitor_add_internal):
	* libnautilus-extensions/nautilus-directory-background.c:
	(nautilus_connect_background_to_directory_metadata):
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_file_monitor_add),
	(nautilus_self_check_directory):
	* libnautilus-extensions/nautilus-directory.h:
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_monitor_add):
	* libnautilus-extensions/nautilus-trash-directory.c:
	(trash_file_monitor_add):
	* libnautilus-extensions/nautilus-vfs-directory.c:
	(vfs_file_monitor_add):
	* src/file-manager/fm-directory-view.c: (finish_loading_uri):
	* src/file-manager/nautilus-trash-monitor.c:
	(nautilus_trash_metadata_ready_callback):
	Remove extra parameters now that the initial files callback is
	gone. It turns out emitting another files_added signal works just
	fine. If it wasn't for the search list view, I could also merge
	the "file_added" and "files_changed" signals easily. Both of these
	changes would simplify the work on the virtual trash directory.
	
	* libnautilus-extensions/nautilus-link.h:
	* libnautilus-extensions/nautilus-link.c:
	Get rid of NAUTILUS_LINK constant, which looked like a link type,
	but was really an unrelated implementation detail.
	
	* libnautilus-extensions/nautilus-icon-container.c: (sort_icons),
	(resort), (lay_down_icons_tblr), (finish_adding_new_icons):
	Removed the file-manager-specific stuff Gene added for the desktop.
	I fight the continuing battle to keep NautilusIconContainer a
	general icon container, and not just for the Nautilus icon view.
	The drag code is still an exception to this that needs to be fixed
	some day (for NautilusList too).
	
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize),
	(get_local_path), (get_sort_category),
	(desktop_icons_compare_callback):
	Rewrote sorting code from NautilusIconContainer and moved it
	here where it belongs.
	
2000-08-17  John Sullivan  <sullivan@eazel.com>

	Work on bug 1750 ("Reveal in New Window" feature for search results)

	* src/file-manager/fm-search-list-view.c:
	(reveal_selected_items_callback): New function, opens a new window
	showing the parent directory for each selected item. What it
	still doesn't do is select and scroll-to-expose the item.
	(real_create_selection_context_menu_items), (real_merge_menus):
	Wire the callback to the context & menu-bar menu items.

2000-08-17  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(desktop_icons_sort), (lay_down_icons_tblr):
	Fixed a bug in the sorting of icons for initial layout
	in tblr mode.  Trash was not being placed last in the
	list.

2000-08-16  John Sullivan  <sullivan@eazel.com>

	Fixed bug 2169 ("Move to Trash" menu item needs refinement)
	Fixed bug 1742 ("Move to Trash" in search view should work)
	Fixed bug 1745 ("Delete from Trash" in search view should work)

	* libnautilus-extensions/nautilus-file.h,
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_parent_uri),
	(nautilus_file_get_string_attribute):
	made nautilus_file_get_parent_uri public, and changed its name
	(was nautilus_file_get_parent_uri_as_string)
	
	* src/file-manager/fm-directory-view.h:
	(contents_share_parent): New function pointer for subclasses 
	to optionally override. Subclasses should override to return
	FALSE if their contents might be from different directories.
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize_class): Wire up 
	contents_share_parent function pointer
	(get_nautilus_file_from_directory): New helper function to
	get a NautilusFile from a NautilusDirectory
	(fm_directory_is_trash): Reimplemented to call existing
	function nautilus_file_is_in_trash and avoid duplicating code.
	(fm_directory_view_contents_share_parent): New function, calls
	the virtual function
	(real_contents_share_parent): New function, default implementation
	that returns TRUE since normal directory views' contents are all
	in the same parent directory.
	(all_files_in_trash): New function, checks if every file in a
	list is in the trash
	(fm_directory_all_selected_items_in_trash): New function, calls
	all_files_in_trash on selection or uses shortcut if
	fm_directory_view_contents_share_parent is true.
	(fm_directory_view_can_move_file_to_trash): Renamed from
	fm_directory_can_move_to_trash, and now takes a file parameter
	since the answer might vary on a file-by-file basis.
	(fm_directory_view_confirm_deletion): Spruced up wording, and
	now takes a list of uris instead of a list of files, and now
	separately handles the case where only some of the selected files
	had to be deleted immediately.
	(fm_directory_view_trash_or_delete_selection): Rewrote to handle
	three types of files separately: files that can be moved to the
	trash, files already in the trash, and files that have to be
	deleted in place.
	(compute_menu_item_info): Changed "Delete..." to "Delete from Trash".
	(fm_directory_view_real_create_selection_context_menu_items),
	(reset_bonobo_trash_delete_menu):
	use "Delete from Trash" only if all selected items in trash.
	(fm_directory_view_real_update_menus): Update "Delete from Trash"
	menu item also. Its sensitivity wasn't updating properly due to
	this missing line.
	* src/file-manager/fm-search-list-view.c:
	(real_contents_share_parent): Overridden to return FALSE.
	(fm_search_list_view_initialize_class): wire up function pointer
	for contents_share_parent

2000-08-16  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(icon_toggle_selected), (icon_destroy),
	(nautilus_icon_container_remove):
	Fixed bug 2197, moving a file to trash while in renaming mode
	leaves renaiming item behind.
	Call end_renaming_mode in nautilus_icon_container_remove.
	
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(nautilus_icon_container_free_drag_data):
	Changed gtk_object_unref call to gtk_object_destroy to
	fix a crash.  Hopefully this didn't
	introduce a memory leak.
	
2000-08-16  Darin Adler  <darin@eazel.com>

	* README: Don't use tabs any more. Spell check.
	Add libglade.
	
	* components/tree/nautilus-tree-model.c:
	(nautilus_tree_model_monitor_add),
	(nautilus_tree_model_monitor_node):
	Use file attribute constant instead of hard-coded string. I was
	here to make some changes to the monitor API, but I didn't get
	to that yet. Next check-in.
	
	* libnautilus-extensions/nautilus-directory-async.c:
	(nautilus_directory_monitor_add_internal):
	Use "files_added" signal instead of callback. This is the first
	step toward removing the callback. I'll remove it tomorrow.
	
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_notify_files_added): Fix directory ref count
	leak.
	
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_internal): Fix case where we would not ref
	the NautilusFile even though the directory is monitoring it.
	This would lead to an early destroy later.
	
	* libnautilus-extensions/nautilus-search-uri.c:
	(nautilus_search_uri_to_human): Comment out print statements.
	Mathieu can delete them entirely later.
	(nautilus_self_check_search_uri): Added a few more tests.
	
	* libnautilus-extensions/nautilus-trash-directory.h:
	* libnautilus-extensions/nautilus-trash-directory.c:
	(nautilus_trash_directory_initialize), (trash_destroy),
	(trash_callback_hash), (trash_callback_equal),
	(trash_contains_file), (trash_callback_destroy),
	(trash_callback_check_done), (directory_ready_callback),
	(trash_callback_connect_directory), (trash_call_when_ready),
	(trash_cancel_callback), (trash_file_monitor_add),
	(trash_file_monitor_remove), (trash_are_all_files_seen),
	(trash_is_not_empty), (nautilus_trash_directory_initialize_class),
	(nautilus_trash_directory_add_real_trash_directory),
	(nautilus_trash_directory_remove_real_trash_directory),
	(remove_all_real_directories): Getting closer on the trash
	implementation. Still a ways to go.
	
	* src/file-manager/fm-icon-text-window.c:
	(create_attributes_option_menu):
	* src/file-manager/fm-icon-view.c: (fm_icon_view_merge_menus): Use
	_() instead of calling gettext. It turns out this is the
	recommended way to do it, even when the parameter is not a literal
	string.

2000-08-16  Michael Engber  <engber@eazel.com>

	Added bug numbers to some FIXME's and a new
	FIXME (and placeholder handling) for our lack
	of emboss support in background (bug 2193)
	* libnautilus-extensions/nautilus-background.c:
	(nautilus_background_draw):
	* libnautilus-extensions/nautilus-directory-background.c:
	(nautilus_directory_background_read_desktop_settings):

2000-08-16  Michael Engber  <engber@eazel.com>

	Cleanup some of my desktop changes (better names) (bug 1047)
	Fix nautilus_background_get_image_placement, it was returning
	the wrong value (copy/paste error). Lay some ground work
	for supporting search results windows having their own theme. 

	* libnautilus-extensions/nautilus-background.c:
	(nautilus_background_initialize_class),
	(nautilus_background_get_image_placement),
	(nautilus_background_draw),
	(nautilus_background_set_color_no_emit),
	(nautilus_background_set_color), (load_image_callback),
	(nautilus_background_set_image_uri_no_emit),
	(nautilus_background_set_image_uri),
	(nautilus_background_real_reset),
	(nautilus_background_receive_dropped_color):
	* libnautilus-extensions/nautilus-background.h:
	* libnautilus-extensions/nautilus-directory-background.c:
	(nautilus_directory_background_set_desktop),
	(nautilus_directory_background_is_desktop),
	(nautilus_directory_background_peek_theme_source),
	(nautilus_directory_background_get_default_settings),
	(nautilus_directory_background_read_desktop_settings),
	(nautilus_directory_background_write_desktop_default_settings),
	(image_loading_done_callback),
	(nautilus_directory_update_root_window),
	(nautilus_directory_background_is_set),
	(directory_changed_callback):

2000-08-16  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/dfos-xfer.c: (get_parent_make_name_list):
	The file-transfer mechanism can only handle files from the
	same parent directory right now. To prevent this from getting
	in the way of other work, I isolated the problem such that when
	you try to move/copy/make-link files from multiple directories,
	it puts up an alert warning you that it will ignore some of the
	files. Then it continues to process only the ones from the same
	directory as the first one it happened to examine.

2000-08-16  Gene Z. Ragan  <gzr@eazel.com>

	* src/nautilus-application.c: (nautilus_application_close_desktop):
	Changed gtk_object_unref call to gtk_object_destroy to
	fix an assertion being called.  Hopefully this didn't
	introduce a memory leak.

2000-08-16  Mathieu Lacage  <mathieu@eazel.com>

	* libnautilus-extensions/nautilus-search-uri.c:
	(nautilus_self_check_search_uri): add more tests.

2000-08-15  Mathieu Lacage  <mathieu@eazel.com>

	* libnautilus-extensions/nautilus-search-uri.c:
	(strip_uri_begenning), (tokenize_uri), (get_translated_criterion),
	(parse_uri), (nautilus_self_check_search_uri): add loads of self-test.
	fix bugs encountered in the testing. Thanks Darin.

2000-08-15  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-trash-directory.c:
	(nautilus_trash_directory_initialize), (trash_destroy),
	(callback_hash), (callback_equal), (trash_contains_file),
	(call_when_ready_state_destroy),
	(call_when_ready_state_check_done), (directory_ready_callback),
	(trash_call_when_ready), (trash_cancel_callback),
	(trash_files_callback), (trash_file_monitor_add),
	(trash_file_monitor_remove), (trash_are_all_files_seen),
	(trash_is_not_empty): More of the implementation of all the
	trash functions. About 1/3 done now.
	
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(nautilus_icon_container_free_drag_data):
	Use gtk_object_unref so it really gets rid of the object
	instead of gtk_object_destroy that doesn't free it.
	
	* libnautilus-extensions/nautilus-list.c: Reformatting.
	
	* libnautilus/nautilus-zoomable.c:
	(impl_Nautilus_Zoomable_zoom_out),
	(impl_Nautilus_Zoomable_zoom_to_fit),
	(impl_Nautilus_Zoomable__destroy),
	(impl_Nautilus_Zoomable__create),
	(nautilus_zoomable_initialize_class):
	Clean out some old cruft. More cleanup needed.
	
	* src/file-manager/fm-directory-view.c:
	(text_attribute_names_changed_callback),
	(embedded_text_policy_changed_callback),
	(image_display_policy_changed_callback),
	(directory_view_font_family_changed_callback),
	(click_policy_changed_callback),
	(anti_aliased_mode_changed_callback),
	(fm_directory_view_bump_zoom_level),
	(fm_directory_view_zoom_to_level),
	(fm_directory_view_restore_default_zoom_level),
	(fm_directory_view_can_zoom_in), (fm_directory_view_can_zoom_out),
	(fm_directory_view_get_background_widget),
	(fm_directory_view_get_selection): Use NAUTILUS_CALL_VIRTUAL.
	(fm_directory_can_move_to_trash): Fix handling of NULL directory.
	(new_folder_rename_later),
	(fm_directory_view_get_emblem_names_to_exclude),
	(fm_directory_view_merge_menus), (fm_directory_view_select_all),
	(fm_directory_view_set_selection),
	(fm_directory_view_supports_properties),
	(fm_directory_view_update_menus): Use NAUTILUS_CALL_VIRTUAL.
	(fm_directory_view_get_uri): Handle NULL directory.
	
	* src/file-manager/fm-icon-view.c:
	(fm_icon_view_get_directory_sort_by),
	(fm_icon_view_set_directory_sort_by),
	(fm_icon_view_get_directory_sort_reversed),
	(fm_icon_view_set_directory_sort_reversed),
	(fm_icon_view_get_directory_auto_layout),
	(fm_icon_view_set_directory_auto_layout):
	Use NAUTILUS_CALL_VIRTUAL.
	
	* src/file-manager/fm-list-view.c: (fm_list_view_adding_file),
	(fm_list_view_removing_file), (fm_list_view_file_still_belongs),
	(get_number_of_columns), (get_link_column),
	(get_default_sort_attribute), (get_column_specification):
	Use NAUTILUS_CALL_VIRTUAL.
	
	* src/nautilus-navigation-bar.c:
	(nautilus_navigation_bar_get_location),
	(nautilus_navigation_bar_set_location):
	Use NAUTILUS_CALL_VIRTUAL.

	* src/nautilus-view-frame-corba.c:
	(impl_Nautilus_ViewFrame__destroy):
	* src/nautilus-zoomable-frame-corba.c:
	(impl_Nautilus_ZoomableFrame__destroy),
	(impl_Nautilus_ZoomableFrame__create):
	Remove some unused code.

2000-08-15  Arlo Rose  <arlo@eazel.com>

	* AUTHORS:
	Added myself.
	This file is *seriously* out of date.

2000-08-15  John Sullivan  <sullivan@eazel.com>

	Fixed bug 2172 (Need to support right-button-dragging in
	list view). This was a piece of list view dragging support
	that got overlooked before, but is necessary for search
	results.

	Some of this code is copy/paste/modified from 
	nautilus-icon-container.c and nautilus-icon-dnd.c. I added
	FIXMEs about this (there were some already).

	* libnautilus-extensions/nautilus-list.c:
	Added #defines for mouse buttons
	(show_context_menu_callback), (and get ready for a potential drag)
	(nautilus_list_button_release), (nautilus_list_unrealize),
	(nautilus_list_resize_column), (nautilus_list_drag_start),
	(nautilus_list_motion), (nautilus_list_drag_begin),
	(nautilus_list_drag_end), (nautilus_list_drag_leave),
	(nautilus_list_get_drop_action), (nautilus_list_drag_motion),
	(nautilus_list_drag_drop), (nautilus_list_drag_data_received):
	Changes are too intertwined to list function-by-function. The
	main ones are: replaced uses of mouse button constants with
	#defines; Made middle button do nothing useful to match icon
	view (was mimicking left button); made right button either
	start a "choose the action on release" type drag or pop up
	the contextual menu after a timeout if no drag begins; took
	out some unnecessary asserts.
	
	* src/file-manager/fm-list-view.c: (fm_list_handle_dropped_icons):
	Changed action >= 0 to action > 0 so it doesn't do a lot of
	useless work when user chooses Cancel after a right-click drag;
	moved g_free (list_view_uri) inside the block where list_view_uri
	is allocated.

2000-08-15  Michael Engber  <engber@eazel.com>

	Third cut at syncing our desktop background with GNOME's (bug 1047)
	Now we update the GNOME desktop (root window) when we make changes.
	Still need to handle nautilus getting notified when the capplet makes
	changes.

	* libnautilus-extensions/nautilus-background.c:
	(nautilus_background_initialize_class),
	(nautilus_background_set_color_no_signal),
	(nautilus_background_set_color), (load_image_callback),
	(nautilus_background_set_image_uri_no_signal),
	(nautilus_background_set_image_uri),
	(nautilus_background_is_loaded), (nautilus_background_real_reset),
	(nautilus_background_receive_dropped_color):
	* libnautilus-extensions/nautilus-background.h:
	* libnautilus-extensions/nautilus-directory-background.c:
	(nautilus_directory_background_write_desktop_settings),
	(nautilus_directory_background_write_desktop_default_settings),
	(make_root_pixmap), (dispose_root_pixmap), (set_root_pixmap),
	(image_loaded_callback), (nautilus_directory_update_root_window),
	(background_changed_callback), (background_reset_callback):

2000-08-15  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-search-uri.c:
	(nautilus_search_uri_to_human), (nautilus_is_search_uri),
	(nautilus_self_check_search_uri): Fix the self-check, which was
	exposing some errors that need to be fixed. For now, the failing
	checks are commented out and marked with FIXME.

2000-08-15  Darin Adler  <darin@eazel.com>

	Getting closer to an implementation of the shared trash. Did a bit
	of factoring so that the trash has its own NautilusDirectory
	subclass now, and the appropriate functions are virtual.

	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_are_all_files_seen),
	(nautilus_directory_contains_file),
	(nautilus_directory_call_when_ready),
	(nautilus_directory_cancel_callback),
	(nautilus_directory_file_monitor_add),
	(nautilus_directory_file_monitor_remove),
	(nautilus_directory_is_not_empty): Made all these functions
	virtual.
	(wait_until_ready_callback),
	(nautilus_directory_wait_until_ready): Fixed some names and got
	rid of some type casts.
	
	* libnautilus-extensions/nautilus-gtk-macros.h: Added a new macro
	to make calls to virtual functions easier to read.
	
	* libnautilus-extensions/nautilus-icon-container.c:
	* libnautilus-extensions/nautilus-icon-container.h:
	* libnautilus-extensions/nautilus-icon-private.h:
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize):
	Minor cleanup and name changes.
	
	* libnautilus-extensions/nautilus-lib-self-check-functions.h:
	* libnautilus-extensions/nautilus-search-uri.h:
	* libnautilus-extensions/nautilus-search-uri.c:
	(nautilus_is_search_uri): Added a function to tell if a URI is a
	search URI.
	(nautilus_self_check_search_uri): Added self-checks.
	
	* libnautilus-extensions/nautilus-directory-async.c:
	(allow_metafile):
	* src/nautilus-switchable-navigation-bar.c:
	(nautilus_switchable_navigation_bar_set_location):
	* src/nautilus-window-manage-views.c:
	(nautilus_window_end_location_change_callback):
	Changed to use the is_search_uri function.
	
	* libnautilus-extensions/nautilus-trash-directory.c:
	(trash_destroy), (trash_contains_file), (trash_call_when_ready),
	(trash_cancel_callback), (trash_file_monitor_add),
	(trash_file_monitor_remove), (trash_are_all_files_seen),
	(trash_is_not_empty), (nautilus_trash_directory_initialize_class):
	Trash versions of the virtual functions.
	
	* libnautilus-extensions/nautilus-vfs-directory.c: (vfs_destroy),
	(vfs_contains_file), (vfs_call_when_ready), (vfs_cancel_callback),
	(vfs_file_monitor_add), (vfs_file_monitor_remove),
	(vfs_are_all_files_seen), (any_non_metafile_item),
	(vfs_is_not_empty), (nautilus_vfs_directory_initialize_class):
	Non-trash versions of the virtual functions (mostly code moved
	from nautilus-directory.c).
	
	* src/file-manager/fm-directory-view.c:
	(disconnect_model_handlers): Fix a place that relied on doing a
	call with a NautilusDirectory of NULL. We don't need to be so
	tolerant of NULL any more now that nautilus_directory_get always
	returns a non-NULL result for any URI.
	
	* src/nautilus-window.c: (nautilus_window_realize):
	A little code cleanup.
	(nautilus_window_load_content_view_menu): Fixed a storage leak
	of the method string.

	* src/nautilus.oafinfo: Added trash and gnome-trash as additional
	URIs supported by the icon and list view.

2000-08-15  John Sullivan  <sullivan@eazel.com>

	Fixed task 1414 (Emptying the trash needs a warning dialog)

	Implemented a simple confirmation dialog. Pavel said he and
	Arlo agreed to defer the feature of including information
	about the current trash contents in the dialog. I'll write up
	a new deferred bug for that.

	* src/file-manager/dfos-xfer.c: 
	(do_empty_trash): New function, does all the work of
	actually emptying the trash.
	(confirm_empty_trash): New function, puts up a modal dialog
	and returns whether user confirmed it. See comments in file
	as to why it's modal.
	(fs_empty_trash): Empties trash only if confirm_empty_trash
	returns TRUE.

2000-08-15  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(get_best_empty_grid_location), (lay_down_icons_tblr):
	Added horizontal and vertical padding for the tblr
	layout mode as per Arlo's spec.

2000-08-15  Raph Levien  <raph@acm.org>

	* librsvg/art_render.c (art_render_image_solid_negotiate): Only
	sets ART_IMAGE_SOURCE_CAN_COMPOSITE when a compositing callback is
	selected. Previously was causing segfaults on non-alpha
	images. Thanks to Leonard Rosenthol for spotting the bug.

2000-08-15  Mathieu Lacage  <mathieu@eazel.com>

	Implements core of task 1761 
	
	* libnautilus-extensions/Makefile.am: add my new files 
	to the build.
	* libnautilus-extensions/nautilus-search-uri.c:
	(strip_uri_begenning), (free_tokenized_uri), (tokenize_uri),
	(get_item_number), (get_translated_criterion),
	(get_first_criterion_prefix), (get_nth_criterion_prefix),
	(get_nth_criterion_suffix), (get_first_criterion_suffix),
	(parse_uri), (nautilus_search_uri_to_human): add file.
	* libnautilus-extensions/nautilus-search-uri.h: add file.
	* po/POTFILES.in: add my files there.
	* src/file-manager/fm-search-list-view.c: (load_location_callback):
	a space.
	* src/nautilus-complex-search-bar.c:
	(nautilus_complex_search_bar_initialize),
	(attach_criterion_to_search_bar),
	(unattach_criterion_from_search_bar):
	fix multiple bugs: the size text entry would not be removed by 
	the "fewer options" button. Changed a few "pressed" to "clicked".

2000-08-14  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(icon_set_position), (get_best_empty_grid_location):
	Fixed bug in postioning icons on the left edge of 
	the desktop.  Some fine tuning of initial default icon
	placement.
	
2000-08-15  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/command-line/Makefile.am:
	* components/services/install/lib/eazel-install-metadata.c:
	(create_default_configuration_metafile),
	(init_default_install_configuration),
	(init_default_transfer_configuration), (transferoptions_destroy):
	Changed some of the default values.
	
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_unref), (eazel_install_set_arg),
	(eazel_install_class_initialize),
	(eazel_install_fetch_remote_package_list),
	(eazel_install_install_packages),
	(eazel_install_uninstall_packages):
	Removed rpm_storage_path, as we query the server for a complete
	url. Unref calls finalize if compiled with EAZEL_INSTALL_SLIM.
	fetch_remote_package_list now uses file:// unless _SLIM is defined
	(file:// makes gnome-vfs download the bastard).
	
	* components/services/install/lib/eazel-install-private.h:
	Made the subcommand_cammand boolean volatile.
	
	* components/services/install/lib/eazel-install-protocols.h:
	* components/services/install/lib/eazel-install-protocols.c:
	(http_fetch_remote_file), (ftp_fetch_remote_file),
	(gnome_vfs_xfer_callback), (gnome_vfs_fetch_remote_file),
	(local_fetch_remote_file), (eazel_install_fill_file_fetch_table),
	(eazel_install_fetch_file), (filename_from_url),
	(eazel_install_fetch_package),
	(eazel_install_fetch_package_which_provides), (add_to_url),
	(get_url_for_package), (get_search_url_for_package):
	Added gnome-vfs support (1301). Revamped a lot of the switch
	(protocol) calls, so now theres a table of function pointers, so
	eazel_install_fetch_file just uses
	func_table[protocol](...). Thereby making it easier to add
	protocols.
	Also more #ifdefs to make life easier on the poor
	nautilus-installer.
	And I added file_to_report to eazel_install_fetch_file, so it can
	use an alternative filename in the download progress signals,
	instead of the target filename (eg. Eye of Gnome instead of
	eog-x.y.z-bla1.i386.rpm).
	Added g_main_iteration calls to http_fetch, for the
	nautilus-installer. The gnome-vfs automagically calls it.
	local_file_fetch now emits the obiligatory signals.
	
	* components/services/install/lib/eazel-install-public.h:
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(download_all_packages),
	(eazel_install_start_transaction_make_rpm_argument_list),
	(eazel_install_do_transaction_save_report),
	(eazel_install_monitor_rpm_propcess_pipe),
	(eazel_install_check_existing_packages),
	(eazel_install_fetch_rpm_dependencies), (print_package_list),
	(eazel_install_ensure_deps), (eazel_uninstall_upward_traverse),
	(eazel_uninstall_downward_traverse):
	Div cleaning up. Fixed rpm percentage output.
	
	* components/services/install/lib/eazel-install-types.c:
	(packagedata_fill_from_rpm_header):
	* components/services/install/lib/eazel-install-types.h:
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(parse_osd_xml_from_memory):
	Fixed evil pointer mishap.
	
	* components/services/install/lib/makefile.staticlib.in:
	Added EAZEL_INSTALL_PROTOCOL_USE_OLD_CGI
	
	* components/services/install/server/Makefile.am:
	Added the VFS flags
	
	* components/services/install/server/main.c: (sig_segv_handler),
	(eazel_install_service_factory), (main):
	Now loads the default config file.
	
	* components/services/trilobite/libtrilobite/Makefile.am:
	Added VFS flags
	 
	* components/services/trilobite/libtrilobite/trilobite-core-utils.h:
	*components/services/trilobite/libtrilobite/trilobite-core-utils.c:
	(trilobite_get_useragent_string):
	Adressed bug 2149
	
	* nautilus-installer/src/Makefile:
	* nautilus-installer/src/installer.c: (eazel_install_progress),
	(eazel_download_progress), (eazel_install_preflight), (installer):
	* nautilus-installer/src/interface.c: (create_what_to_do_page),
	(create_install_page), (create_finish_page), (create_window):
	Revamped large parts of the ui, much prettier now.

2000-08-14  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_discover_trash_callback),
	(fm_desktop_icon_view_initialize):
	* src/file-manager/nautilus-trash-monitor.c:
	(add_one_writable_device), (get_trashable_volume_uris),
	(nautilus_trash_monitor_async_get_trash_directories):
	* src/file-manager/nautilus-trash-monitor.h:
	Fix bugzilla 1855 - nautilus_trash_monitor_async_get_trash_directories
	returns the list of URIs of all the available trash directories, finding
	and creating them as needed.

	* libnautilus-extensions/nautilus-volume-monitor.c: (floppy_sort),
	(mount_device_check_change), (mount_devices_update_is_mounted),
	(check_permissions), (mount_device_iso9660_add),
	(mount_device_add_aliases), (add_mount_device),
	(mntent_is_removable_fs),
	(nautilus_volume_monitor_find_mount_devices),
	(nautilus_volume_monitor_each_device),
	(nautilus_volume_monitor_each_mounted_device),
	(nautilus_volume_monitor_mount_unmount_removable):
	* libnautilus-extensions/nautilus-volume-monitor.h:
	Made nautilus_volume_monitor_find_mount_device call
	mount_devices_check_status explicitly so that the mounted volume state
	is correct when the call returns.
	Add nautilus_volume_monitor_each_device and
	nautilus_volume_monitor_each_mounted_device.
	Moved NautilusVolumeMonitorDetails into nautilus-volume-monitor.c,
	away from prying eyes.
	Tweak some string matching code.

2000-08-14  John Sullivan  <sullivan@eazel.com>

	Fixed bug 2159 (crash when trying to drag a selected item
	in list view). This was getting in the way of me trying to
	figure out what does & doesn't work in the search results
	view.

	* libnautilus-extensions/nautilus-list.c:
	Got rid of details->clicked_row, since there was already a 
	details->button_down_row with the same intended use. 
	Also changed dnd_select_pending from int to gboolean to match 
	its use.
	(nautilus_list_button_press): Set details->button_down_row to
	-1 before handling click; remove line sometimes but not always
	updating clicked_row (that was the source of the bug)
	(nautilus_list_button_release): Remove line setting
	clicked_row back to -1 after release; this was unnecessary.
	(nautilus_list_drag_start): Use button_down_row instead of
	clicked_row

2000-08-14  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(desktop_icons_sort), (lay_down_icons_tblr), (lay_down_icons):
	Fixed some sorting bugs when dealing with inital icon layout
	in tblr mode.
	
2000-08-14  Michael Engber  <engber@eazel.com>

	Second cut at syncing our desktop background with GNOME's (bug 1047)
	Now we support images being centered and scaled (not just tiled)
	Although, there is no UI in nautilus to set this up (use the background
	capplet) Still need to handle update issues.

	* libnautilus-extensions/nautilus-background.c:
	(nautilus_background_destroy),
	(nautilus_background_get_image_placement),
	(nautilus_background_set_image_placement),
	(nautilus_background_draw), (nautilus_background_draw_aa),
	(nautilus_background_get_image_uri), (load_image_callback),
	(start_loading_image),
	(nautilus_background_receive_dropped_background_image),
	(nautilus_background_set_image_uri), (nautilus_background_is_set),
	(nautilus_background_real_reset),
	(nautilus_background_is_too_complex_for_gtk_style),
	(nautilus_background_is_dark),
	(nautilus_background_receive_dropped_color):
	* libnautilus-extensions/nautilus-background.h:
	* libnautilus-extensions/nautilus-directory-background.c:
	(nautilus_directory_background_get_default_settings),
	(nautilus_directory_background_read_desktop_settings),
	(nautilus_directory_background_write_desktop_settings),
	(nautilus_directory_background_write_desktop_default_settings),
	(nautilus_directory_background_is_set),
	(background_changed_callback), (directory_changed_callback),
	(background_reset_callback):

	nautilus_gdk_pixbuf_scale_to_fit was renamed to
	nautilus_gdk_pixbuf_scale_down_to_fit and also changed
	to not unref it's argument pixbuf. This involved fixing
	up various places it was used.

	* components/music/nautilus-music-view.c:
	(nautilus_music_view_update_from_uri):
	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.c:
	(nautilus_gdk_pixbuf_scale_to_fit_helper),
	(nautilus_gdk_pixbuf_scale_to_fit),
	(nautilus_gdk_pixbuf_scale_down_to_fit):
	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.h:
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_make_thumbnails):
	* src/nautilus-property-browser.c: (make_drag_image),
	(set_emblem_image_from_file),
	(make_properties_from_directory_path):
	* src/nautilus-sidebar.c: (background_settings_changed_callback),
	(background_reset_callback), (nautilus_sidebar_update_appearance):
	* src/nautilus-theme-selector.c: (add_theme):

2000-08-14  Darin Adler  <darin@eazel.com>

	Some bug fixes, including a fix for bug 2156 (all sidebar panels
	fail on view switch).

	* libnautilus-extensions/nautilus-directory-async.c:
	(dequeue_pending_idle_callback), (directory_load_done): Make sure
	files are actually on the file list before emitting the
	files_added signal.
	
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_internal): Fixed a mistake on my last check-in
	relating to NULL directories.
	
	* src/nautilus-window-private.h:
	* src/nautilus-window-manage-views.c:
	(nautilus_window_has_really_changed): Fixed code so that it removes
	old sidebar panels in a way that won't seem like an error to the
	error-detecting code.
	(nautilus_window_set_state_info): Keep the same sidebar panels when
	we change the view and not the location. Also took out two unused
	"states".
	(nautilus_window_begin_location_change): Got rid of "SYNC_STATE".
	
	* src/nautilus-window.c: A bit of reformatting.

2000-08-14  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(lay_down_icons_tblr):
	Made sure that an icon is added to the layout grid when it is
	postioned during a multi-icon placement.
	Freeze the icon positions after we are done placing them using
	this layout mode.

2000-08-14  Darin Adler  <darin@eazel.com>

	More prep work for the trash directory.
	
	* libnautilus-extensions/Makefile.am:
	* libnautilus-extensions/nautilus-trash-directory.c:
	(nautilus_trash_directory_initialize_class),
	(nautilus_trash_directory_initialize),
	(nautilus_trash_directory_destroy):
	* libnautilus-extensions/nautilus-trash-directory.h:
	* libnautilus-extensions/nautilus-vfs-directory.c:
	(nautilus_vfs_directory_initialize_class),
	(nautilus_vfs_directory_initialize),
	(nautilus_vfs_directory_destroy):
	* libnautilus-extensions/nautilus-vfs-directory.h:
	Add subclasses for the trash and for general VFS directories.
	Using refactoring techniques to move code down into these
	subclasses. This is not intended to be a general framework,
	but should be good enough to handle both these cases.
	
	* libnautilus-extensions/nautilus-directory-async.c:
	(can_use_public_metafile), (metafile_read_check_for_directory),
	(metafile_read_failed), (metafile_read_start), (allow_metafile),
	(metafile_write_success_close_callback),
	(nautilus_metafile_write_start), (start_monitoring_file_list),
	(get_corresponding_file), (start_getting_file_info):
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_destroy), (make_uri_canonical),
	(nautilus_directory_get_internal), (nautilus_directory_get_uri),
	(construct_private_metafile_uri), (nautilus_directory_new),
	(nautilus_directory_is_local), (nautilus_directory_is_not_empty),
	(nautilus_self_check_directory):
	* libnautilus-extensions/nautilus-directory.h:
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_internal), (nautilus_file_rename),
	(nautilus_file_get_gnome_vfs_uri), (nautilus_file_matches_uri),
	(nautilus_file_compare_by_name),
	(nautilus_file_compare_by_directory_name),
	(nautilus_file_compare_for_sort), (nautilus_file_get_uri),
	(nautilus_file_set_permissions),
	(nautilus_file_get_string_attribute),
	(nautilus_file_get_mime_type), (nautilus_file_is_in_trash),
	(nautilus_file_contains_text), (nautilus_file_get_directory_name),
	(nautilus_file_mark_gone), (nautilus_file_changed):
	* libnautilus-extensions/nautilus-file.h:
	Add code to handle case of directory that can't be handled by
	gnome-vfs. Mostly some NULL checks. Also renamed fields to make
	it clear that the text URI is the "real" one. Added code to
	handle the "gnome-trash:" and "trash:" schemes specially in the
	code to make URIs canonical.
	
	* libnautilus-extensions/nautilus-mime-actions.c:
	(get_mime_type_from_uri): Return "application/octet-stream"
	instead of NULL for unknown MIME type.
	
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_display_selection_info): Eliminated the
	nautilus_file_get_real_name call.
	* src/nautilus-switchable-navigation-bar.c:
	(nautilus_switchable_navigation_bar_set_location): Eliminated
	the nautilus_directory_is_search_directory call.
	
	* src/file-manager/fm-search-list-view.c: (real_adding_file):
	Fixed formatting mistake.
	
	* src/nautilus-view-frame.c: (set_up_for_new_location): Emit
	the title_changed signal for each change in location.

2000-08-14  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	* libnautilus-extensions/nautilus-icon-container.h:
	(desktop_icons_sort), (find_open_grid_space),
	(get_best_empty_grid_location), (mark_icon_location_in_grid),
	(mark_icon_locations_in_grid), (lay_down_icons_tblr),
	(lay_down_icons), (nautilus_icon_container_add):
	New functions for desktop layout mode.  We use a grid and
	decide where to place icons based on the first, best available
	free space on the desktop.	
	
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize):
	Set our layout mode to be top-bottom-left-right

2000-08-14  Raph Levien  <raph@acm.org>

	* librsvg/test-ft-gtk.c: Substantial new code to fiddle
	with various options and measure performance.

	* librsvg/rsvg-ft.c: A warning printed when the glyph is not
	loaded. However, it looks at this point like there's a
	nasty bug triggered when the glyph fails to load (see bug 2140).

2000-08-14  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-properties-window.c:
	(forget_properties_window): Swapped the order of
	nautilus_file_monitor_remove and nautilus_file_unref.
	Unref must happen after we're otherwise done with the
	file (I hadn't seen any symptoms of this bug).
	(get_and_ref_file_to_display): Add NAUTILUS_LINK_TRASH
	to the set of nautilus-link types for which we show the
	target's properties. Currently that means you get the
	properties of the single Trash directory.

2000-08-14  Darin Adler  <darin@eazel.com>

	* configure.in: Fixed GtkHTML configure section so it will
	work with 3-part version numbers. I didn't really know the
	"good" way to do this, so I just fixed the sed command to
	work with multi-part versions and didn't try to fix any
	other aspect of this. This change was required to make the
	configure work with GtkHTML 0.6.1.

2000-08-14  John Sullivan  <sullivan@eazel.com>

	Finished the remaining details of bug 2061 (Show Properties 
	should show volume properties for desktop icons). I split 
	the "Show Properties for Trash" bug off as a separate task 
	(2146), since it has its own set of issues.

	* src/file-manager/fm-properties-window.h:
	Eliminated fm_properties_window_get_or_create, which
	returned a GtkWindow, in favor of new
	fm_properties_window_present, which doesn't. This was
	required to do create the window asynchronously.

	* src/file-manager/fm-directory-view.c:
	(open_one_properties_window): Switch caller to use new
	fm_properties_window_present. It had been wiring up an
	Undo manager on the result window; this code got moved
	into the asynchronous callback part of creating a
	properties window.

	* src/file-manager/fm-properties-window.c:
	(create_pixmap_widget_for_file): ref file stored with pixmap
	widget; this had been creating a ref/unref mismatch that we
	had never noticed before probably due to extraneous refs elsewhere.
	(name_field_focus_out),	(name_field_focus_in), (create_basic_page): 
	Only do special	focus handling with the name field if it's sensitive.

	(create_properties_window_callback): New function, asynchronous
	callback to create the properties window.
	(get_and_ref_file_to_display): initialize file_to_display to NULL.
	This was crashing non-special-Desktop-case Properties windows.
	(fm_properties_window_present): Create properties window using
	asynchronous nautilus_file_call_when_ready, so we don't try to
	create the window until we know whether the file is a directory.
	This had never caused problems before because we had only tried
	to show properties for existing, info-bearing NautilusFile objects.

2000-08-14  John Sullivan  <sullivan@eazel.com>

	* src/nautilus-shell.c: (display_caveat): Wrapped the
	image in the caveat dialog in a GtkVBox such that the
	frame & image will remain unstretched at the top of the
	dialog if the text gets taller than the image. We might
	want to take this (trivial & safe) change for the
	preview release if we end up making the caveat text longer.

2000-08-13  Andy Hertzfeld  <andy@eazel.com>

	added a separate theme selection window and removed theme selection from the
	property browser
	
	* src/Makefile.am:
	* src/nautilus-theme-selector.h:
	added nautilus theme selector class		
	
	* src/nautilus-theme-selector.c:
	(nautilus_theme_selector_initialize_class),
	(nautilus_theme_selector_initialize),
	(nautilus_theme_selector_destroy), (nautilus_theme_selector_new),
	(nautilus_theme_selector_show),
	(nautilus_theme_selector_delete_event_callback),
	(add_new_button_callback), (remove_button_callback),
	(nautilus_theme_selector_highlight_by_name),
	(nautilus_theme_selector_theme_changed),
	(theme_select_row_callback), (vfs_file_exists), (has_image_file),
	(make_theme_description), (set_preferred_font_for_cell),
	(add_theme), (populate_list_with_themes):
	added a class that presents a window that describes the existing themes and
	allows the user to switch between them.
	
	* src/nautilus-window-menus.c: (change_appearance_callback),
	(nautilus_window_initialize_menus):
	added a menu item to invoke the theme selector
	
	* src/nautilus-property-browser.c:
	(nautilus_property_browser_initialize), (make_category):
	removed support for themes from the property browser
	* data/browser.xml:
	removed the themes browser category
	
	* icons/Makefile.am:
	removed the themes.png icon
	* icons/arlo/arlo.xml:
	* icons/default.xml:
	* icons/vector/vector.xml:
	added descriptions for display in the theme selection

	* src/nautilus-sidebar-tabs.c:
	(nautilus_sidebar_tabs_initialize_class),
	(nautilus_sidebar_tabs_size_allocate):
	removed unnecessary override of size_request
	
2000-08-12  Raph Levien  <raph@acm.org>

	* librsvg/rsvg-ft.c: Got glyph cache working. Eviction when
	cache is full is not yet done, though, so RAM usage can grow.

	This checkin caused an API change! The xpen and ypen fields
	of the RsvgFTGlyph structure are now relative to the tranlation
	components of the affine (ie affine[4] and affine[5]). Prior
	to this checkin, they were relative to the upper left corner
	of the glyph.

	* librsvg/test-ft-gtk.c: Much tighter drawing, taking into
	account both bbox of what's to be drawn and the expose rect.

2000-08-12  Raph Levien  <raph@acm.org>

	* librsvg/makefile-simple (CFLAGS): Added suitable warnings
	so that broken code like the problem below doesn't slip through.

	* librsvg/test-ft-gtk.c (test_expose): Actually expose the
	entire window.

2000-08-12  Maciej Stachowiak  <mjs@eazel.com>

	* librsvg/test-ft-gtk.c (set_text): Made this local function
	static to avoid warnings.

2000-08-12  Raph Levien  <raph@acm.org>

	* librsvg/test-ft-gtk.c: Added a simple Gtk+ test rig for rsvg-ft.
	I'll be instrumenting this for speed measurements, to play with
	the glyph cache.

	* Makefile.am: Added test-ft-gtk.

	* makefile-simple: A simple makefile for building rsvg without all
	the auto* overhead, for testing purposes.

2000-08-12  Ali Abdin  <aliabdin@aucegypt.edu>

        * components/help/help-method.c:
        (old_help_file): New function to return the old doc path.
        (transform_file): If we can not find the SGML or XML path use the old
        doc file (index.html)

2000-08-11  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar-tabs.c: (draw_or_layout_all_tabs):
	fixed "hole" in sidebar tabs in the arlo theme by using gdk_pixbuf_composite
	instead of gdk_pixbuf_copy_area for the edge pieces, so the alpha gets used instead
	of copied.
	
	* src/nautilus-sidebar.c: (nautilus_sidebar_motion_event):
	fixed bug where tabs were stay prelighted if you moved the mouse out quickly enough;
	fixed by setting the prelight state even when we're outside of the tabs
		
	* libnautilus-extensions/nautilus-icon-canvas-item.c: (map_pixbuf):
	fixed a problem drawing the audio preview icon now that I understand how
	composite works better

2000-08-11  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(icon_set_position), (lay_down_icons),
	(nautilus_icon_container_add):
	Added code to handle special desktop layout modes.
	
	* libnautilus-extensions/nautilus-icon-container.h:
	* libnautilus-extensions/nautilus-volume-monitor.c:
	(nautilus_volume_monitor_destroy):
	Removed a double cleanup of a timewr callback.
	
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize):
	Set a default layout mode.  This is not the same
	as auto layout.

2000-08-11  Maciej Stachowiak  <mjs@eazel.com>

	* src/nautilus-application.c: (create_object): More renaming
	fixes.

2000-08-11  Gene Z. Ragan  <gzr@eazel.com>

	* idl/GNOME_Desktop_FileOperationService.idl:
	* src/nautilus-application.c: (create_factory):
	Changes caused by the festival of renaming in OAF.
	
2000-08-11  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar-tabs.c:
	(nautilus_sidebar_tabs_load_theme_data),
	(nautilus_sidebar_tabs_hit_test), (measure_total_height),
	(recalculate_size), (nautilus_sidebar_tabs_size_request),
	(draw_one_tab_plain), (draw_tab_piece_aa), (draw_one_tab_themed),
	(get_tab_width), (draw_pixbuf_tiled_aa), (allocate_cleared_pixbuf),
	(draw_or_layout_all_tabs), (nautilus_sidebar_tabs_expose):
	added anti-aliased, shadowed labels for themed sidebar tabs, as
	well as off-screen drawing to minimize flashing, fetching the
	font from the theme and improved layout.
	* icons/arlo/arlo.xml:
	added a font for the labels
	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.c:
	(nautilus_gdk_pixbuf_draw_text):
	added a check for too small a box to draw in to fix a case for
	the sidebar tabs
	
2000-08-11  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(icon_set_position),
	(nautilus_icon_container_update_scroll_region), (lay_down_icons):
	Handle fixed size icon containers.  Add clipping to icon 
	positioning.  Don't adjust scroll region if the icon container
	is set to a fixed size.
	
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize):
	Set up desktop icon view to a fixed size and set the allocation
	of the widget to be our fixed size with an offset of 0, 0
	
2000-08-11  Ali Abdin  <aliabdin@aucegypt.edu>

        * components/help/converters/gnome-db2html2/ASSUMPTIONS:
        * components/help/converters/gnome-db2html2/TODO:
        Added an ASSUMPTIONS (it might be temporary) and elborated on a TODO
        item.

        * components/help/converters/gnome-db2html2/sect-preparse.c:
        (sect_preparse_figure_start_element) Keep a hash of the figure_id's
        encountered.

        * components/help/converters/gnome-db2html2/gdb3html.h:
        Add a hash table to the Context struct

        * components/help/converters/sect-elements.c:
        (sect_xref_start_element):
        Special case handling of xref's to images.

2000-08-11  Darin Adler  <darin@eazel.com>

	* docs/state-machines.txt: Some tweaks to Maciej's proposed
	states for the view frame.

2000-08-11  Mike Engber  <engber@eazel.com>

	First cut at syncing our desktop background with GNOME's (bug 1047)
	Still need to handle centered & scaled images + update issues.

	* libnautilus-extensions/nautilus-background.c:
	(nautilus_background_initialize_class):
	* libnautilus-extensions/nautilus-directory-background.c:
	(nautilus_directory_background_set_desktop),
	(nautilus_directory_background_is_desktop),
	(theme_image_path_to_uri),
	(nautilus_directory_background_get_default_settings),
	(nautilus_gnome_config_string_match_no_case),
	(nautilus_directory_background_read_desktop_settings),
	(nautilus_directory_background_write_desktop_settings),
	(nautilus_directory_background_write_desktop_default_settings),
	(nautilus_directory_background_is_set),
	(background_changed_callback), (directory_changed_callback),
	(nautilus_directory_background_theme_changed),
	(background_reset_callback),
	(nautilus_connect_background_to_directory_metadata),
	(nautilus_connect_desktop_background_to_directory_metadata):
	* libnautilus-extensions/nautilus-directory-background.h:
	* src/file-manager/fm-icon-view.c: (fm_icon_view_begin_loading):

2000-08-11  John Sullivan  <sullivan@eazel.com>

	Work on 2061 ("Show Properties" on desktop link files
	should show properties of real volume).

	This essentially works now, but I see some little
	problems that I need to address before marking this
	fixed. Also I haven't done anything about Trash, which
	is definitely a whole can of worms of its own.

	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_rename): Move the check for self-owned
	files after the check for new name & old name identical.
	(nautilus_file_can_rename): Check for self-owned files
	here too to match _rename.
	* src/file-manager/fm-properties-window.c:
	(get_and_ref_file_to_display): New function, determines
	which file to actually display properties given the file
	it's passed. Checks for NAUTILUS_LINK_HOME and NAUTILUS_LINK_MOUNT
	type files.
	(fm_properties_window_get_or_create): Call 
	get_and_ref_file_to_display instead of just using the passed file.

2000-08-11  Darin Adler  <darin@eazel.com>

	Fixed bug 1891 (calling set_title before report_load_underway has
	no effect).

	* libnautilus-extensions/nautilus-file.c: (destroy):
	Fix a leak in the symbolic link target hash table.
	
	* src/nautilus-application.c: (nautilus_application_startup),
	(nautilus_application_create_desktop_window),
	(nautilus_application_open_desktop),
	(nautilus_application_close_desktop),
	(nautilus_application_destroyed_window),
	(nautilus_application_create_window):
	Simplified the logic for creating and destroying the desktop
	window a little bit and made it actually unref the desktop
	window instead of just destroying it.
	
	* src/nautilus-switchable-navigation-bar.c:
	(nautilus_switchable_navigation_bar_initialize),
	(nautilus_switchable_navigation_bar_set_mode),
	(nautilus_switchable_navigation_bar_set_location):
	Added missing code to send out the mode_changed signal and
	took out a gratuitous FIXME.
	
	* src/nautilus-view-frame.h:
	* src/nautilus-view-frame.c:
	(nautilus_view_frame_initialize_class),
	(nautilus_view_frame_initialize), (nautilus_view_frame_destroy),
	(set_up_for_new_location), (nautilus_view_frame_load_location),
	(nautilus_view_frame_report_location_change),
	(nautilus_view_frame_set_title), (nautilus_view_frame_get_title):
	Changed it so the view frame keeps around the title as passed by
	the view. It now emits a "title_changed" signal instead of a
	"set_title" signal and you can get the title with a call to
	nautilus_view_frame_get_title.
	
	* src/nautilus-window.h:
	* src/nautilus-window.c: (nautilus_window_title_changed_callback),
	(nautilus_window_connect_view):
	* src/nautilus-window-manage-views.h:
	* src/nautilus-window-manage-views.c:
	(nautilus_window_get_current_location_title),
	(nautilus_window_update_title),
	(nautilus_window_set_displayed_location),
	(nautilus_window_title_changed), (handle_go_elsewhere),
	(nautilus_window_has_really_changed),
	(nautilus_window_update_state):
	Manage the title in a simpler way now that the view frame keeps
	the title around.
	
	* src/nautilus-window-toolbars.c: (set_up_button): Fixed error
	that would result in a call to gnome_stock_set_icon with NULL.

	* RPMs-README: Fixed a typo.

2000-08-11  John Sullivan  <sullivan@eazel.com>

	Fixed bug 1743 (Deleting a file in search results should cause
	list to update appropriately).

	The fix for this involved fixing bugs in nautilus_file_is_in_trash
	and making emblems behave more flexibly. We now have the ability
	to exclude certain emblems when displaying a file, so that
	the trash emblem shows up in search results but not regular
	list view. A happy side effect of the way this works is that
	the trash emblem now shows up in the sidebar for items (including
	directories) that are anywhere in the trash.

	* libnautilus-extensions/nautilus-file.h: Publicized names
	of emblems NautilusFile adds based on file state, so that
	file-displaying code could choose to exclude some of them.
	This included changing their names to start with NAUTILUS_
	* libnautilus-extensions/nautilus-file.c: 
	(compare_emblem_names): updated for emblem name changes.
	(nautilus_file_get_emblem_names): updated for name changes.
	Also, always include EMBLEM_NAME_TRASH for files in trash,
	not just when the file is a search result. Soon we will be
	able to eliminate nautilus_file_is_search_result entirely.
	(nautilus_file_is_in_trash): Fixed several problems here.
	Don't bother checking for NULL; use _get_uri not
	_get_activation_uri so the test works at any point in the
	life of a NautilusFile; free the uri string; initialize
	trash_dir_uri so we don't try to unref an uninitialized
	variable in some cases.
	
	* libnautilus-extensions/nautilus-icon-factory.h,
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_emblem_icons_for_file): Added
	parameter for emblem names to exclude when creating icons.

	* libnautilus-extensions/nautilus-string-list.c:
	(nautilus_string_list_new_from_string_list),
	(nautilus_string_list_free), (nautilus_string_list_contains):
	Made these functions allow NULL, as GList does.
	(nautilus_self_check_string_list): Added tests of NULL handling.

	* src/file-manager/fm-directory-view.h: 
	(get_emblem_names_to_exclude): New function pointer for subclasses
	to override.
	(fm_directory_view_get_emblem_names_to_exclude): New function for
	subclasses to call.
	* src/file-manager/fm-directory-view.c:
	(real_get_emblem_names_to_exclude): New function, returns list
	containing NAUTILUS_FILE_EMBLEM_NAME_TRASH, so directory views by
	default don't show the trash emblem.
	(fm_directory_view_initialize_class): Wire up 
	get_emblem_names_to_exclude.
	(fm_directory_view_get_emblem_names_to_exclude): New function,
	returns result of possibly overridden function pointer.
	
	* src/file-manager/fm-icon-view.c: (get_icon_images_callback):
	Use fm_directory_view_get_emblem_names_to_exclude when getting
	emblems for each icon.
	
	* src/file-manager/fm-list-view.c:
	(fm_list_view_get_emblem_pixbufs_for_file):
	Use fm_directory_view_get_emblem_names_to_exclude when getting
	emblems for each icon.

	* src/file-manager/fm-search-list-view.c:
	(fm_search_list_view_initialize_class): Override 
	get_emblem_names_to_exclude with our real_get_emblem_names_to_exclude.
	(real_get_emblem_names_to_exclude): New function, returns NULL, so
	all emblems including the trash emblem will be displayed.

	* src/nautilus-sidebar-title.c: (update_emblems):
	Pass NULL for emblems-to-exclude when getting emblems for sidebar.

2000-08-11  Darin Adler <darin@eazel.com>

	* HACKING:
	* README:
	Misc. wording and clarity improvements.
	There's still a lot missing.

2000-08-11  Mathieu Lacage  <mathieu@eazel.com>

	* HACKING: move most stuff in README. add hacking-related stuff.
	* Makefile.am: fix the EXTRA_DIST target again. Should be fully working now.
	* README: fill with non-garbage from HACKING.

2000-08-11  Darin Adler  <darin@eazel.com>

	* RPMs-README: 2nd draft.

2000-08-11  Mathieu Lacage  <mathieu@eazel.com>

	* Makefile.am: fix broken EXTRA_DIST.
	* RPMs-README: add file for those who want to buld RPMs.
	please, Darin, can you proofread it ?

2000-08-11  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(icon_set_position), (lay_down_icons),
	(nautilus_icon_container_initialize),
	(nautilus_icon_container_set_layout_mode):
	Removed layout code that was being designed for the desktop.
	The desktop has no auto layout at the present.

	(nautilus_icon_container_get_is_fixed_size),
	(nautilus_icon_container_set_is_fixed_size):
	New functions to set and get the icon containers
	fixed size attribute.  This attribute should be checked
	whenever an operation that would change the size
	of the container is called.
	
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize):
	Removed layout mode code.

2000-08-11  Ali Abdin  <aliabdin@aucegypt.edu>

        * components/help/converters/gnome-db2html2/gdb3html.h:
        * components/help/converters/gnome-db2html2/sect-elements.c:
        * components/help/converters/gnome-db2html2/sect-preparse.c:
        * components/help/converters/gnome-db2html2/toc-elements.c:
        Added glossaryinfo tag (to act like articleinfo/bookinfo)

        * components/help/converters/gnome-db2html2/toc-elements.c:
        (toc_title_start_element),
        (toc_title_end_element):
        I tried the GDP Hanbook - Didn't like how the table of contents came
        out. So I tweaked it to further indent the sect3's and give them a
        different HTML tag (H4)

        * components/help/converters/gnome-db2html2/TODO:
        Updated

        * components/help/converters/gnome-db2html2/sect-elements.c:
        (sect_write_characters) An aspect of this function got accidently
        removed causing things to be output when they shouldn't. It took me
        approximately half an hour to find this elusive problem (I may never
        have found it had it not been for an old copy of gnome-db2html2 lying
        around)

2000-08-11  Maciej Stachowiak  <mjs@eazel.com>

	* src/nautilus-applicable-views.c,
	src/nautilus-applicable-views.h, src/nautilus-application.c,
	src/nautilus-application.h, src/nautilus-bookmark-list.c,
	src/nautilus-bookmark-list.h, src/nautilus-bookmark-parsing.c,
	src/nautilus-bookmark-parsing.h, src/nautilus-bookmarks-window.c,
	src/nautilus-bookmarks-window.h,
	src/nautilus-complex-search-bar.c,
	src/nautilus-complex-search-bar.h, src/nautilus-desktop-window.c,
	src/nautilus-desktop-window.h, src/nautilus-first-time-druid.c,
	src/nautilus-first-time-druid.h, src/nautilus-history-frame.c,
	src/nautilus-history-frame.h, src/nautilus-link-set-window.c,
	src/nautilus-link-set-window.h, src/nautilus-location-bar.c,
	src/nautilus-location-bar.h, src/nautilus-main.c,
	src/nautilus-navigation-bar.c, src/nautilus-navigation-bar.h,
	src/nautilus-property-browser.c, src/nautilus-property-browser.h,
	src/nautilus-search-bar-private.h, src/nautilus-search-bar.c,
	src/nautilus-search-bar.h, src/nautilus-self-check-functions.c,
	src/nautilus-self-check-functions.h, src/nautilus-shell.c,
	src/nautilus-shell.h, src/nautilus-sidebar-tabs.c,
	src/nautilus-sidebar-tabs.h, src/nautilus-sidebar-title.c,
	src/nautilus-sidebar-title.h, src/nautilus-sidebar.c,
	src/nautilus-sidebar.h, src/nautilus-signaller.c,
	src/nautilus-signaller.h, src/nautilus-simple-search-bar.c,
	src/nautilus-simple-search-bar.h,
	src/nautilus-switchable-navigation-bar.c,
	src/nautilus-switchable-navigation-bar.h,
	src/nautilus-switchable-search-bar.c,
	src/nautilus-switchable-search-bar.h, src/nautilus-toolbar.c,
	src/nautilus-toolbar.h, src/nautilus-view-frame-bonobo-control.c,
	src/nautilus-view-frame-bonobo-embeddable.c,
	src/nautilus-view-frame-corba.c,
	src/nautilus-view-frame-nautilus-view.c,
	src/nautilus-view-frame-private.h,
	src/nautilus-view-frame.c,src/nautilus-view-frame.h,
	src/nautilus-window-manage-views.c,
	src/nautilus-window-manage-views.h, src/nautilus-window-menus.c,
	src/nautilus-window-private.h, src/nautilus-window-toolbars.c,
	src/nautilus-window.c, src/nautilus-window.h,
	src/nautilus-zoom-control.c, src/nautilus-zoom-control.h,
	src/nautilus-zoomable-frame-corba.c: Made copyright headers
	consistent in style; also made sure to refer to Nautilus as
	Nautilus, not "this library" or "The GNOME Library".

2000-08-11  Maciej Stachowiak  <mjs@eazel.com>

	Fixes for bugzilla tasks 1525 and 1530.
	
	* components/tree/nautilus-tree-expansion-state.h,
	components/tree/nautilus-tree-expansion-state.c: New files
	implementing the NautilusTreeExpansionState class, a class to
	track the expansion state of various nodes in the tree, and
	save/load it to/from GConf.
	* components/tree/nautilus-tree-model.h,
	components/tree/nautilus-tree-model.c
	(nautilus_tree_model_stop_monitoring_node_recursive): New function
	to stop monitoring a node and any children of it's that you may be
	monitoring all at one go.	
	(nautilus_tree_model_stop_monitoring_node): Disconnect signal
	handlers from the proper object (D'oh!) and avoid disconnecting
	more than once if you stop monitoring more than once (D'oh!).

	* components/tree/nautilus-tree-view.c:
	(nautilus_tree_view_insert_model_node,
	nautilus_tree_view_remove_model_node,
	nautilus_tree_view_update_model_node),
	nautilus_tree_view_initialize, nautilus_tree_view_destroy,
	tree_expand_callback, tree_collapse_callback): Track expansion
	state using the new class, and make sure that when a node is
	expanded it gets reloaded recursively.
	(ctree_is_node_expanded): Convenience function to check if a
	GtkCTreeNode is currenly expanded.
	(reload_node_for_uri): New function to force reload of a node.
	(expand_node_for_uri): New function to do everything necessary
	associated with the expansion of a node.
		
	* libnautilus-extensions/nautilus-glib-extensions.h,
	libnautilus-extensions/nautilus-glib-extensions.c:
	(nautilus_g_slist_free_deep_custom, nautilus_g_slist_free_deep):
	New functions for freeing GSLists, similar to the GList versions.
	* libnautilus-extensions/nautilus-preferences.h,
	libnautilus-extensions/nautilus-preferences.c
	(nautilus_preferences_set_string_list,
	nautilus_preferences_get_string_list): New functions for
	manipulating preferences that are a list of strings.
	* libnautilus-extensions/nautilus-volume-monitor.c
	(mntent_is_removable_fs): Added some FIXMEs
	* src/nautilus-view-frame.c: Remove a stary character from the
	copyright notice.

2000-08-10  Mathieu Lacage <mathieu@eazel.com>

	* HACKING: update it for upcoming release.
	To be backported.

2000-08-10  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/rpmview/nautilus-rpm-view-install.c:
	(nautilus_rpm_view_install_done):
	Use unref instead of destroy in eazelinstallcorbacallback
	
	* components/services/install/command-line/eazel-alt-install-corba.c:
	(set_parameters_from_command_line), (main):
	Defaults to ham.eazel.com:8888 instead of testmachine.eazel.com:80
	now.
	Also added reversion support
	
	* components/services/install/command-line/eazel-package-query.c:
	(main):
	use the unref instead of destroy 
	
	* components/services/install/command-line/eazel-revert.c: (main):
	Fixed the --port arg
	use unref instead of destroy
	
	* components/services/install/command-line/eazel-uninstall.c:
	(main):
	use unref instead of destroy
	
	* components/services/install/lib/eazel-install-corba-callback.h:
	* components/services/install/lib/eazel-install-corba-callback.c:
	(eazel_install_callback_unref), (eazel_install_callback_finalize),
	(eazel_install_callback_class_initialize):
	A unref instead of destroy
	
	* components/services/install/lib/eazel-install-corba-types.c:
	(packagedata_from_corba_packagedatastruct):
	Fixed for the new get_distribution_enum
	
	* components/services/install/lib/eazel-install-public.h:
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_unref), (eazel_install_finalize),
	(eazel_install_class_initialize):
	A unref instead of a destroy
	
	* components/services/install/lib/eazel-install-private.h:
	A boolean to indicate that the subcommand is running
	
	* components/services/install/lib/eazel-install-protocols.c:
	(eazel_install_fetch_package), (get_url_for_package),
	(get_search_url_for_package):
	Stuff to call the new OSD xml parsing. Plus some logic to check
	for a existing file. (used when EI_PROT_USE_NEW_CGI is set)
	Proper transfer of distro name (bug 1333)
	
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_all_packages), (uninstall_all_packages),
	(eazel_install_do_transaction_fill_hash),
	(eazel_install_do_transaction_get_total_size),
	(eazel_install_do_transaction_add_to_transaction),
	(eazel_install_start_transaction_make_rpm_argument_list),
	(eazel_install_start_transaction_make_argument_list),
	(eazel_install_do_transaction_save_report_helper),
	(eazel_install_do_transaction_save_report),
	(eazel_install_monitor_rpm_propcess_pipe),
	(eazel_install_monitor_process_pipe),
	(eazel_install_display_arguments),
	(eazel_install_monitor_subcommand_pipe),
	(eazel_install_start_transaction):
	Lot of renaming & some slashing to accomodate other package
	systems then rpm.
	New pipe parser for rpm -hv args, since --percent proved useless.
	
	* components/services/install/lib/eazel-install-xml-package-list.h:
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(osd_parse_implementation), (osd_parse_softpkg),
	(osd_parse_shared), (parse_osd_xml_from_memory):
	Implemented parsing of the OSD xml.
	 
	* components/services/install/nautilus-view/nautilus-service-install.
	c: (nautilus_service_install_done):
	Use the unref instead of destroy
	 
	* components/services/trilobite/libtrilobite/trilobite-core-distribut
	ion.h:
	* components/services/trilobite/libtrilobite/trilobite-core-distribut
	ion.c: (trilobite_get_distribution_enum_compact),
	(trilobite_get_distribution_enum_verbose),
	(trilobite_get_distribution_enum):
	Changed get_distro_enum to parse compact names.	
	 
	* nautilus-installer/src/callbacks.c: (begin_install),
	(prep_install):
	* nautilus-installer/src/callbacks.h:
	* nautilus-installer/src/installer.c: (eazel_install_progress),
	(eazel_download_progress), (download_failed),
	(eazel_install_preflight), (installer):
	* nautilus-installer/src/interface.c: (create_what_to_do_page),
	(create_install_page), (create_finish_page), (create_window):
	* nautilus-installer/src/main.c:
	* nautilus-installer/src/prescript:
	Some reslashing of the installer
	
	* po/da.po:
	Came across some missing translations

2000-08-10  John Sullivan  <sullivan@eazel.com>

	I accidentally committed before writing ChangeLog (wrong
	directory). So I'm reconstructing the changes I checked in
	a short while ago with no ChangeLog entry.

	Fixed 2075: (use NautilusFile objects for actual files,
	not symbolic links, in search interface).

	As a happy side effect, this fixed 2027 (thumbnails do not
	display in search results)

	* src/file-manager/fm-directory-view.h,
	* src/file-manager/fm-directory-view.c:
	(fm_directory_queue_notice_file_change): New function for
	subclasses to call when they want to put a file into the
	changed-files queue (which they usually don't need to since
	for the normal case the superclass handles this stuff)
	
	* src/file-manager/fm-icon-view.c: accidental white space 
	change only
	
	* src/file-manager/fm-list-view.h:
	(adding_file), (removing_file), (file_still_belongs):
	New function pointers for subclasses to optionally override.
	* src/file-manager/fm-list-view.c:
	(fm_list_view_adding_file): New function, called on each file
	as it is added to the NautilusList; calls overridable function
	pointer.
	(fm_list_view_removing_file): New function, called on each file
	as it is removed from the NautilusList; calls overridable function
	pointer.
	(fm_list_view_file_still_belongs): New function, asks whether changed
	file that was in list should be put back in; calls overridable function
	pointer.
	(real_adding_file): New function, refs file
	(real_removing_file): New function, unrefs file
	(real_file_still_belongs): New function, checks that file is still in
	this directory
	(fm_list_view_initialize_class): wire up these new function pointers
	to their new "real_" implementations
	(add_to_list): call fm_list_view_adding_file instead of just reffing
	(fm_list_view_clear), (remove_from_list): call fm_list_view_removing_file 
	instead of just unreffing; also, remove_from_list now returns a
	boolean for whether the item had been in the list.
	(fm_list_view_file_changed): Only re-insert the file if it had been
	in the list and fm_list_view_file_still_belongs is true.

	* src/file-manager/fm-search-list-view.c:
	(fm_search_list_view_initialize_class): wire up all the new overridden
	function pointers
	(real_add_file): overridden to get the real file that the funky
	search virtual file refers to, and put the real one in the list view
	(real_adding_file): overridden to start monitoring the file since
	the directory doesn't do it for us in this case
	(real_removing_file): overridden to stop monitoring the file
	(real_file_still_belongs): overridden to return TRUE as long as
	the file still exists

	* libnautilus-extensions/nautilus-file.c:
	* libnautilus-extensions/nautilus-file.h:
	Reverted all of rebecka's recent changes that made opening a
	file in the search list show the real file. This behavior just works
	automatically with no special code in the new design. But it turns
	out I didn't actually need to remove the code to make the new design
	work, because it never would have been called. There's still some
	even older nautilus-search-result-specific code in here that might
	be completely obsolete now.

2000-08-10  Andy Hertzfeld  <andy@eazel.com>

	added a text color paramter to nautilus_gdk_pixbuf_draw_text,
	as part of making the sidebar tabs use anti-aliased text, which
	will be checked in soon.
	
	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.h:
	added a text color parameter to nautilus_gdk_pixbuf_draw_text
	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.c:
	(nautilus_gdk_pixbuf_draw_text):
	set up the text color in the gc before drawing the text
	* libnautilus-extensions/nautilus-icon-factory.c: (embed_text):
	added a black text color parameter in the call to draw_text
	* libnautilus-extensions/nautilus-image.c:
	(nautilus_image_size_allocate):
	added a black text color parameter in the call to draw_text
	
2000-08-10  Arlo Rose  <arlo@eazel.com>

	* icons/arlo/arlo.xml:
	Fixed a bad file name

2000-08-10  Darin Adler  <darin@eazel.com>

	Fixed bug 2081 (crash changing themes). The problem was that
	the code to unregister the preference callback was doing it
	with the wrong callback data.
	
	* src/nautilus-window-private.h:
	* src/nautilus-window-toolbars.c: (set_up_button),
	(set_up_toolbar_images), (set_up_toolbar_images_callback),
	(nautilus_window_initialize_toolbars),
	(nautilus_window_toolbar_remove_theme_callback):
	* src/nautilus-window.c: (nautilus_window_destroy):
	Unregister the preference callback properly. This required passing
	in the window pointer.

2000-08-10  Rebecca Schulman  <rebecka@eazel.com>

	Fixed bug 2072, to make the size search field
	have an entry where the user can enter the
	number of "K" they want.

	* libnautilus-extensions/nautilus-search-bar-criterion-private.h:
	added field to include labels after the entry in a search
	criterion, if needed
	* libnautilus-extensions/nautilus-search-bar-criterion.c:
	(nautilus_search_bar_criterion_new_from_values),
	(nautilus_search_bar_criterion_next_new),
	(nautilus_search_bar_criterion_first_new), (get_size_location_for):
	use suffix to create new criteria now, and parse
	the size entry's text to mean K, rather than bytes.
	
	* src/nautilus-complex-search-bar.c:
	(attach_criterion_to_search_bar):
	attach the suffix as part of the value entry, if it exists.

2000-08-10  Ali Abdin  <aliabdin@aucegypt.edu>

        * components/help/converters/gnome-db2html2/gdb3html.h:
        * components/help/converters/gnome-db2html2/sect-elements.c:
        Add support for the acronym tag

2000-08-10  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-zoom-control.c: (create_zoom_menu_item),
	(create_zoom_menu):
	made the context menu in the zoom control put a check mark
	on the currently selected zoom level
	
2000-08-10  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/Makefile.am:
	* libnautilus-extensions/nautilus-directory-notify.h:
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-file-changes-queue.c:
	* libnautilus-extensions/nautilus-link.c:
	* libnautilus-extensions/nautilus-volume-monitor.c:
	Moved the notify calls to a separate header, since people were
	using them as an excuse to peek at NautilusDirectory's privates.
	
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_get_internal), (nautilus_directory_get),
	(nautilus_directory_get_existing): Cleaned up API so that
	internal code can get a directory without creating one.
	(get_parent_directory_if_exists): Used new API to cut down
	code a bit.
	(nautilus_directory_notify_files_removed),
	(nautilus_directory_notify_files_moved): Always create a
	NautilusFile object. This results in a bit more work, but is
	more compatible with the 1/2 done symbolic link change notify
	work.
	
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_internal): Don't create a new directory if
	being called in the mode where we don't create a new file.
	(update_link), (get_link_files),
	(update_links_if_target), (nautilus_file_update_info),
	(nautilus_file_mark_gone), (nautilus_file_emit_changed):
	More work on notifying links about changes to the target file.
	This isn't quite working and isn't required so I'll get back to it
	later. At the moment it is not doing any harm.

2000-08-10  Maciej Stachowiak  <mjs@eazel.com>

	* docs/state-machines.txt: a start on some design work for sane
	state machines that actually cover all the cases.

2000-08-10  Andy Hertzfeld <andy@eazel.com>

	* icons/backgrounds.png:
	* icons/colors.png:
	* icons/emblems.png:
	* icons/themes.png:
	updated images from Susan
	
2000-08-10  Ali Abdin  <aliabdin@aucegypt.edu>

        * components/help/converters/gnome-db2html2/gdb3html.h:
        * components/help/converters/gnome-db2html2/sect-elements.c:
        Added the following tags to enable preliminary table support:
        row, entry, table, informaltable, thead, tbody

        * components/help/converters/gnome-db2html2/sect-elements.c:
        * components/help/converters/gnome-db2html2/sect-elements.h:
        (sect_table_start_element), (sect_table_end_element),
        (sect_informaltable_start_element), (sect_row_start_element),
        (sect_row_end_element), (sect_entry_start_element),
        (sect_entry_end_element), (sect_thead_start_element),
        (sect_thead_end_element), (sect_tbody_start_element),
        (sect_tbody_end_element), (sect_informaltable_end_element):
        New functions for the new tags that were added for table support. This
        is based on a patch provided by John Fleck <jfleck@inkstain.net>

        (sect_title_start_element),
        (sect_title_end_element),
        (sect_title_characters): Handle title's within table's

        (sect_print): Some formatting fixes and free a GSList (plugs a memory
        leak).
        (sect_write_characters): Add a case for the <ENTRY> tag so if it is
        a null character to print a &nbsp;  (doesn't work right now)

        * components/help/converters/gnome-db2html2/TODO:
        Modify the TODO item about tables (it just needs testing)

2000-08-10  Maciej Stachowiak  <mjs@eazel.com>
 
 	* components/mozilla/nautilus-mozilla-content-view.c
 	(mozilla_uris_differ_only_by_fragment_identifier,
 	mozilla_location_changed_callback): Send fake load underway and
 	load done messages to Nautilus when the new URI differs from the
 	previous only by the fragment identifier (indicating that all we
 	did was change anchors). This allows URI references w/ fragment
 	identifiers to be displayed in the location bar properly.
 
2000-08-09  Mathieu Lacage  <mathieu@eazel.com>

	* src/file-manager/fm-search-list-view.c: (load_location_callback),
	(fm_search_list_view_initialize), (real_update_menus): fix the search
	title notification code. Depends on bug 1891 now.

2000-08-09  Gene Z. Ragan  <gzr@eazel.com>

	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize):
	Fixed assertion failure case by casting the wrong
	view to a NautilusIconContainer.
	
2000-08-09  Robin * Slomkowski  <rslomkow@eazel.com>

	* nautilus.spec.in: updated files

2000-08-09  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-first-time-druid.c: (druid_finished),
	(set_up_service_signup_page), (nautilus_first_time_druid_show):
	added a fourth alternative to the services page of the druid,
	for users who are already registered and want to log in.
	
2000-08-09  Andy Hertzfeld  <andy@eazel.com>

	* data/static_bookmarks.xml:
	added a new set of built-in bookmarks from Brian Frank.
	
2000-08-09  John Sullivan  <sullivan@eazel.com>

	Work on 1750 (add Reveal command to show search result in
	its "real" directory). I wired up the menu items, but they
	don't do anything yet.

	* src/file-manager/fm-directory-view.c: (compute_menu_item_info):
	Noticed that a g_strdup_printf should have been just a g_strdup
	
	* src/file-manager/fm-search-list-view.c:
	(fm_search_list_view_initialize_class): connect up functions for
	menu-merging stuff.
	(compute_reveal_item_name_and_sensitivity): New function, determine
	Reveal menu item title & sensitivity based on selection.
	(real_create_selection_context_menu_items): Put Reveal menu item
	in selection context menu.
	(real_merge_menus): Put Reveal menu item in File menu
	(real_update_menus): Update state of Reveal menu item in File menu

2000-08-09  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize):
	John helped me fix a crasher in trash empty state notification --
	signals were being delivered to nonexistent objects, used
	gtk_signal_connect_while_alive instead to fix things.

2000-08-09  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-file.c:
	* libnautilus-extensions/nautilus-file.h:
	(nautilus_file_is_nautilus_link):
	Added new API to identify file as nautilus link.

	* libnautilus-extensions/nautilus-directory-async.c:
	(start_getting_activation_uris):
	Call nautilus_file_is_nautilus_link and remove obsolete
	call to nautilus_link_is_link_file.
	
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_for_file):
	Call nautilus_file_is_nautilus_link and remove obsolete
	call to nautilus_link_is_link_file.

	* libnautilus-extensions/nautilus-link.c:
	* libnautilus-extensions/nautilus-link.h:
	(nautilus_link_get_link_type):
	New function that returns the type of link that the
	link represents.  Examples are home, trash and mount point.
		
	* libnautilus-extensions/nautilus-volume-monitor.c:
	(mount_device_mount), (mount_device_activate_cdrom), (eject_cdrom),
	(mount_device_check_change), (add_mount_device),
	(nautilus_volume_monitor_find_mount_devices), (remove_mount_link),
	(nautilus_volume_monitor_is_volume_link):
	Remove annoying debug code.

	* src/file-manager/fm-desktop-icon-view.c:
	(remove_old_mount_links):
	Fixed link celanup code to use new API.
	
	* src/file-manager/fm-icon-view.c: (get_icon_text_callback):
	Call nautilus_file_is_nautilus_link and remove obsolete
	call to nautilus_link_is_link_file.

2000-08-09  Rebecca Schulman  <rebecka@eazel.com>
	Fixed bug 1843, so that search results are activated
	as themselves.

	* libnautilus-extensions/nautilus-file.c:
	* libnautilus-extensions/nautilus-file.h:
	(nautilus_file_get_real_parent_uri_as_string),
	(nautilus_file_get_real_file),
	(nautilus_file_get_real_parent_directory),
	(nautilus_file_compare_by_real_directory),
	(nautilus_file_get_string_attribute),
	(nautilus_file_is_search_result), (nautilus_file_get_real_uri),
	(nautilus_file_get_real_directory_name), (nautilus_file_mark_gone),
	(nautilus_file_changed), (nautilus_file_check_if_ready),
	(nautilus_file_call_when_ready),
	(nautilus_file_cancel_call_when_ready):
	
	added special checks to get the real file and directory,
	and call them appropriately before opening a file.
	renamed the nautilus_file_get_real_directory function to
	nautilus_file_get_real_directory_name, and 
	made it private.  

	* libnautilus-extensions/nautilus-search-bar-criterion.h:
	* libnautilus-extensions/nautilus-search-bar-criterion.c:
	(nautilus_search_bar_criterion_human_from_uri),
	(get_name_location_for):
	fixed a starts_with that should have been "begins_with"

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_display_selection_info):
	moved a misplaced function comment
	
	* src/nautilus-switchable-navigation-bar.c:
	(nautilus_switchable_navigation_bar_set_location):
	added signalling to change to the search and location 
	bar appropriately with each location change

2000-08-09  Darin Adler  <darin@eazel.com>

	After this change, you will get a warning each time you exit
	unless you get the new Bonobo with my destroy-notify bug fix.

	Fixed the "metafile read fails" bug. Fixed a bunch of memory
	leaks that I found because I added a new function to get rid
	of hash tables at quit time and there's a hash table with all
	the NautilusDirectory objects in there. I'm only 1/2 done
	with what I'm working on, but people need the "read fails"
	bug fix.

	* components/help/help-method.c: (escape_for_shell),
	(help_uri_to_string): Improve code that constructs URIs so it
	doesn't to excessive escaping.
	
	* libnautilus-extensions/nautilus-directory-async.c:
	(metafile_read_failed): Fixed a bug that caused it to fail to
	read "public" metafiles.
	(new_files_callback): Redid the fix for "NULL names" to check
	the result from the call instead of checking the name for NULL.
	
	* libnautilus-extensions/nautilus-directory-background.c:
	(nautilus_connect_background_to_directory_metadata):
	Got rid of the dummy callback so the NautilusDirectory code
	knows that only the metadata needs to be monitored.
	
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_get): Got rid of silly ref and sink code.
	We don't use the floating feature, so we should just ignore it.
	Use the new function that creates a hash table that should be
	empty and freed on exit. This helps us detect leaks.
	(nautilus_directory_file_monitor_add): Got rid of incorrect
	code that would reject a caller that didn't supply a callback.
	Callers might want to monitor metadata only, not files.
	
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_new_from_name): Got rid of silly ref and sink code.
	We don't use the floating feature, so we should just ignore it.
	(modify_link_hash_table), (add_to_link_hash_table_list),
	(add_to_link_hash_table), (remove_from_link_hash_table_list),
	(remove_from_link_hash_table): Maintain a hash table to map from
	a URI to links to that URI.
	(nautilus_file_new_from_info): Got rid of silly ref and sink code.
	We don't use the floating feature, so we should just ignore it.
	To share more code, call nautilus_file_update_info as part of
	the implementation here.
	(nautilus_file_update_info): Maintain the hash table entries as
	the symlink_name field changes.
	
	* libnautilus-extensions/nautilus-glib-extensions.h:
	* libnautilus-extensions/nautilus-glib-extensions.c:
	(free_hash_tables_at_exit),
	(nautilus_g_hash_table_new_free_at_exit):
	Added new function to create a hash table that should be empty on
	exit, check that is is empty, and free it at exit time.

	* libnautilus-extensions/nautilus-global-preferences.c:
	Got rid of some function-pointer casting.
	
	* libnautilus-extensions/nautilus-icon-container.h:
	* libnautilus-extensions/nautilus-icon-container.c:
	(call_icon_callback), (nautilus_icon_container_for_each):
	Added a new call to iterate all the icons in the container.
	Needed so we can unref all the files when we empty it.
	
	* libnautilus-extensions/nautilus-glib-extensions.h:
	* libnautilus-extensions/nautilus-mime-actions.c:
	(nautilus_mime_get_short_list_applications_for_uri),
	(nautilus_mime_get_short_list_components_for_uri):
	Updated for name change: NautilusGPredicateFunc ->
	NautilusPredicateFunction.
	
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_destroy), (done_loading):
	Added code to stop and clear when destroying the directory view.
	
	* src/file-manager/fm-icon-view.c: (unref_cover),
	(fm_icon_view_clear): Added code to get rid of the refs on all
	the files when the icon view is cleared.
	
	* src/file-manager/fm-list-view.c: (fm_list_view_clear): Added
	code to get rid of the refs on all the files when the icon view is
	cleared.
	
	* src/file-manager/nautilus-trash-monitor.h:
	* src/file-manager/nautilus-trash-monitor.c:
	(nautilus_trash_monitor_initialize_class), (destroy),
	(unref_trash_monitor), (nautilus_trash_monitor_get),
	(nautilus_trash_monitor_is_empty):
	Added code to destroy the trash monitor on exit.
	
	* src/nautilus-bookmark-list.c:
	(nautilus_bookmark_list_initialize_class), (stop_monitoring_one),
	(clear), (destroy), (nautilus_bookmark_list_load_file): Added code
	to clear out the list at destroy time the same way we already did
	before loading a file.
	
	* src/nautilus-window-menus.c: (free_bookmark_list),
	(get_bookmark_list): Add code to free the global bookmark list
	on exit to help with leak checking.
	(refresh_go_menu): Changed to use GList instead of GSList.
	
	* src/nautilus-window-private.h:
	* src/nautilus-window.c: (nautilus_window_destroy):
	Unref the current_location_bookmark and last_location_bookmark
	to fix a leak.
	(free_history_list), (nautilus_add_to_history_list): Free the
	history list at exit time to make it easier to spot leaks.
	(nautilus_window_get_history_list_callback): Change the history
	list to be a GList instead of GSList.

2000-08-09  John Sullivan  <sullivan@eazel.com>

	Finished bug 1753 (search results should start out sorted
	by search criteria). Now we can decide whether we actually
	like this UI or not.

	* libnautilus-extensions/nautilus-search-bar-criterion.h:
	* libnautilus-extensions/nautilus-search-bar-criterion.c:
	(nautilus_search_uri_get_first_criterion): New function, returns
	name of first criterion in search.
	
	* src/file-manager/fm-search-list-view.c:
	(get_sort_attribute_from_search_criterion): New function, maps
	between search criteria names and file attribute names.
	(real_get_default_sort_attribute): Use this new function to
	determine which file attribute name to sort by. Uses "name"
	by default if there's no column matching the sort criteria
	(e.g. "content").

2000-08-09  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar-tabs.c: (nautilus_sidebar_tabs_hit_test),
	(measure_total_height), (recalculate_size),
	(nautilus_sidebar_tabs_size_allocate),
	(nautilus_sidebar_tabs_size_request):
	fixed bug in measuring tab heights for themed tabs
	
2000-08-09  John Sullivan  <sullivan@eazel.com>

	* src/nautilus-first-time-druid.c: 
	(set_up_service_signup_page): Fixed typo in first-time
	druid text that Susan Space wanted for the demo.

2000-08-09  Maciej Stachowiak  <mjs@eazel.com>

	* components/tree/nautilus-tree-expansion-state.c,
	components/tree/nautilus-tree-expansion-state.h: Skeleton of a
	class to help me manage the expansion state.
	* components/tree/Makefile.am: Added it to the build.

2000-08-09  John Sullivan  <sullivan@eazel.com>

	A little more work towards bug 1753 (search results should
	start out sorted by search criteria) and a bug fix.

	* libnautilus-extensions/nautilus-search-bar-criterion.h:
	Make #define constants for the criteria parts of search URIs
	(e.g. "file_name", "size", "content", etc.)

	* libnautilus-extensions/nautilus-search-bar-criterion.c:
	(get_name_location_for), (get_content_location_for),
	(get_file_type_location_for), (get_size_location_for),
	(get_emblem_location_for), (get_date_modified_location_for),
	(get_owner_location_for): Use these constants when creating
	the URI used by complex search bar.
	* src/nautilus-simple-search-bar.c:
	(nautilus_simple_search_criteria_to_search_uri):
	Use these constants when creating the URI used by simple
	search bar. Also added a FIXME about how the simple search
	bar should be sharing the URI-generation code of the
	complex search bar.

	* src/nautilus-complex-search-bar.c: (criterion_callback):
	Update sensitivity of "Find" button when user chooses
	different criterion from menu. This fixes bug where switching
	from an empty text-type value to a menu-type value would leave
	the "Find" button insensitive.

2000-08-09  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar-tabs.c: (nautilus_sidebar_tabs_hit_test),
	(recalculate_size), (nautilus_sidebar_tabs_size_allocate),
	(nautilus_sidebar_tabs_size_request), (draw_one_tab_plain),
	(draw_one_tab_themed), (draw_or_layout_all_tabs),
	(nautilus_sidebar_tabs_expose):
	
	revamped how hit-testing works for the sidebar tabs; now that tabItem
	structure contains a rectangle maintained by the drawing routines.
	This fixed a number of sidebar tab bugs, especially in the
	themed tabs.	
	
2000-08-09  Ramiro Estrugo  <ramiro@eazel.com>

	Make Nautilus tolerant to window titles and component geometries
	that are too huge to be usable.
	
	* libnautilus-extensions/nautilus-string.c:
	(nautilus_str_middle_truncate), (nautilus_self_check_string):
	* libnautilus-extensions/nautilus-string.h:
	New function for truncating strings in the middle.

	* src/nautilus-window-manage-views.c:
	(nautilus_window_update_title_internal):
	Truncate titles to something reasonable to avoid the window
	manager from making the window too huge to be usable.

	* src/nautilus-window.c: (nautilus_window_initialize_class),
	(nautilus_window_realize), (nautilus_window_size_request):
	Limit the window geometry requisition to within the avaialble
	screen real state.
	
2000-08-09  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_is_in_trash):
	* src/file-manager/dfos-xfer.c: (fs_xfer), (fs_move_to_trash),
	(fs_empty_trash):
	* src/file-manager/fm-directory-view.c: (fm_directory_is_trash),
	(fm_directory_can_move_to_trash):
	* src/file-manager/nautilus-trash-monitor.c:
	(nautilus_trash_monitor_initialize):
	* src/nautilus-desktop-window.c: (nautilus_desktop_window_new):

	Support new find_if_needed parameter of gnome_vfs_find_directory.

2000-08-09  Ramiro Estrugo  <ramiro@eazel.com>

	* components/mozilla/nautilus-mozilla-content-view.c:

	I accidentally left debuging noise on.
	
2000-08-09  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-link.c: (nautilus_link_create),
	(nautilus_link_set_icon), (nautilus_link_set_type):
	Added ability to set the type of a NautilusLink, such as
	mount link, trash link, home link, etc.
	
	* libnautilus-extensions/nautilus-volume-monitor.c:
	(mount_device_mount), (nautilus_volume_monitor_is_volume_link):
	Specify that link is a mount link.
		
	* src/file-manager/fm-desktop-icon-view.c: (place_home_directory):
	Specify that link is a home link.
	
	* src/nautilus-desktop-window.c: (nautilus_desktop_window_new):
	Specify that trash is a trash link.

2000-08-09  Ramiro Estrugo  <ramiro@eazel.com>

	Add support for Mozilla m17.
	
	* configure.in:
	Add some artificial intelligence to detect whether the mozilla
	we are using is m17.
		
	* components/mozilla/Makefile.am:
	Define the mozilla milestone version.
		
	* components/mozilla/nautilus-mozilla-content-view.c:
	(nautilus_mozilla_content_view_initialize),
	(debug_print_state_flags), (debug_print_status_flags),
	(mozilla_net_state_callback), (mozilla_net_status_callback),
	(mozilla_progress_callback):

	Update for changes in the mozilla embedding api.  Also, simplify
	the status/state flag debugging stuff a bit.
	
Tue Aug 08 23:23:50 2000  George Lebl <jirka@5z.com>

	* libnautilus-extensions/nautilus-mime-actions.c
	  (nautilus_mime_get_default_application_fo)
	  (nautilus_mime_get_short_list_application)
	  (nautilus_mime_get_all_applications_for_u):
	  Use the new application registry api.  Also remove the hack for
	  "merging" (bug 1268) the application with short list as this
	  should now be not necessary because of the application registry.

	* src/nautilus-sidebar.c (command_button_callback):
	  Use the new application registry api and check for NULL
	  return from get_mime_application just for sanity's sake.

2000-08-08  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(update_label_color):
	removed a debugging statement I inadvertently left in yesterday.
	
2000-08-08  Arlo Rose  <arlo@eazel.com>

	* icons/arlo/arlo.xml:
	Added new hex values for the selection rectangle.

2000-08-08  Robin * Slomkowski  <rslomkow@eazel.com>

	* libnautilus-extensions/Makefile.am: forgotten headers

2000-08-08  John Sullivan  <sullivan@eazel.com>

	Did part of the work for bug 1753 (search view should start out
	sorted by search criteria). We're still not sure if this is a
	good UI, but I'll make it possible for us to try it out if it
	isn't too much more work.

	* src/file-manager/fm-directory-view.c: Added a FIXME comment
	
	* src/file-manager/fm-list-view.h: Added get_default_sort_attribute
	function pointer.
	* src/file-manager/fm-list-view.c: 
	(fm_list_view_initialize_class): Wired up default_sort_attribute
	function pointer.
	(fm_list_view_begin_loading): use get_default_sort_attribute ()
	instead of string constant.
	(get_default_sort_attribute): Dispatch to possibly overridden 
	function pointer.
	(real_get_default_sort_attribute): return "name" (dupe, actually)
	
	* src/file-manager/fm-search-list-view.c:
	(fm_search_list_view_initialize_class): Wired up 
	get_default_sort_attribute function pointer
	(real_get_default_sort_attribute): return "name" (dupe, actually).
	This gives us the place to decide which attribute to start out
	sorted by. To choose the attribute, we need to define a mapping
	between the search URI and one of the column attributes. I'm
	waiting on this part until mathieu gets farther along with the
	search-URI-to-human-readable-string code, which I hope to
	leverage.

2000-08-08  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar-tabs.c: (nautilus_sidebar_tabs_initialize),
	(nautilus_sidebar_tabs_destroy), (get_tab_width),
	(draw_or_hit_test_all_tabs):
	fixed lots of problems with the arlo-themed sidebar tabs, as well as
	fixing the tab wrapping for the non-arlo ones as well.
	
	* libnautilus-extensions/nautilus-icon-container.c:
	(start_rubberbanding):
	implemented Carbamide's suggestion of specifying the select box
	color in the theme.
	* icons/arlo/arlo.xml:
	changed the arlo theme to use a custom select box color, although
	Arlo will probably pick a better one soon.
	
2000-08-08  Ali Abdin  <aliabdin@aucegypt.edu>

        * components/help/converters/gnome-db2html2/gdb3html.c:
        (get_entity): Change a 'gchar' to a 'char'
        
        * components/help/converters/gnome-db2html2/sect-elements.c:
        (sect_menu_start_element): Remove inadvertant comments

        * components/help/converters/gnome-db2html2/sect-elements.[ch]:
        (sect_interface_start_element),
        (sect_interface_end_element): Remove these functions. They were only
        providing CSS tags, but we only provide HTML tags :)

        * components/help/html/help-method.c:
        (transform_file) Try a file with an '.xml' extension (for Docbook XML)

2000-08-08  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-file.c:
	* libnautilus-extensions/nautilus-file.h:
	Fix FIXME 1887 - deleting files is now handled separately,
	get rid of the old version that used a synch gnome vfs call.

2000-08-08  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_real_create_selection_context_menu_items):
	Make the context menu choose between "Move to Trash" and
	"Delete..." in the same way the File menu does.

2000-08-09  Ian McKellar  <yakk@yakk.net.au>

	* libnautilus-extensions/nautilus-directory-async.c:
	(new_files_callback):
	Fixed a seg-fault that occured when a drag and drop to a WebDAV
	repository failed (due to permissions or something like that). The
	fixed involved simply checking that the GnomeVFSFileInfo passed to
	the new_files_callback by GnomeVFS was valid.

2000-08-08  John Sullivan  <sullivan@eazel.com>

	Fixed a couple of problems that yakk ran into that were
	preventing files from opening correctly in WebDAV.

	* src/file-manager/fm-directory-view.c: 
	(file_is_launchable): Check for "can_get_permissions" before
	checking executability. If you can't get the permissions then
	we won't assume the file is launchable.
	(activate_callback): This was launching local executables
	but trying to launch NULL in the remote executable case.
	Reworked to fall through to the non-executable code for remote
	executables.

2000-08-08  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-gdk-extensions.c:
	(nautilus_get_largest_fitting_font):
	Fixed crasher.  Was always assuming that gdk_font_load would
	return a valid font.  This is not the case.  The code will
	now properly traverse the array to look for the requested
	size. 
	
	* libnautilus-extensions/nautilus-icon-container.c:
	(get_icon_space_height), (lay_down_one_line_vertical),
	(lay_down_icons_horizontal), (lay_down_icons_vertical),
	(lay_down_icons), (relayout), (reload_icon_positions),
	(nautilus_icon_container_initialize), (finish_adding_new_icons),
	(nautilus_icon_container_set_layout_mode):
	* libnautilus-extensions/nautilus-icon-container.h:
	* libnautilus-extensions/nautilus-icon-private.h:
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize):
	Work on making the icon layout code more flexible so that
	we can have differing layout schemes.  This is specifically
	for the desktop layout requirements.
	
2000-08-08  John Sullivan  <sullivan@eazel.com>

	Fixed bug 1749 (Show Properties should be disabled in 
	search results)

	* src/file-manager/fm-directory-view.h: added new function
	pointer supports_properties and new function
	fm_directory_view_supports_properties.
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize_class): Fill in supports_properties 
	function pointer with fm_directory_view_real_supports_properties.
	(compute_menu_item_info): Use fm_directory_view_supports_properties
	to decide whether to make "Show Properties" sensitive.
	(fm_directory_view_supports_properties): New function, calls 
	possibly-overridden function pointer.
	(fm_directory_view_real_supports_properties): New function,
	returns TRUE.
	* src/file-manager/fm-search-list-view.c:
	(fm_search_list_view_initialize_class): Fill in supports_properties
	function pointer with real_supports_properties.
	(real_supports_properties): return FALSE.

2000-08-08  John Sullivan  <sullivan@eazel.com>

	Fixed real and potential memory leaks involving
	nautilus_directory_wait_until_ready.

	* libnautilus-extensions/nautilus-mime-actions.c:
	(nautilus_directory_wait_for_metadata): New function,
	calls _wait_until_ready with no attributes and
	TRUE for metadata, then frees result. The result as
	currently implemented will always be NULL in this case
	but there's no guarantee of that so it's safer to free
	the result.
	
	(nautilus_mime_get_default_action_type_for_uri),
	(nautilus_mime_get_default_application_for_uri_internal),
	(nautilus_mime_get_short_list_applications_for_uri),
	(nautilus_mime_get_all_applications_for_uri),
	(nautilus_mime_set_default_action_type_for_uri),
	(nautilus_mime_set_default_application_for_uri),
	(nautilus_mime_set_default_component_for_uri),
	(nautilus_mime_set_short_list_applications_for_uri),
	(nautilus_mime_set_short_list_components_for_uri),
	(nautilus_mime_extend_all_applications_for_uri),
	(nautilus_mime_remove_from_all_applications_for_uri):
	Use nautilus_directory_wait_for_metadata.
	
	(nautilus_mime_get_default_component_for_uri_internal),
	(nautilus_mime_get_all_components_for_uri): free results
	of nautilus_directory_wait_until_ready.

	(nautilus_mime_get_short_list_components_for_uri): free
	results of nautilus_directory_wait_until_ready, also
	removed extra call to _wait_until_ready.

2000-08-07  Maciej Stachowiak  <mjs@eazel.com>

	* components/html/ntl-web-browser.oafinfo:
	* components/mozilla/nautilus-mozilla-content-view.oafinfo:
	* components/music/nautilus-music-view.oafinfo:
	* components/shell/shell.oafinfo:
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_is_search_directory):
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_type_as_string):
	* src/nautilus.oafinfo:

        Renamedirectory mime types: 

	x-special/directory            =>   x-directory/normal
	x-special/webdav-directory     =>   x-directory/webdav
	x-special/virtual-directory    =>   x-directory/search
	
	
2000-08-07  Andy Hertzfeld  <andy@eazel.com>

	last minute tweak for demo release of info color text: now it
	gets it from the current theme
	* icons/arlo/arlo.xml:
	added info color values for arlo theme
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(nautilus_icon_canvas_item_initialize_class):
	made the selected info color a more neutral gray
	* libnautilus-extensions/nautilus-icon-container.c:
	(update_label_color):
	get the info color from the theme
	* src/nautilus-sidebar-title.c:
	(nautlius_sidebar_title_select_text_color):
	for now, use the same color as the name
	
2000-08-07  Maciej Stachowiak  <mjs@eazel.com>

	* CVSVERSION: New file, used to detect whether we are configuring
	a cvs version or a release tarball.
	
	* configure.in: Default -Werror to off when configuring a release
	tarball, and to on when configuring a cvs version.

2000-08-07  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/rpmview/nautilus-rpm-view.c:
	(nautilus_rpm_view_update_from_uri):
	Fixed bug 1657, package view misread rpm description and summary.
	
2000-08-07  Ramiro Estrugo  <ramiro@eazel.com>

	* src/nautilus-zoom-control.c:
	* src/nautilus-zoom-control.h:

	Revert the subclass change i made.  Turns out its not needed.  The
	fix was to make the Eazel theme grok the "GtkEventBox" style
	class - as all other "nice" themes do.

2000-08-07  John Sullivan  <sullivan@eazel.com>

	Made preview bug 2017 no longer crash. That's the "Up button
	in search results" one. Darin is planning to make it be
	disabled like it should have been, which is a fix in gnome-vfs.
	Special dispensation from Robin to check this in.

	* src/nautilus-window.c: (nautilus_window_go_up): Check for
	NULL parent_uri and bail out if so.

2000-08-07  John Sullivan  <sullivan@eazel.com>

	Part of bug 2005 (Should display error message when search
	fails because search demon isn't running)

	Rebecka did all the underlying error-code-handling, which isn't
	quite working yet. I'm checking in this UI step even in advance
	of that.

	* src/nautilus-applicable-views.h: New NautilusNavigationResult
	NAUTILUS_NAVIGATION_RESULT_SERVICE_NOT_AVAILABLE. This mechanism,
	invented by me, seems really hoary now.
	* src/nautilus-applicable-views.c:
	(get_nautilus_navigation_result_from_gnome_vfs_result):
	Translate beween GnomeVFSResult and NautilusNavigationResult.
	* src/nautilus-window-manage-views.c: 
	(is_search_uri): New function, checks whether the URI starts
	with "search:".
	(nautilus_window_end_location_change_callback): If the error
	is SERVICE_NOT_AVAILABLE and it's a search uri, put up a custom
	error message. It's not a very helpful message at this point, but 
	at least the user gets some kind of feedback.

2000-08-07  Darin Adler  <darin@eazel.com>

	Fixed "make check".

	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_self_check_directory): Fixed a self check that no longer
	matched the code.
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_compare_for_sort),
	(nautilus_file_compare_for_sort_reversed): Fixed a bug that was
	causing reverse sorts to work wrong (caught by self check).
	* libnautilus-extensions/nautilus-string.c:
	(nautilus_str_get_prefix), (nautilus_self_check_string):
	Fixed some incorrect self checks and a small error in get_prefix
	that was exposed by a self check.

2000-08-07  Seth Nickell  <seth@eazel.com>

	* libnautilus-extensions/nautilus-file-utilities.c:
	(nautilus_self_check_file_utilities):
	* libnautilus-extensions/nautilus-lib-self-check-functions.h:
	Add testing rig for the forming and escaping of user-inputted URIs.
	
2000-08-07  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/command-line/eazel-alt-install-corba.c:
	(set_parameters_from_command_line):
	* components/services/install/idl/trilobite-eazel-install.idl:
	* components/services/install/lib/eazel-install-corba-types.c:
	(corba_category_list_from_categorydata_list):
	* components/services/install/lib/eazel-install-corba.c:
	(impl_Eazel_Install__set_package_list),
	(impl_Eazel_Install__get_package_list), (eazel_install_get_epv):
	* components/services/install/lib/eazel-install-protocols.c:
	(filename_from_url):
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(eazel_install_do_rpm_transaction_process_pipe),
	(do_rpm_transaction):
	The cli tool can now read from a local xml file and if the rpm's
	are present (this depends on all fields in the xml being filled)
	it will use those.
	
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(generate_xml_package_list):
	* nautilus-installer/src/installer.c: (installer):
	* nautilus-installer/src/main.c:
	Some patches for reading local files (bug#2021)

2000-08-07  J Shane Culpepper  <pepper@eazel.com>

	* components/services/inventory/Makefile.am:
	* components/services/inventory/idl/.cvsignore:
	* components/services/inventory/idl/Makefile.am:
	* components/services/inventory/idl/trilobite-eazel-inventory.idl:
	* components/services/inventory/lib/Makefile.am:
	* components/services/inventory/nautilus-view/Makefile.am:
	* components/services/inventory/nautilus-view/icons/.cvsignore:
	* components/services/inventory/nautilus-view/icons/Makefile.am:
	* components/services/inventory/service/.cvsignore:
	* components/services/inventory/service/Makefile.am:
	* components/services/inventory/service/main.c:
	*
	components/services/inventory/service/trilobite-eazel-inventory-imp
	l.c:
	* components/services/login/Makefile.am:
	* components/services/login/idl/.cvsignore:
	* components/services/login/idl/Makefile.am:
	* components/services/login/idl/trilobite-eazel-login.idl:
	* components/services/login/lib/.cvsignore:
	* components/services/login/lib/Makefile.am:
	* components/services/login/lib/trilobite-eazel-login-public.h:
	* components/services/login/nautilus-view/Makefile.am:
	* components/services/login/nautilus-view/icons/.cvsignore:
	* components/services/login/nautilus-view/icons/Makefile.am:
	* components/services/login/service/.cvsignore:
	* components/services/login/service/Makefile.am:
	* components/services/login/service/main.c:
	* components/services/login/service/trilobite-eazel-login-impl.c:
	* components/services/startup/Makefile.am:
	* components/services/startup/lib/.cvsignore:
	* components/services/startup/lib/Makefile.am:
	* components/services/startup/nautilus-view/Makefile.am:
	* components/services/startup/nautilus-view/icons/.cvsignore:
	* components/services/startup/nautilus-view/icons/Makefile.am:
	* components/services/summary/Makefile.am:
	* components/services/summary/idl/.cvsignore:
	* components/services/summary/idl/Makefile.am:
	* components/services/summary/idl/trilobite-eazel-summary.idl:
	* components/services/summary/lib/.cvsignore:
	* components/services/summary/lib/Makefile.am:
	* components/services/summary/lib/trilobite-eazel-summary-public.h:
	* components/services/summary/nautilus-view/Makefile.am:
	* components/services/summary/nautilus-view/icons/.cvsignore:
	* components/services/summary/nautilus-view/icons/Makefile.am:
	* components/services/summary/service/.cvsignore:
	* components/services/summary/service/Makefile.am:
	* components/services/summary/service/main.c:
	*
	components/services/summary/service/trilobite-eazel-summary-impl.c:
	* components/services/vault/Makefile.am:
	* components/services/vault/command-line/Makefile.am:
	* components/services/vault/idl/.cvsignore:
	* components/services/vault/idl/Makefile.am:
	* components/services/vault/idl/trilobite-eazel-vault.idl:
	* components/services/vault/lib/.cvsignore:
	* components/services/vault/lib/Makefile.am:
	* components/services/vault/lib/trilobite-eazel-vault-public.h:
	* components/services/vault/nautilus-view/.cvsignore:
	* components/services/vault/nautilus-view/Makefile.am:
	* components/services/vault/nautilus-view/icons/.cvsignore:
	* components/services/vault/nautilus-view/icons/Makefile.am:
	* components/services/vault/nautilus-view/main.c:
	* components/services/vault/nautilus-view/nautilus-vault-view.c:
	* components/services/vault/nautilus-view/nautilus-vault-view.h:
	* components/services/vault/service/.cvsignore:
	* components/services/vault/service/Makefile.am:
	* components/services/vault/service/main.c:
	* components/services/vault/service/trilobite-eazel-vault-impl.c:
	* configure.in:

	Removing lots of empty files and useless directory structures so that
	the source tarballs will look much better and useless files won't be
	installed.  Hope this doesn't break anyone's buildtree.

2000-08-07  Darin Adler  <darin@eazel.com>

	Fixed bugs 1985 and 1986 (infinite loops using Mozilla).
	Both were triggered by the fact that Mozilla reports that
	it is done before it reports that it is underway. Made
	the state machine less picky about this.
	
	* src/nautilus-window-manage-views.c:
	(nautilus_window_set_state_info): Made the "DONE" state
	also do all the "INITIAL" state work so that reporting
	you are done before you report that you started does not
	cause any trouble.
	
	* docs/recommended-books.html: Fixed a bad URL in here.
	
	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_set_single_click_mode): Fixed formatting.
	
	* src/nautilus-window.c: (nautilus_window_go_home):
	Use real function to convert path to URI instead of just
	prepending "file://".

2000-08-07  Ramiro Estrugo  <ramiro@eazel.com>

	Fix bug 2019.  Zoom control doesnt play nicely with gtk theme
	backgrounds.
	
	* src/nautilus-zoom-control.h:
	Subclass this beast from GtkMisc instead of GtkEventBox to get all
	the default widget behaviors.

	* src/nautilus-zoom-control.c:
	(nautilus_zoom_control_initialize_class),
	(nautilus_zoom_control_initialize), (draw_zoom_control_image),
	(nautilus_zoom_control_draw), (nautilus_zoom_control_expose):

	Change the code that drew the symbol backgrounds to clear their
	area instead of drawing a box.  This causes the default
	background to be rendered instead of a blank area ironically.

	Also, clear the background before drawing the widget so that the
	we get the same effect as above on the whole widget.
	
2000-08-07  Arlo Rose  <arlo@eazel.com>
	
	* icons/arlo/increment-i.png
	* icons/arlo/decrement-i.png
	* icons/arlo/Makefile.am
	Add disabled zoom widgets.

2000-08-07  John Sullivan  <sullivan@eazel.com>

	Fixed bug 1979 (Crash involving bookmarks)

	Gene did all the hard work of finding a reproducible case
	for this. From there it was easy for me to fix the bug
	in code I wrote. He gets 3/4 of all klocs assigned for
	this bug.

	* src/nautilus-window-menus.c: 
	(nautilus_window_remove_bookmarks_menu_items): 
	Set last_static_bookmark_path to NULL after removing menu 
	items from bookmarks menu.
	(refresh_all_bookmarks): 
	Call nautilus_window_remove_bookmarks_menu_items instead 
	of lower-level remove_bookmarks_after.

Mon Aug 07 14:47:28 2000  George Lebl <jirka@5z.com>

	* libnautilus-extensions/nautilus-list-column-title.c
	  (nautilus_list_column_title_initialize) 
	  (nautilus_list_column_title_finalize)
	  (nautilus_list_column_title_buffered_draw)
	  (offscreen_drawing_idle_handler)
	  (nautilus_list_column_title_queue_buffered_draw)
	  (nautilus_list_column_title_motion)
	  (nautilus_list_column_title_leave)
	  (nautilus_list_column_title_button_press)
	  (nautilus_list_column_title_button_release):
	  Redo drawing buffered background, stop using a widget, and
	  allocate the gc and the offscreen pixmap only for the draw
	  and free them afterwards.  Also do the buffered draw in an idle
	  handler to avoid too many draws.  Obscoletes bug 614.

	* src/file-manager/fm-list-view.c (remove_from_list):
	  Instead of a warning just ignore the file if it's not in
	  the list anymore.  This is what the icon view does and
	  apparently we can get multiple file_changed calls which
	  will cause this.  Fixes bug 1961

2000-08-07  Ramiro Estrugo  <ramiro@eazel.com>

	Fix bug 1903.  Pick a better sidebar font.
	
	* libnautilus-extensions/nautilus-gdk-extensions.c:
	(nautilus_get_largest_fitting_font):

	Change the number of sizes to choose from to 4 (from 5).  Also,
	remove the 28 size which is usually unavailable.  This size is what
	was causing the ugliness in the font.
	
	* src/nautilus-sidebar-title.c: (update_font):

	Changed the font to bold.
	
2000-08-07  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/command-line/eazel-alt-install-corba.c:
	(main):
	Added --query, to test the corba query stuff
	
	* components/services/install/command-line/eazel-package-query.c:
	Removed some erratic #defs.
	
	* components/services/install/command-line/genpkg_list.example:
	Now has an error on purpose, to test the error checking
	
	* components/services/install/idl/trilobite-eazel-install.idl:
	Renamed the query to simple_query
	
	* components/services/install/lib/eazel-install-corba-callback.c:
	(impl_install_failed), (impl_uninstall_failed),
	(eazel_install_callback_simple_query),
	(eazel_install_callback_revert_transaction):
	* components/services/install/lib/eazel-install-corba-callback.h:
	* components/services/install/lib/eazel-install-corba-types.c:
	(corba_packagedatastruct_from_packagedata):
	* components/services/install/lib/eazel-install-corba.c:
	(impl_Eazel_Install_simple_query), (eazel_install_get_epv):
	* components/services/install/lib/eazel-install-query.c:
	(eazel_install_simple_rpm_query), (eazel_install_simple_query):
	Finished the corbafication of simple_query and added some const's
	to some arguments.
		
	* components/services/install/lib/eazel-install-protocols.c:
	(http_fetch_remote_file):
	Fixed a bug where the first download-progress emit got called with
	total == 0.
	
	* components/services/install/lib/eazel-install-query.h:
	Removed debug output.
	
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(eazel_install_do_rpm_transaction_process_pipe),
	(eazel_install_do_rpm_transaction_save_report),
	(do_rpm_transaction), (eazel_install_fetch_rpm_dependencies):
	Am tryink to fix the installer. Havink problems reading the output
	from rpm, since it apparently gets buffered somewhere.
	
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(generate_xml_package_list):
	Added error checking to the :-seperated values parsing.
	
	* components/services/install/lib/makefile.staticlib.in:
	More static linking fun.
	
	* nautilus-installer/src/Makefile:
	* nautilus-installer/src/Makefile.am:
	* nautilus-installer/src/installer.c: (eazel_install_progress),
	(eazel_download_progress), (download_failed),
	(eazel_install_preflight), (eazel_install_dep_check),
	(eazel_install_delete_files), (installer):
	* nautilus-installer/src/interface.c: (create_window):
	* nautilus-installer/src/link.sh:
	* nautilus-installer/src/prescript:
	Okaeh, the installer is slight prettier, but the install progress
	is screwed because of the problem with progress bar.

2000-08-07  John Sullivan  <sullivan@eazel.com>

	Fixed bug 1969 enough for now (search bar buttons should
	become sensitive & insensitive appropriately). Will write
	up bug reports about remaining issues.

	Made the "Find" button only be sensitive if all text-entry
	fields are non-empty. (Did this for both simple & complex
	search bar). Cleaned up some other code that I couldn't
	avoid in there too.

	* src/nautilus-simple-search-bar.c:
	Define Details struct.
	(nautilus_simple_search_bar_initialize_class): Wire up
	destroy handler.
	(search_text_is_invalid): New function, returns TRUE if the
	text is empty.
	(update_simple_find_button_state): New function, sets the
	sensitivity of the find button based on search_text_is_invalid.
	(activated_search_field): New function, calls location_changed
	only if text is valid.
	(nautilus_simple_search_bar_initialize): Initialize Details field;
	change "activate" signal on text field to call 
	activated_search_field instead of calling location_changed directly
	so it can handle the text-invalid case; wired "change" signal of
	text field to update_simple_find_button_state; call update_simple_
	find_button_state once after setting up widgets; simplify
	widget-creation code.
	(nautilus_simple_search_bar_destroy): Free details field.
	(nautilus_simple_search_bar_set_location),
	(nautilus_simple_search_bar_get_location): Updated to use Details.
	* src/nautilus-simple-search-bar.h: Replaced several fields in 
	NautilusSimpleSearchBar struct with new Details field. Among
	the replaced fields were some undo-related ones that were not
	yet used anywhere, so I left them out of Details.

	* src/nautilus-complex-search-bar.c:
	(criteria_invalid): Walks through the list of criteria, checking
	whether any of the text-field ones have empty text. Later we
	could add other types of checks in here.
	(update_options_buttons_state): Just added FIXME comment.
	(update_find_button_state): New function, sets sensitivity
	of find button based on criteria_invalid.
	(update_dynamic_buttons_state): New function, calls the other
	two button-updating functions.
	(nautilus_complex_search_bar_initialize_class): Wire up destroy 
	handler.
	(more_options_callback), (fewer_options_callback), 
	(nautilus_complex_search_bar_initialize): 
	Call update_dynamic_buttons_state instead of just 
	update_options_buttons_state.
	(nautilus_complex_search_bar_destroy): free Details struct. This
	was leaking before.
	(attach_criterion_to_search_bar): Attach update_find_button_state
	to "changed" signal of any new text-entry field.
	
2000-08-07  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar-title.c:
	(nautlius_sidebar_title_select_text_color):
	Darin suggested that we make the sidebar echo the icon view's
	use of color to distinguish the name from the additional info,
	so I did it.
	
2000-08-07  Ali Abdin  <aliabdin@aucegypt.edu>

        * components/help/converters/gnome-db2html2/gdb3html.h:
        * components/help/converters/gnome-db2html2/sect-elements.h:
        * components/help/converters/gnome-db2html2/sect-elements.c:
        (sect_span_interface_start_element),
        (sect_span_interface_end_element): Two new functions for the
	'interface' tag.

        (sect_link_start_element),
        (sect_link_end_element): Two new functions for the 'link' tag

        (sect_menu_start_element),
        (sect_menu_end_element): Two new functions for the 'guisubmenu' and
        'guimenu' tags. These are needed because the previous implementation
        was incorrect.

        Also the prototypes for the above functions and added the following
        tags: interface, link, menuchoice (yes menuchoice is back!)

        Modified the guimenu/guisubmenu tag to only be bold and display the
        'arrow' if they are enclosed in the menuchoice tag. If they are not
        enclosed, just 'print' the characters. This is how jade (a.k.a db2html
        does it)

        * components/help/converters/gnome-db2html2/sect-elements.c:
        (sect_title_characters),
        (sect_xref_start_element): s/ghelp/help


2000-08-07  Pavel Cisler  <pavel@eazel.com>

	Fix bug 1941 -- Context menus need to be clicked twice.

	* libnautilus-extensions/nautilus-gtk-extensions.c:
	(nautilus_pop_up_context_menu):
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	When invoked from anywhere but the button_press call, we need to
	pass 0 for button otherwise the next click will not be handled.
	Add a way to pass the button as a parameter.

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_pop_up_selection_context_menu),
	(fm_directory_view_pop_up_background_context_menu):
	Pass 0 for button
	
	* src/nautilus-sidebar.c: (nautilus_sidebar_press_event):
	* src/nautilus-window-toolbars.c:
	(back_or_forward_button_clicked_callback):
	Called from button_press, pass the actual button.
	
2000-08-07  John Sullivan  <sullivan@eazel.com>

	Fixed bug 1422 (dropping an icon at the edge doesn't update
	the scrollable area)

	Start of bug 1969 (search controls need to adjust sensitivity
	appropriately)

	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_update_scroll_region): Renamed from
	"update_scroll_region" since it's now in a header file.
	(relayout), (nautilus_icon_container_clear): Updated for name change.
	(nautilus_icon_container_move_icon): Added FIXME about how
	update_scroll_region is handled at different levels at Darin's
	request.
	* libnautilus-extensions/nautilus-icon-private.h:
	Put prototype for nautilus_icon_container_update_scroll_region
	here so it could be called from drag-and-drop code.
	* libnautilus-extensions/nautilus-icon-dnd.c: (handle_local_move):
	Update scroll region after drag.
	
	* src/nautilus-complex-search-bar.c:
	(update_options_buttons_state): New function, updates the sensitivity
	of "Fewer Choices" button based on number of displayed criteria. Later
	it will also handle "More Choices" button and perhaps others.
	(nautilus_complex_search_bar_initialize): 
	Call update_options_button_state after creating button widgets.
	(more_options_callback), (fewer_options_callback): Call
	update_options_button_state when number of criteria changes.

2000-08-07  Darin Adler  <darin@eazel.com>

	Fixed bug 1921 (reloading does not cause directory count to be
	recomputed)

	* libnautilus-extensions/nautilus-directory-async.c:
	(metafile_read_failed), (get_corresponding_file),
	(nautilus_directory_force_reload):
	Make the force reload call also force recomputing the counts (both
	shallow and deep) for that directory.
	
	* libnautilus-extensions/nautilus-file-private.h:
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_internal), (nautilus_file_get_existing),
	(nautilus_file_get): Added interface to get an existing NautilusFile
	that won't create a new one.

2000-08-07  John Sullivan  <sullivan@eazel.com>

	Fixed bug 1906 (text size under icons is not always correct)

	* libnautilus-extensions/nautilus-font-factory.c:
	(font_hash_node_lookup_with_insertion): Inserting a font into
	the font cache hashtable was passing the wrong pointer for the
	font name: name (which is reused each time in this routine) instead
	of node->name (which is part of the hash table node and won't change).
	Also took off unnecessary gpointer and gconstpointer casts. Darin
	spotted the problem after I aimed him at this function.

Mon Aug 07 05:00:55 2000  George Lebl <jirka@5z.com>

	* libnautilus-extensions/nautilus-list.c (nautilus_list_draw):
	  Call gtk_widget_draw on the title widget.  This fixes the problem
	  where the widget is not drawn when the list view is first selected.

Mon Aug 07 00:31:50 2000  George Lebl <jirka@5z.com>

	* libnautilus-extensions/nautilus-glib-extensions.c
	  (nautilus_get_system_time):  use G_GINT64_CONSTANT instead of LL
	  to be more "alpha clean"

	* libnautilus-extensions/nautilus-list-column-title.c
	  (nautilus_list_column_title_initialize)
	  (nautilus_list_column_title_finalize) (get_column_frame_at)
	  (load_up_indicator) (get_sort_indicator)
	  (nautilus_list_column_title_paint):  Don't use GnomePixmap just
	  for loading pixmaps, this doesn't work always (read doesn't work
	  on my machine), plus it's a horrible hack.  Use GdkPixbuf to load
	  up the sort indicator pixmaps.  The title_window of the clist
	  scrolls itself horizontally, so don't add the horizontal scroll
	  again during painting.  Fix text not always redrawing some 2 pixel
	  stripes because we were clipping the redrawing rectangle rather
	  then only the outside of the cell.

	* libnautilus-extensions/nautilus-list.c (nautilus_list_initialize)
	  (nautilus_list_flush_typeselect_state) (nautilus_list_realize):
	  use G_GINT64_CONSTANT instead of LL.  Use
	  gtk_widget_push/pop_composite_child when creating the column title
	  Check existance of list->details->title rather then
	  clist->title_window when adding it to clist->title_window as
	  clist->title_window will always exist.

2000-08-06  Mathieu Lacage <mathieu@eazel.com>

	* libnautilus-extensions/nautilus-search-bar-criterion.c:
	remove debugging output for rebecka.

2000-08-06  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_emblem_names):
	make intrinsic emblems appear in the list after the assigned ones because
	the assigned ones are more important to the user.
	
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(nautilus_icon_canvas_item_initialize_class),
	(draw_or_measure_label_text):
	At Bud's suggestion, distinguish the additional info from the file name by
	drawing it in a different color
	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_get_label_color), (update_label_color):
	set up the file name color and the additional info color separately
	return one or the other based on parameter passed in to get_label_color
	* libnautilus-extensions/nautilus-icon-container.h:
	added an additional parameter to get_label_color to select which color to return
	* libnautilus-extensions/nautilus-icon-private.h:
	added a new field for the additional info color

2000-08-05  Andy Hertzfeld  <andy@eazel.com>

	fixed embedded icon text clarity (we were using helvetica 9, which wasn't installed
	on many machines, and the scaled version looked hideous).  Fixed by using the
	bigger, more commonly installed helvetica 24 font, then scaling it down using the
	gdk_pixbuf compositing routines, which exploit the gray-scale.
	
	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.h:
	added a "font_scale" parameter
	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.c:
	(nautilus_gdk_pixbuf_draw_text):
	used the font scale parameter to scale up the buffer, and scale it down when
	compositing
	* libnautilus-extensions/nautilus-icon-factory.c: (embed_text):
	change the default size to 24 pt, and used a scale factor of .333 for the
	equivalent of an 8 point font
	* libnautilus-extensions/nautilus-image.c:
	(nautilus_image_size_allocate):
	added a font scale parameter of 1.0.
	
2000-08-05  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-undo-manager.c: (corba_append),
	(nautilus_undo_manager_undo):
	Fixed a bug where transaction)in_progress was always TRUE.
	This caused a g_warning to always be fired.  I guess no one
	noticed because we aren't exercising the undo code.
	
	* libnautilus/nautilus-undo-transaction.c:
	(remove_transaction_from_object),
	(nautilus_undo_transaction_add_atom),
	(nautilus_undo_transaction_add_to_undo_manager),
	(remove_atoms_cover),
	(nautilus_undo_transaction_unregister_object):
	Fixed bug 1984, crash when closing window after an undo operation.
	This crash is caused by a bogus transaction being left
	in the target objects transaction list.  An assert is thrown
	because the item in the list is not a transaction.  I suspect it
	is the sad remains of an unrefed transaciton that is still in
	the list somehow.  I made a work arund by checking before
	freeing, but need Darin's help to figure out the true cause.

2000-08-05  Ali Abdin  <aliabdin@aucegypt.edu>

        In summary, get Docbook XML working. Support JPEG images. Make PNG
        default image. Fix the GUIMENU/GUISUBMENU tags.

        * components/help/help-method.c: 
        (help_uri_to_string),
        (convert_file_to_uri):
        Support text/xml as a possible help file (Docbook XML). Also if we
        don't recognize the help file, mark it as 'UNKNOWN_FILE' and handle it
        gracefully (should now not reach g_assert_not_reached in the code)

        * components/help/converters/gnome-db2html2/gdb3html.h,
        * components/help/converters/gnome-db2html2/sect-elements.c,
        * components/help/converters/gnome-db2html2/toc-elements.c:
        Add the "articleinfo" tag to act just like the "artheader" tag (the
        former is Docbook XML and the latter is Docbook SGML).

        * components/help/converters/gnome-db2html2/sect-elements.c:
        (sect_graphic_start_element): Small fix to match Eazel style
        guidelines. Add support for JPEG/JPG image types. Make PNG the default
        image type if the 'format' attribute in the graphic element is not
        found.
        (sect_b_arrow_end_element): New function.
        
        Also - removed MENUCHOICE tag, and made GUIMENU and GUISUBMENU use
        sect_b_arrow_end_element.

2000-08-04  Andy Hertzfeld  <andy@eazel.com>

	made it default to using the anti-aliased canvas
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_register):
	changed defaults for all 3 user levels to use the aa-canvas
	* src/file-manager/fm-icon-view.c:
	(fm_icon_view_update_anti_aliased_mode):
	set the default to TRUE
	
Fri Aug 04 20:43:15 2000  George Lebl <jirka@5z.com>

	* src/nautilus-window-manage-views.c (open_location): ignore
	  empty location.  Fixes bug number 1983

2000-08-04  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c: (relayout),
	(size_allocate), (finish_adding_new_icons),
	(nautilus_icon_container_set_zoom_level),
	(nautilus_icon_container_set_auto_layout):
	Changed relayout so it will update the scroll region. This fixes
	bug 1907 (layout options sometimes move icons out of window).
	
	* libnautilus/nautilus-clipboard.c: (add_menu_items_callback):
	Fix leak of remote UI handler. This fixes the rest of bug 1259,
	which was just a bug about the FIXME that said "remote UI handler
	leaks here, right?".

	* libnautilus-extensions/nautilus-directory-async.c: (lacks_info),
	(get_info_callback): Fixed infinite loop when you hit a file and
	you can't get info for it. Related to the bug Mike Fleming is
	looking at.
	
2000-08-04  Robey Pointer  <robey@eazel.com>

	* libnautilus-extensions/nautilus-file-utilities.c:
	(nautilus_make_uri_from_input):
	Use new gnome-vfs call to correctly escape the uri (fix
	quoted-colon bug in entering urls)

2000-08-04  Robin * Slomkowski  <rslomkow@eazel.com>

	* src/nautilus-window-menus.c: (help_menu_about_nautilus_callback):
	fix 1997, So you have time in the about box.
	* acconfig.h: added undef for NAUTILUS_TIMESTAMP
	* configure.in: added define for NAUTILUS_TIMESTAMP

2000-08-04  John Sullivan  <sullivan@eazel.com>

	Fixed unreported crash-at-boot bug I ran into when
	I turned MALLOC_CHECK_=2 on. This is a good thing for
	everyone to run with (unless it slows things down hideously,
	which it doesn't seem to).

	* src/nautilus-simple-search-bar.c:
	(nautilus_simple_search_criteria_to_search_uri):
	This function (apologies to Pavel) crashed like a Russian
	helicopter and leaked like a Russian submarine. Fixed an off-by-one
	bug in a g_new0 that was trashing memory; removed another g_new0
	call that was just leaking its results; called g_strfreev to
	free the results of a g_strsplit call.

2000-08-04  Michael Engber  <engber@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(lay_down_icons), (size_allocate):
	Fixed the mysterious resizing flashing bug. lay_down_icons
	computed canvas_width wrong. bug #1929

2000-08-04  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(nautilus_icon_canvas_item_render):
	fixed bug 1849, left edge of icons sometime get chopped off in
	anti-aliased mode. Fixed by truncating the offset in the
	affine transfer to integers.
	
2000-08-04  Darin Adler  <darin@eazel.com>

	* src/file-manager/fm-directory-view.c:
	(bonobo_control_activate_callback): Fix bug where we would leak
	a remote UI handler. This caused bad problems when opening and
	closing windows with the undo management. This fixes bugs 1949
	and 1259.
	
	* src/nautilus-window-private.h:
	* src/nautilus-window.c: (nautilus_window_destroy):
	* src/nautilus-window-menus.c: (append_bookmark_to_menu),
	(nautilus_window_remove_go_menu_callback),
	(nautilus_window_remove_bookmarks_menu_items),
	(nautilus_window_remove_go_menu_items):
	Fix bookmark signals to properly disconnect when the window goes
	away. The old way of using connect_while_alive would not work
	because we need to disconnect the signals one at a time sometimes
	too and it's illegal to disconnect a "while_alive" signal any
	other way.
	
	* libnautilus-extensions/nautilus-directory-async.c:
	(metafile_write_failure_close_callback),
	(metafile_write_success_close_callback), (metafile_write_callback):
	Fix handling of error codes from close when writing a metafile.
	
2000-08-04  Maciej Stachowiak  <mjs@eazel.com>

	* components/tree/nautilus-tree-view.c: (insert_hack_node,
	remove_hack_node, freeze_if_have_hack_node,
	nautilus_tree_view_insert_model_node,
	nautilus_tree_view_remove_model_node,
	nautilus_tree_view_update_model_node,
	nautilus_tree_view_model_done_loading_callback,
	nautilus_tree_view_update_all_icons,
	nautilus_tree_view_uri_to_name,
	nautilus_tree_view_find_parent_node): Moved helper functions to
	the end, added misc stability and simplification fixes.

2000-08-04  Maciej Stachowiak  <mjs@eazel.com>

	* components/mozilla/nautilus-mozilla-content-view.c
	(mozilla_load_location_callback): Removes
	nautilus_view_report_load_complete call from here...
	(mozilla_progress_callback): And move it here, because we only
	want to make that call after all the various report_progress
	calls. This fixes bugs 1933 and 1955. Pavel did most of the heavy
	lifting of figuring out why this was killing the state machine.

2000-08-04  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-background.c:
	(nautilus_background_draw_flat_box),
	(nautilus_background_set_widget_style):
	fixed bug where setting the sidebar to a solid color background
	wouldn't work; fixed by allowing nautilus_background to handle
	that case instead of inheriting.
	
	* src/nautilus-property-browser.c: (format_name_for_display):
	at Susan's suggestion, don't draw the name for the reset background
	property, to better distinguish it from the others (and its name
	is part of its image, anyway)
	
Fri Aug 04 14:21:51 2000  George Lebl <jirka@5z.com>

	* components/hardware/nautilus-hardware-view.c (setup_form_title):
	  Check result of gnome_pixmap_file.  If NULL, we can't make a new
	  gnome-pixmap.

	* components/help/converters/gnome-db2html2/sect-elements.c
	  (sect_get_infobox_logo) (sect_infobox_start_element):
	  sect_get_infobox_logo can return a NULL so check its return
	  and if NULL just add %s instead of <IMG ...>

	* components/services/vault/command-line/vault-operations.c,
	  libnautilus-extensions/nautilus-list.c:
	  add #include <string.h>

	* cut-n-paste-code/freetype/ftcalc.h,
	  cut-n-paste-code/freetype/ftconfig.h:  Well even though this
	  is cut and paste code I NEED to add this patch for it to even
	  compile on alpha, I'll try to get this upstream.  The only changes
	  are inside #ifdefs on platforms where long is 64 bit so it should
	  not affect intel code at all.

	* libnautilus-extensions/nautilus-file-utilities.c
	  (nautilus_format_uri_for_display):  use g_strdup instead of strdup
	  as then g_free is used and this would really confuse glib in memory
	  checking mode.


	* librsvg/art_render_mask.c, librsvg/rsvg-bpath-util.c,
	  librsvg/rsvg-ft.c: add #include <string.h>

	* src/Makefile.am: define NAUTILUS_PIXMAPDIR.  This is neccessary for
	  both making the tarballs and actual code sanity on switching
	  toolbar themes etc.  In GNOME 2.0 the GNOME_PATH can be sanely used
	  to allow relocatable nautilus binary, but in 1.[02] this is the
	  correct way to do things.

	* src/nautilus-complex-search-bar.c
	  (nautilus_complex_search_bar_initialize)
	  (load_find_them_pixmap_widget):  If we can't load pixmaps don't
	  add them.  Also don't hardcode "/gnome/share" prefix and use
	  the NAUTILUS_PIXMAPDIR define to find search.png AND make sure
	  we can load it before using it.

	* src/nautilus-window-toolbars.c (find_toolbar_child) (setup_button)
	  In toolbar_info use the NAUTILUS_PIXMAPDIR define to find pixmaps.
	  remove get_stock_callback and get_stock_widget as those functions
	  were an incredible hack and were likely to break.  Replace with a
	  function which searches the toolbar children and then finds correct
	  icon widget.  It also doesn't do anything if there is no icon.  In
	  setup button, use NAUTILUS_PIXMAPDIR to define pixmaps by their
	  full name.  If we cannot set the stock widget icon, then the icon
	  is not registered and we register it with gnome-stock.
	  Miraculously the current code worked but only worked because the
	  eazel theme was set up in the toolbar_info, other themes with
	  outside images would break.

2000-08-04  Arlo Rose  <arlo@eazel.com>

	* icons/arlo/Makefile.am:
	* icons/arlo/i-regular.xml:
	* icons/arlo/i-directory.xml:
	For the demo, I've added some data to these xml files
	so text shows up on my icons, and emblems get placed
	correctly on my temporary folders.

2000-08-04  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.c:
	(nautilus_gdk_pixbuf_load):
	fixed demo bug #1944, nautilus doesn't thumbnail xpms.  Fixed
	by making nautilus_gdk_pixbuf_load using
	nautilus_gdk_pixbuf_new_from_file for local files, since that
	works better than using the loaders.
	
	* libnautilus-extensions/nautilus-icon-factory.c:
	removed FIXME that was already fixed.
2000-08-04  Mathieu Lacage  <mathieu@eazel.com>

	* libnautilus-extensions/nautilus-file-utilities.c:
	(nautilus_get_uri_from_local_path): fixes bug 1936.
	nautilus_get_uri_from_local_path has been made NULL proof.

2000-08-04  Mathieu Lacage  <mathieu@eazel.com>

	* src/nautilus-window.c: (nautilus_window_hide_sidebar),
	(nautilus_window_show_sidebar): fixes bug 1881. add special
	case tests.

2000-08-04  Darin Adler  <darin@eazel.com>

	* components/html/glibwww-init.c:
	Added a declaration to work around a bug or version issue that
	some Solaris hackers ran into with glibwww.
	* components/mozilla/main.c: (mozilla_check_environment):
	Fixed a bug where we g_free the result of g_getenv.
	* helper-utilities/authenticate/nautilus-authenticate-pam.c:
	Changed includes so this builds for some Solaris versions
	(doesn't seem to create any problem compiling elsewhere).
	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_clear_from_row): Got rid of an overzealous
	assert that wasn't doing us any good.
	* src/nautilus-first-time-druid.c: (set_up_user_level_page):
	Fixed a broken assert.

2000-08-04  John Sullivan  <sullivan@eazel.com>

	Fixed demo bug 1908: Title in sidebar vanishes on theme change.

	* src/nautilus-sidebar.c: 
	(nautilus_sidebar_set_uri), (nautilus_sidebar_update_info): 
	Separated update_info into the parts that were about changing 
	URI-based information and the parts that were about changing 
	appearance only. The appearance-only parts are now called
	nautilus_sidebar_update_appearance. The	other parts were put 
	back into nautilus_sidebar_set_uri.
	(nautilus_sidebar_theme_changed),
	(receive_dropped_color), (receive_dropped_keyword),
	(background_appearance_changed_callback): Made these callers
	use nautilus_sidebar_set_appearance. The bug was that
	theme_changed was passing NULL for the initial title text,
	but passing NULL wipes it out rather than doing nothing as
	was intended. The other callers were getting the current title
	text and then passing it back in; now they just leave it alone.

2000-08-04  Ramiro Estrugo  <ramiro@eazel.com>

	* src/nautilus-sidebar-title.c: (update_font):
	Revert the font change since the font I picked is not available on
	all platforms.  Ill make a better fix soon.  In the mean time this
	should fix the torrent of assertions.
	
2000-08-04  Mathieu Lacage  <mathieu@eazel.com>

	first draft at the 1744 and 1761 tasks.
	They depend on another one I have to finish first to mek them 
	work.
	
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_emblem_names), (nautilus_file_is_directory),
	(nautilus_file_is_in_trash): add nautilus_file_is_in_trash
	add test on search results to see if they are from the trash.
	* libnautilus-extensions/nautilus-file.h: add nautilus_file_is_in_trash
	* libnautilus-extensions/nautilus-search-bar-criterion.c: 
	(nautilus_search_bar_criterion_human_from_uri): add function.
	* libnautilus-extensions/nautilus-search-bar-criterion.h: add function.
	* src/file-manager/fm-search-list-view.c: (begin_loading_callback),
	(fm_search_list_view_initialize): hoook onto the directoryview signals
	to tell the view that the title is a new better one.
	* src/nautilus-simple-search-bar.c:

2000-08-04  Rebecca Schulman  <rebecka@eazel.com>

	* components/music/nautilus-music-view.c: (sort_by_title),
	(sort_by_artist):
	Fixed bug 1940, where the music view crashed when 
	sorting by title or artist if the id3 tag was incomplete

2000-08-04  Andy Hertzfeld  <andy@eazel.com>

	* components/music/nautilus-music-view.c:
	(nautilus_music_view_destroy),
	(nautilus_music_view_drag_data_received):
	fixed bug 1910, there is no way to stop a song once you leave the
	music view, fixed by taking the coward's way out and stopping the
	song when the music view is exited/destroyed.  We can do better post 1.0.
	
2000-08-04  Maciej Stachowiak  <mjs@eazel.com>

	Fix bugs 1524 and 1517:

	* components/tree/nautilus-tree-model.c:
	(nautilus_tree_model_monitor_add): Fixed a minor bug which made
	this never report anything but the root node.
	Also: moved all helper functions to the end of the file and prototyped
	them, and did minor cleanup.

	* components/tree/nautilus-tree-view.c (insert_hack_node,
	remove_hack_node, freeze_if_have_hack_node): Functions to handle
	adding and removing the hack node, and freezing while it might be
	visible; this way we should be able to avoid the user ever seeing
	it.
	(nautilus_tree_view_insert_model_node,
	nautilus_tree_view_model_done_loading_callback,
	nautilus_tree_view_load_from_filesystem, tree_expand_callback):
	Use the above functions to insert and hide the hack node at the
	proper times.
	(nautilus_tree_view_initialize,
	nautilus_tree_view_update_all_icons): Connect to icons_changed
	signal and update all icons when it happens.

2000-08-04  Rebecca Schulman  <rebecka@eazel.com>

	* src/file-manager/fm-list-view.c: (fm_list_view_compare_rows),
	(add_to_list):
	Fixed irritating cast == NULL messages that appeared by
	the ton in the list view.  

2000-08-03  Ramiro Estrugo  <ramiro@eazel.com>

	Fix bug 1903
	
	* src/nautilus-sidebar-title.c: (update_font):

	Pick a better font for the sidebar title.  Also ammended the FIXME
	blurb (and the bug too) to make the code robust enough to deal
	with bogus and non-existent fonts.

2000-08-03  Andy Hertzfeld  <andy@eazel.com>

	* icons/arlo/arlo.xml:
	* src/nautilus-zoom-control.c: (draw_number):
	fixed bug 1897, zoom control numbers draw in wrong place when search bar mode switches.
	Fixed by removing an offset that shouldn't have been added to position, and tweaked a
	position in the theme file that was mistakenly compensating.
	
	* components/music/mpg123_handler.c:
	a little bit of work fixing music view problems, more coming soon.
	
2000-08-03  Ramiro Estrugo  <ramiro@eazel.com>

	Fix bug 1905.
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog),
	(sidebar_panel_iid_is_in_default_list),
	(global_preferences_register_sidebar_panels),
	(global_preferences_register_speed_tradeoff_with_defaults),
	(global_preferences_register),
	(nautilus_global_preferences_initialize):

	The problem was that the sidebar loser component was showing up by
	default.  I added a hard coded list of default sidebar panel
	iids.  Unfortunately, there is not place to query this list, so
	for now its builtin to nautilus.  Any sidebar panel that is not on
	this list will not be on by default.

	I also fixed some dumb localization, naming and documentation
	things while in the neighborhood.
	
2000-08-03  Ramiro Estrugo  <ramiro@eazel.com>

	Fix bugs 1890 and 1902.
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_get_dialog),
	(global_preferences_register_for_ui),
	(nautilus_global_preferences_dialog_update),
	(nautilus_global_preferences_initialize):
	* libnautilus-extensions/nautilus-global-preferences.h:

	Expose the initialization call once again.  I suppose explicit
	initialzation was a dream.  It seems to break everytime we add
	something new at startup that needs preferences, so lets just make
	sure preferences defaults exist once and for all.
	
	* src/nautilus-application.c: (nautilus_application_initialize),
	(nautilus_application_destroy), (nautilus_application_startup),
	(check_for_and_run_as_super_user), (need_to_show_first_time_druid):

	Change the way we check whether the first time wizrard needs to be
	presented.  Instead of checking for the user's 'top' directory, we
	check a flag file: ~/.nautilus/first-time-wizard.

	Checking the user's top directory doesnt work after my last
	preferences changes, since the preferences initialization call i
	added causes the 'top' directory to exist and this confuses the
	first time druid.
	
2000-08-03  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/command-line/eazel-alt-install-corba.c:
	(set_parameters_from_command_line):
	Added the downgrade (-d) flag
	
	* components/services/install/command-line/eazel-revert.c:
	(get_password_dude):
	Uses robey's new and better get password stuff
	* components/services/install/command-line/eazel-uninstall.c:
	(done), (get_password_dude), (set_root_client), (main):
	Revived to work with the trilobite root helper stuff.
	
	* components/services/install/idl/trilobite-eazel-install.idl:
	* components/services/install/lib/eazel-install-corba.c:
	(impl_Eazel_Install_revert_transaction),
	(impl_Eazel_Install__set_downgrade),
	(impl_Eazel_Install__get_downgrade), (eazel_install_get_epv):
	Added the downgrade attribute
	
	* components/services/install/lib/eazel-install-public.h:
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_revert_transaction_from_xmlstring):
	made the xml string const
	
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(download_all_packages), (install_all_packages),
	(revert_transaction),
	(eazel_install_do_rpm_transaction_make_argument_list),
	(do_rpm_transaction):
	Loads of work on the transaction and some random
	bugfixes. Reverting now works.
	
	* components/services/install/lib/eazel-install-types.c:
	(packagedata_fill_from_file):
	Fixed dumb bug.

	* components/services/install/lib/eazel-install-xml-package-list.h:
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(parse_memory_xml_package_list), (parse_memory_transaction_file):
	Made some ars const

2000-08-03  J Shane Culpepper  <pepper@eazel.com>

	* icons/Makefile.am: fixing typo

2000-08-03  Andy Hertzfeld  <andy@eazel.com>

	* data/emblems/Makefile.am:
	* data/emblems/distinguished.png
	* data/emblems/ohno.png
	* data/emblems/favorite.png
	* icons/Makefile.am:
	* icons/emblem-distinguished.svg:
	* icons/emblem-favorite.svg:
	* icons/emblem-generic.svg:
	* icons/emblem-ohno.svg:
	
	added more emblems from Susan and update some others
	
2000-08-03  Gene Z. Ragan  <gzr@eazel.com>

	Fixed bug 1927, Need a way to identify mount links as special
	type of link.

	Fixed bug 1926, Old mount links should be cleaned up
	when desktop launches.
	
	* libnautilus-extensions/nautilus-volume-monitor.c:
	(nautilus_volume_monitor_destroy), (add_mount_link_property),
	(nautilus_volume_monitor_is_volume_link):
	Mount links are now tagged with a special XML attribute
	when they are created.
	
	* libnautilus-extensions/nautilus-volume-monitor.h:
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_destroy), (fm_desktop_icon_view_initialize),
	(remove_old_mount_links):
	Old mount links are now removed when the desktop launches and quits.

2000-08-03  John Sullivan  <sullivan@eazel.com>

	* libnautilus-extensions/nautilus-search-bar-criterion.c:
	(nautilus_search_bar_criterion_next_new): Checked in this
	fix for Mathieu -- Josh noticed that hitting "More Choices"
	enough times would crash; an index needed to be modulo-ized.

2000-08-03  Mathieu Lacage  <mathieu@eazel.com>

	* src/nautilus-switchable-search-bar.c:
	(nautilus_switchable_search_bar_initialize): connect the simple 
	search bar and the copmlex search bar location_changed signals
	to the switchable search bar.

2000-08-03  Michael Engber  <engber@eazel.com>

	* src/file-manager/fm-desktop-icon-view.c: (get_icon_container):
	* src/file-manager/fm-desktop-icon-view.h:
	* src/file-manager/fm-icon-view.c: (fm_icon_view_begin_loading):
	Fix misspelling of DESKTOP (was DESKSTOP)

2000-08-03  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c:
	(cancel_metafile_read), (metafile_read_try_public_metafile),
	(metafile_read_check_for_directory_callback),
	(metafile_read_check_for_directory), (metafile_read_failed):
	Added code to check if a URI is a directory before reading
	the public metafile from it. Completes task 223.
	
	* src/nautilus-sidebar-title.c:
	(nautilus_sidebar_title_initialize_class), (update_font),
	(update_title), (nautilus_sidebar_title_size_allocate):
	Added code to update the font when the sidebar's size changes
	since the font is based on the available space. Fixes bugs
	1922 and 1901, I think.
	(nautilus_sidebar_title_hit_test_icon): Added a return_if_fail.
	
	* src/nautilus-window-menus.c: (append_bookmark_to_menu):
	Fixed a problem I ran into where the signal was still connected
	after the window was destroyed.

2000-08-03  John Sullivan  <sullivan@eazel.com>

	Reinstated the bug fix to 1781 from two days ago,
	which was completely clobbered by Rebecca's checkin
	yesterday.

	* src/nautilus-switchable-search-bar.c:
	(nautilus_switchable_search_bar_initialize_class),
	(search_bar_preference_changed_callback),
	(nautilus_switchable_search_bar_initialize),
	(nautilus_switchable_search_bar_destroy),
	(nautilus_switchable_search_bar_set_mode):

2000-08-03  Mathieu Lacage  <mathieu@eazel.com>

	* configure.in: fix build with new bonobo.
	* libnautilus-extensions/Makefile.am: fix build with new bonobo.
	* libnautilus/Makefile.am: fix build with new bonobo.

2000-08-03  Darin Adler  <darin@eazel.com>

	* check-signals.pl: Wrote a script to check for people who forget
	to call gtk_object_class_add_signals. It found only one violation,
	and that was already fixed by the time I got around to checking
	this in.
	
	* libnautilus-extensions/nautilus-directory-async.c:
	(get_info_callback): Added a code to check the error result from
	get_file_info. Without this, we were doing
	
	* src/nautilus-sidebar-title.c: (nautilus_sidebar_title_set_uri):
	Fixed it so we won't destroy and then instantly recreate the same
	NautilusFile if the URI is set to the same value.

2000-08-03  Michael K. Fleming  <mfleming@eazel.com>

	* components/services/install/command-line/eazel-alt-install-corba.c:
	(get_password_dude):
	* components/services/time/command-line/main.c: (get_password):
	* components/services/trilobite/sample/command-line/main.c:
	(get_password_dude):
	Changed CLI password prompts to use getpass()

	* nautilus-clean.sh:
	added eazel-proxy to -x

2000-08-03  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-volume-monitor.c:
	(nautilus_volume_monitor_initialize_class), (mount_device_mount),
	(mount_device_deactivate), (get_floppy_volume_name),
	Some cleanup.  Added a signal for volume_unmount
	as well.
	
	(add_mount_link_property), (is_volume_link):
	Functions that set and test if a nautilus link
	is also a volume mount link.
	
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize):
	Added a test call to identify volume links.
	
2000-08-03  Maciej Stachowiak  <mjs@eazel.com>

	* components/tree/nautilus-tree-node-private.h: Forgot to check
	this in.

2000-08-03  Maciej Stachowiak  <mjs@eazel.com>

	Rewrote the tree view to do model/view separation, and in the
	process fixed bugs 1519, 1520, 1526, 1529, 1531 and 1522. Some of these
	are not for the current milestone, but just fell out naturally
	from doing the model/view separation, which makes the remaining
	required tasks far easier.
	
	* components/tree/nautilus-tree-model.h: *
	components/tree/nautilus-tree-model.c:
	(nautilus_tree_model_initialize_class),
	(nautilus_tree_model_initialize),
	(nautilus_tree_stop_monitoring_internal),
	(nautilus_tree_model_destroy), (nautilus_tree_model_new),
	(report_root_node_if_possible),
	(nautilus_tree_model_root_node_file_monitor),
	(nautilus_tree_model_set_root_uri),
	(nautilus_tree_model_monitor_add),
	(nautilus_tree_model_monitor_remove),
	(nautilus_tree_model_directory_files_changed_callback),
	(nautilus_tree_model_directory_files_added_callback),
	(nautilus_tree_model_directory_done_loading_callback),
	(nautilus_tree_model_monitor_node),
	(nautilus_tree_model_stop_monitoring_node),
	(nautilus_tree_model_get_node), (uri_get_parent_text),
	(report_node_added), (report_node_changed), (report_node_removed),
	(report_done_loading): Implemented all the calls and signals and
	monitoring and stuff for the new tree model.	
	* components/tree/nautilus-tree-node.h,
	components/tree/nautilus-tree-node.c:
	(nautilus_tree_node_initialize_class),
	(nautilus_tree_node_initialize), (nautilus_tree_node_destroy),
	(nautilus_tree_node_new), (nautilus_tree_node_set_parent),
	(nautilus_tree_remove_from_parent): New class that represents a
	single node in the tree.
	* components/tree/nautilus-tree-view.c:
	(nautilus_tree_view_should_skip_file),
	(nautilus_tree_view_insert_model_node),
	(nautilus_tree_view_remove_model_node),
	(nautilus_tree_view_update_model_node),
	(nautilus_tree_view_model_node_added_callback),
	(nautilus_tree_view_model_node_changed_callback),
	(nautilus_tree_view_model_node_removed_callback),
	(nautilus_tree_view_load_from_filesystem),
	(nautilus_tree_view_initialize), (disconnect_model_handlers),
	(nautilus_tree_view_destroy), (tree_expand_callback),
	(tree_collapse_callback), (tree_select_row_callback): Adapt to
	using the new NautilusTreeModel and NautilusTreeNodes instead of
	using NautilusDirectories and NautilusFiles directly.

	* components/tree/Makefile.am: Include new files in build.

2000-08-03  Maciej Stachowiak  <mjs@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c
	(metafile_read_done): Set directory->details->metafile_read_handle
	to NULL after freeing it, otherwise we will get random crashing.

2000-08-02  Mathieu Lacage <mathieu@eazel.com>

	* src/file-manager/fm-directory-view.c (fm_directory_view_initialize_class)
	fixes really evil bug: add a call to gtk_object_class_add_signals at
	the end of the signal creation.
	
2000-08-02  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c: (embed_text):
	draw embedded text in a san-serif font, as suggested by Susan
	
	* data/emblems/Makefile.am:
	* data/emblems/OK.png:
	* data/emblems/draft.png:
	* data/emblems/important.png:
	* data/emblems/new.png
	* data/emblems/personal.png:
	* data/emblems/urgent.png:
	* icons/Makefile.am:
	* icons/eazel/i-directory.xml:
	* icons/eazel/i-regular.xml:
	* icons/emblem-OK.svg:
	* icons/emblem-draft.svg:
	* icons/emblem-important.svg:
	* icons/emblem-new.svg:
	* icons/emblem-noread.svg:
	* icons/emblem-personal.svg:
	* icons/emblem-urgent.svg:
	added a bunch of new emblems from Susan and tweaked some offsets
	in the xml files.
	

2000-08-02  Rebecca Schulman  <rebecka@eazel.com>
	Completed bug 1433, the interface to search by file
	name and attribute.  

	* libnautilus-extensions/nautilus-search-uri.c:
	* libnautilus-extensions/nautilus-search-uri.h:
	* libnautilus-extensions/Makefile.am:
	removed the search uri files and placed their functionality 
	in the appropriate search bar classes.
	
	* libnautilus-extensions/nautilus-search-bar-criterion-private.h:
	* libnautilus-extensions/nautilus-search-bar-criterion.h:
	* libnautilus-extensions/nautilus-search-bar-criterion.c:
	(nautilus_search_bar_criterion_new_from_values),
	(nautilus_search_bar_criterion_next_new),
	(nautilus_search_bar_criterion_get_location),
	(get_next_default_search_criterion_type),
	(nautilus_search_bar_criterion_show),
	(nautilus_search_bar_criterion_hide), (get_name_location_for),
	(get_content_location_for), (get_file_type_location_for),
	(get_size_location_for), (get_emblem_location_for),
	(get_date_modified_location_for), (get_owner_location_for):
	added ability to turn the criteria state into a text 
	explanation for the search uri.  It is slightly circuitous,
	because search uris are not internationalized.
	

	* libnautilus-extensions/nautilus-string.c:
	* libnautilus-extensions/nautilus-string.h:
	(nautilus_str_strip_trailing_str), (nautilus_self_check_string):
	added new string function used by the search bar criterion code,
	to strip a string off the end of an existing string.

	* src/nautilus-complex-search-bar.c:
	(nautilus_complex_search_bar_initialize),
	(nautilus_complex_search_bar_get_location),
	(attach_criterion_to_search_bar),
	(unattach_criterion_from_search_bar),
	(load_find_them_pixmap_widget), (fewer_options_callback):
	tweaks to make sizing an spacing on the bar better, and
	added search pixmap to the find button.  Moved the find
	them button here from the switchable search bar
	class for appearance reasons.
	
	* src/nautilus-simple-search-bar.c:
	(nautilus_simple_search_bar_initialize),
	(nautilus_simple_search_bar_set_location),
	(nautilus_simple_search_bar_get_location),
	(nautilus_search_uri_to_simple_search_criteria),
	(nautilus_simple_search_criteria_to_search_uri):
	moved search uri functionality and 
	find them button into the simple search bar class for
	apprearance reasons.
	
	* src/nautilus-switchable-search-bar.c:
	* src/nautilus-switchable-search-bar.h:
	(nautilus_switchable_search_bar_initialize_class),
	(nautilus_switchable_search_bar_initialize),
	(nautilus_switchable_search_bar_set_mode),
	(nautilus_search_uri_to_search_bar_mode),
	(nautilus_search_uri_is_displayable_by_mode), (other_search_mode):
	moved the find them button out of this class.

2000-08-02  Darin Adler  <darin@eazel.com>

	Finished task 222 "Don't look for metafile for some URIs for
	performance reasons."
	
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory-async.c:
	(cancel_metafile_read), (can_use_public_metafile),
	(metafile_read_done), (metafile_read_failed),
	(metafile_read_start), (nautilus_directory_request_read_metafile),
	(metafile_write_failed), (metafile_write_callback),
	(nautilus_metafile_write_start), (metafile_write):
	Added logic to check if it should use a public metafile for a
	particular directory, respecting the new preference setting.
	Also delete the private metafile after a successful write of
	the public metafile. Finally, do metafile writes completely
	based on the preference, not which metafile was read.
	
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_destroy), (construct_private_metafile_uri),
	(nautilus_directory_new), (any_non_metafile_item),
	(nautilus_directory_is_not_empty): Changes to go along with the
	metafile reading/writing changes above.
	
	* libnautilus-extensions/nautilus-file.c: (nautilus_file_delete):
	Added FIXMEs about async. operations.

2000-08-02  Eskil Heyn Olsen  <eskil@eazel.com>

	* src/nautilus-window-manage-views.c: (compute_default_title):
	if gnome-vfs-uri-extract-short-name returns NULL, default to
	_("(untitled)") instead of g_assert. (bug#1892)

2000-08-02  Seth Nickell  <seth@eazel.com>

	* src/file-manager/dfos-xfer.c: (get_duplicate_lettering),
	(handle_xfer_duplicate), (fs_xfer):
	Make file copies use "another" "4th" etc rather than numbers.
	Add support for creating symbolic links.

2000-08-02  Seth Nickell  <seth@eazel.com>

	* libnautilus-extensions/nautilus-file-utilities.c:
	(nautilus_make_uri_from_input):
	Add escaping code to the location bar.

2000-08-02  Michael Engber  <engber@eazel.com>

	* src/nautilus-application.c: (nautilus_application_startup),
	(nautilus_application_close_desktop),
	(nautilus_application_close_all_windows):
	* src/nautilus-application.h:
	* src/nautilus-first-time-druid.c: (druid_finished):
	* src/nautilus-main.c: (main):
	* src/nautilus-shell-interface.idl:
	* src/nautilus-shell.c: (nautilus_shell_get_epv),
	(corba_start_desktop), (corba_stop_desktop), (corba_quit):
	Changed command line options: renamed --manage-destop to
	--start-desktop, added --stop-desktop, added --quit. Bug#1847
	2 new corba calls for nautilus shell, one for starting the
	desktop and one for quitting.

2000-08-02  John Sullivan  <sullivan@eazel.com>

	Fixed bug 1877 (Customize window doesn't come to front if
	it's already showing when menu item selected)

	* src/nautilus-property-browser.c:
	(nautilus_property_browser_show): Use nautilus_gtk_window_present
	instead of gtk_widget_show.

	* libnautilus-extensions/nautilus-global-preferences.c:
	(nautilus_global_preferences_show_dialog): Same thing for the
	user-level settings window.

2000-08-02  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-file.c: (nautilus_file_changed):
	Fixed a bug where we did not send out "changed" signals for files
	that have no parents (like "/").

	* libnautilus-extensions/nautilus-directory-async.c: (is_needy),
	(select_needy_file): Improved logic so it works more precisely
	for non-parented files.

2000-08-02  Gene Z. Ragan  <gzr@eazel.com>

	Fixed bug 1866, Turn volume mounting code into an object.

	Monitor now emits a signal, volume_mounted, when a mount occurs.
	
	Removed the old fm-desktop-mounting files and added
	new nautilus-volume-monitor files.
	
	* libnautilus-extensions/Makefile.am:
	* src/file-manager/Makefile.am:
	Added new files and removed old ones.
	
	* libnautilus-extensions/nautilus-cdrom-extensions.h:
	New file
	
	* libnautilus-extensions/nautilus-iso9660.h:
	New file
	
	* libnautilus-extensions/nautilus-volume-monitor.c:
	New file
	(nautilus_volume_monitor_initialize),
	(nautilus_volume_monitor_initialize_class),
	(nautilus_volume_monitor_destroy), (nautilus_volume_monitor_get),
	(floppy_sort), (fm_desktop_get_removable_volume_list),
	(nautilus_volume_monitor_volume_is_mounted),
	(mount_device_is_mounted), (mount_device_cdrom_set_state),
	(mount_device_floppy_set_state), (mount_device_ext2_set_state),
	(mount_device_set_state), (device_set_state_empty),
	(mount_device_mount), (mount_device_activate_cdrom),
	(mount_device_activate_floppy), (mount_device_activate_ext2),
	(mount_device_activate), (eject_cdrom), (mount_device_deactivate),
	(mount_device_do_nothing), (mount_device_check_change),
	(mount_devices_update_is_mounted), (mount_devices_check_status),
	(check_permissions), (mount_device_floppy_add),
	(mount_device_ext2_add), (cdrom_ioctl_frenzy),
	(mount_device_iso9660_add), (mount_device_add_aliases),
	(add_mount_device), (mntent_is_removable_fs), (mntent_has_option),
	(nautilus_volume_monitor_find_mount_devices),
	(nautilus_volume_monitor_mount_unmount_removable),
	(remove_mount_link), (free_device_info), (get_iso9660_volume_name),
	(get_ext2_volume_name), (get_floppy_volume_name):

	* libnautilus-extensions/nautilus-volume-monitor.h:
	New file
	
	* src/file-manager/fm-cdrom-extensions.h:
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_destroy), (fm_desktop_icon_view_initialize),
	(fm_desktop_icon_view_create_background_context_menu_items),
	(fm_desktop_icon_view_trash_state_changed_callback),
	(mount_unmount_removable), (place_home_directory):
	* src/file-manager/fm-desktop-icon-view.h:
	* src/file-manager/fm-desktop-mounting.c:
	* src/file-manager/fm-desktop-mounting.h:
	* src/file-manager/iso9660.h:
	All old files that have been removed from build.

2000-08-02  Arlo Rose  <arlo@eazel.com>
	
        * icons/eazel/Back.png:
        * icons/eazel/Forward.png:
        * icons/eazel/Up.png:
        * icons/eazel/Home.png:
        * icons/eazel/Search.png:
        * icons/eazel/Refresh.png:
        * icons/eazel/Stop.png:
	Fixed problems with he above PNG files to
	stop the runtime errors.


2000-08-02  Ramiro Estrugo  <ramiro@eazel.com>

	* librsvg/rsvg-ft.c: (rsvg_ft_intern), (rsvg_ft_font_resolve),
	(rsvg_ft_render_string):

	Fix a small bug where a font entry was found in the table, but it
	wasnt returned.

	Quiet down debug noise.
	
	* librsvg/test-ft.c: (glyph_render_test), (main):

	Add some options and make affine transformation a simple identity
	to help debug the coordinates of the rendered text.
	
2000-08-02  Darin Adler  <darin@eazel.com>

	* check-FIXME.pl: Added HACKING to the files to skip.
	
	* components/services/install/idl/trilobite-eazel-install.idl:
	* components/services/install/lib/eazel-install-corba-callback.c:
	(impl_install_failed), (impl_uninstall_failed),
	(eazel_install_callback_query):
	* components/services/install/lib/eazel-install-corba-types.c:
	(corba_packagedatastruct_from_packagedata),
	(packagedata_from_corba_packagedatastruct):
	* components/services/install/lib/eazel-install-corba.c:
	(impl_Eazel_Install_query):
	* components/services/install/lib/eazel-install-protocols.c:
	(eazel_install_fetch_package),
	(eazel_install_fetch_package_which_provides),
	(get_url_for_package), (get_search_url_for_package):
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(eazel_install_do_rpm_transaction_save_report),
	(eazel_install_fetch_rpm_dependencies),
	(eazel_uninstall_upward_traverse),
	(eazel_uninstall_downward_traverse):
	* components/services/install/lib/eazel-install-types.c:
	(packagedata_destroy_foreach):
	* src/file-manager/fm-directory-view.c: (activate_callback):
	* src/nautilus-window.c: (nautilus_window_realize):
	Fixed "FIXME bugzilla.eazel.com ###:" formatting to match what
	check-FIXME.pl looks for. The colon goes after the bug number.
	And it has to be "bugzilla.eazel.com", not "bug".
	
	* libnautilus-extensions/nautilus-directory-async.c:
	(allow_metafile): Fixed a comment.

	* libnautilus-extensions/nautilus-drag.c:
	(nautilus_drag_can_accept_item):
	Got rid of a fixed FIXME and changed to use
	nautilus_file_is_directory instead of nautilus_file_get_file_type.

2000-08-02  John Sullivan  <sullivan@eazel.com>

	Finished task 1554 (Need new preference for accessing
	metadata remotely)

	* libnautilus-extensions/nautilus-global-preferences.h,
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog),
	(global_preferences_register_for_ui): Defined new speed
	tradeoff preference NAUTILUS_PREFERENCES_USE_PUBLIC_METADATA,
	and put it into the preferences dialog. The title is a little
	funky ("Make Directory Appearance Details Public"); hopefully 
	we can improve on that eventually.

2000-08-02  Andy Hertzfeld  <andy@eazel.com>

	* icons/eazel/Makefile.am:
	* icons/eazel/eazel.xml:
	* icons/eazel/number_strip.png:
	* icons/eazel/Back.png:
	* icons/eazel/Forward.png:
	* icons/eazel/Up.png:
	* icons/eazel/Home.png:
	* icons/eazel/Search.png:
	* icons/eazel/Refresh.png:
	* icons/eazel/Stop.png:
	new icons for eazel theme from Susan
		
2000-08-02  Josh Barrow  <linuxfan@ionet.net>

	* icons/arlo/arlo.xml:

	Changed to use Arlo's backgrounds.

2000-08-02  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-radio-button-group.c:
	(nautilus_radio_button_group_initialize),
	(nautilus_radio_button_group_new),
	(nautilus_radio_button_group_set_entry_pixbuf),
	(nautilus_radio_button_group_set_entry_description_text):
	* libnautilus-extensions/nautilus-radio-button-group.h:

	Have only one constructor and feed it whether the radio button
	group is horizontal or not.

	Changed the login of some assertions on code that is meant for the
	NOT horzontal case.  This should fix the torrent of assertions at
	startup.

	* libnautilus-extensions/nautilus-preferences-item.c:
	(preferences_item_create_enum),
	(preferences_item_create_short_enum):

	Update for radio button group constructor change.

	* src/nautilus-first-time-druid.c: (set_up_user_level_page),
	(set_up_service_signup_page):

	Update for radio button group constructor change.

	* test/test-nautilus-widgets.c: (main), (radio_group_load_it_up),
	(test_radio_group), (test_radio_group_horizontal):

	Add a test for the radio button group horizontal case.
	
2000-08-02  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize),
	(fm_desktop_icon_view_trash_state_changed_callback):
	Move the desktop icon updating call here from fm_directory_view.c.
	Since there is only one desktop, we will only try to update the
	Trash icon once this way, rather than once for every open window.
	Hook up the trash trash_state_changed properly.
	
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize), (compute_menu_item_info),
	(fm_directory_view_trash_state_changed_callback):
	Fix bugzilla 656: Empty Trash menu item is enabled even when Trash
	is empty.
	Hook up to the trash_state_changed signal and trigger a menu update for
	the change.
	
	* src/file-manager/nautilus-trash-monitor.c:
	* src/file-manager/nautilus-trash-monitor.h:
	(nautilus_trash_monitor_is_empty):
	Forgot to implement this one in my last checkin and it's needed for the
	above call.

2000-08-02  Pavel Cisler  <pavel@eazel.com>

	Bugzilla bug 1400
	
	* libnautilus-extensions/nautilus-directory.c:
	* libnautilus-extensions/nautilus-directory.h:
	(any_non_metafile_item),
	(nautilus_directory_is_not_empty):
	Added a call I needed to check a directory empty state.
	
	* src/file-manager/Makefile.am:
	* src/file-manager/nautilus-trash-monitor.h:
	* src/file-manager/nautilus-trash-monitor.c:
	(nautilus_trash_monitor_initialize_class),
	(nautilus_trash_files_changed_callback),
	(nautilus_trash_metadata_ready_callback),
	(nautilus_trash_monitor_initialize), (nautilus_trash_monitor_get),
	(nautilus_trash_monitor_shutdown):
	New trash state monitoring class, used to update the Trash icon, etc.
	
	* src/file-manager/fm-directory-view.c:
	(bonobo_menu_empty_trash_callback), (fm_directory_view_initialize),
	(fm_directory_view_trash_or_delete_selection),
	(trash_state_changed_callback):
	Hook up to the Trash monitor change signal.
	Tweak the callback Gene prepared for me earlier that updates the
	Trash icon to use the new signal.

	* src/file-manager/fm-directory-view.c:
	(finish_loading_uri):
	Tiny tweak - use a cover call instead of emitting a signal directly.
	
2000-08-02  Ali Abdin  <aliabdin@aucegypt.edu>
        * components/help/help-method.c:
        (transform_file):
        Bugfix to use 'new_uri_with_extension' instead of just 'new_uri' in
        some places.

        * components/help/converters/gnome-db2html2/sect-elements.c:
        * components/help/converters/gnome-db2html2/gdb3html.h:
        Added a placeholder for the <MENUCHOICE> tag. Also added the
        <GUISUBMENU> tag and made it act just like <GUIMENU> (these two still
        need to be modified to handle the correct behavior).

        * components/help/converters/gnome-db2html2/toc-elements.c:
        (toc_title_start_element):
	 Change 'ghelp' to 'help'

2000-08-02  Ramiro Estrugo  <ramiro@eazel.com>

	* components/services/install/command-line/.cvsignore:

	Ignore more generated files.
	
2000-08-02  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-string-picker.c:
	(nautilus_string_picker_set_string_list),
	(nautilus_string_picker_get_string_list):
	* libnautilus-extensions/nautilus-string-picker.h:

	Add an accessor for the string_list.
	
2000-08-02  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c:
	(scale_image_and_info), (scale_image_down_if_too_big),
	(load_image_scale_if_necessary):
	made it scale the attach_points when necessary
	
2000-08-02  Andy Hertzfeld  <andy@eazel.com>

	this almost completes the emblem attach point stuff, at least for the eazel theme,
	but there's still some tweaking left to do
	
	* libnautilus-extensions/nautilus-icon-canvas-item.c,h:
	(nautilus_icon_canvas_item_destroy),
	(nautilus_icon_canvas_item_set_attach_points),
	(emblem_layout_reset), (emblem_layout_next):
	added an attach_points attribute, and used it to determine the
	emblem positions if set	
	
	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_update_icon):
	get the emblem attach points from the icon factory, and tell the
	canvas item about them.
	
	* libnautilus-extensions/nautilus-icon-factory.c,h:
	(parse_attach_points), (get_themed_icon_file_path),
	(load_specific_image), (get_image_from_cache),
	(nautilus_icon_factory_get_pixbuf_for_icon):
	cleaned up and debugged the attach point handling
	
	* icons/eazel/Makefile.am:
	* icons/eazel/i-directory-accept.xml:
	* icons/eazel/i-directory.xml:
	set the emblem positions of folders in the eazel theme
	
2000-08-02  Ramiro Estrugo  <ramiro@eazel.com>

	* components/mozilla/mozilla-preferences.cpp:
	* components/mozilla/mozilla-preferences.h:
	* components/mozilla/nautilus-mozilla-content-view.c:
	(nautilus_mozilla_content_view_initialize):

	Add mozilla int pref poke function.  Add commented proxy pref poke
	command for comrade diskzero.
	
2000-08-01  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/command-line/Makefile.am:
	Added eazel-revert, should probably change name...
	
	* components/services/install/command-line/eazel-alt-install-corba.c:
	(done), (main):
	Fixed type in the POPT options and the destruction of the
	eazelinstall object.
	
	* components/services/install/command-line/eazel-alt-install.c:
	(main):
	Tried to revive it, but dropped it. Probably would be a nice
	feature, as to make a statically linked tool (see bug#1863).
	
	* components/services/install/command-line/eazel-revert.c:
	(set_parameters_from_command_line), (eazel_preflight_check_signal),
	(eazel_download_progress_signal), (eazel_install_progress_signal),
	(download_failed), (install_failed), (dep_check), (delete_files),
	(done), (get_password_dude), (set_root_client), (main):
	Did the first pass at a cli reversion tool.
	
	* components/services/install/idl/trilobite-eazel-install.idl:
	Removed some oneway statements and added the revert-transaction
	call.
	
	* components/services/install/lib/eazel-install-corba.c:
	(impl_Eazel_Install_uninstall_packages),
	(impl_Eazel_Install_revert_transaction), (eazel_install_get_epv):
	* components/services/install/lib/eazel-install-corba-callback.h:
	* components/services/install/lib/eazel-install-corba-callback.c:
	(eazel_install_callback_destroy), (eazel_install_callback_query),
	(eazel_install_callback_revert_transaction):
	Added the revert-transaction hooks.

	* components/services/install/lib/eazel-install-corba-types.c:
	(corba_packagedatastruct_from_packagedata):
	Updated for the changes to trilobite-distro-get-name

	* components/services/install/lib/eazel-install-public.h:
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_destroy), (eazel_install_install_packages),
	(eazel_install_uninstall_packages),
	(eazel_install_revert_transaction_from_xmlstring):
	install downloads the package list to the tmpdir. Added the code
	to call the revert-transaction in rpm-glue.c
	
	* components/services/install/lib/eazel-install-protocols.c:
	(http_fetch_remote_file), (get_search_url_for_package):
	First stuff for using lhamels rpmsearch cgi script.
	
	* components/services/install/lib/eazel-install-rpm-glue.h:
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(ei_get_packages_with_mod_flag), (ei_check_uninst_vs_downgrade),
	(hest), (revert_transaction),
	(eazel_install_do_rpm_transaction_save_report_helper),
	(eazel_install_do_rpm_transaction_save_report),
	(eazel_uninstall_upward_traverse):
	Did bug#1586, 1818, 1820. Hest is a debug function, will go
	away. The rest is code for the revert-transaction.

	* components/services/install/lib/eazel-install-types.c:
	(packagedata_fill_from_rpm_header):
	Read the RPMTAG_SUMMARY instead of RPMTAG_DESCRIPTION.	
	
	* components/services/install/lib/eazel-install-xml-package-list.h:
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(parse_package), (parse_memory_transaction_file),
	(eazel_install_packagedata_to_xml):
	Added code to parse a transaction file (bug#1817). Also some
	sanity checks wrt reading the status fields.
	
	* components/services/trilobite/libtrilobite/trilobite-core-distribut
	ion.c: (trilobite_get_distribution_name):
	* components/services/trilobite/libtrilobite/trilobite-core-distribut
	ion.h:
	Added a compact version of the distro names.

	* components/services/install/lib/makefile.staticlib.in:
	* nautilus-installer/src/Makefile:
	* nautilus-installer/src/Makefile.am:
	* nautilus-installer/src/installer.c: (installer), (oaf_init),
	(bonobo_init):
	* nautilus-installer/src/link.sh:
	* nautilus-installer/src/main.c: (main):
	* nautilus-installer/src/prescript:
	Updated the installer wrt the changes in libeazelinstall.

2000-08-01  Robey Pointer  <robey@eazel.com>

	* components/services/install/server/Makefile.am:
	* components/services/install/server/main.c: (main):
	*
	components/services/trilobite/libtrilobite/trilobite-service-passwo
	rdquery.c: (trilobite_passwordquery_get_password):
	* components/services/trilobite/sample/service/Makefile.am:

	Get rid of last references to libnautilus within services
	(services shouldn't need to link with any libnautilus code now,
	outside of nautilus-views).

2000-08-01  Andy Hertzfeld  <andy@eazel.com>

	lots of work towards task 1741, which is to have emblem attach points
	optionally associated with an icon, but no payoff quite yet.
	
	* libnautilus-extensions/nautilus-icon-factory.c,h:
	(parse_attach_points), (get_themed_icon_file_path),
	(get_icon_file_path), (load_specific_image),
	(load_image_for_scaling), (scale_image_down_if_too_big),
	(load_image_scale_if_necessary), (get_image_from_cache),
	(nautilus_icon_factory_get_pixbuf_for_icon),
	(nautilus_icon_factory_get_pixbuf_for_file),
	(load_image_with_embedded_text):
	changed the text_rect structure to an internal IconInfo structure
	that includes the text_rect and an array of emblem attach points.
	also, define an EmblemAttachPoints structure for external use.
	Read in the attach points from an xml file if present.
	added a parameter to get_pixbuf_for_icon to optionally return
	an EmblemAttachPoints structure.

	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_update_icon):
	ask for emblem attach points when fetching an icons's pixbuf
		
	* libnautilus-extensions/nautilus-bookmark.c:
	(nautilus_bookmark_get_pixbuf):
	added NULL parameter to get_pixbuf_for_icon_call
	* src/file-manager/fm-list-view.c:
	(fm_list_view_get_emblem_pixbufs_for_file):
	added NULL parameter to get_pixbuf_for_icon_call
	* src/file-manager/fm-properties-window.c:
	(create_image_widget_for_emblem):
	added NULL parameter to get_pixbuf_for_icon_call
	* src/nautilus-sidebar-title.c: (update_emblems):
	added NULL parameter to get_pixbuf_for_icon_call
	
	* icons/eazel/Makefile.am:
	* icons/eazel/i-directory.xml:
	added an xml file for the directory in the eazel theme to specify
	its emblem attach points
	
2000-08-01  Darin Adler  <darin@eazel.com>

	* src/nautilus-sidebar-tabs.c: (draw_or_hit_test_all_tabs):
	Fixed an uninitialized variable problem that caused a crash on
	boot for Kai Lahmann (thanks for the help, Kai).

	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_compare_for_sort_internal):
	(nautilus_file_get_string_attribute), Got rid of "real_name"
	and made "name" just do what "real_name" did before. Renamed
	"real_directory" to just "directory".

	* src/file-manager/fm-list-view.h:
	* src/file-manager/fm-list-view-private.h:
	* src/file-manager/fm-list-view.c: (fm_list_view_initialize_class),
	(fm_list_view_initialize), (fm_list_view_destroy),
	(fm_list_view_compare_rows), (compare_rows_by_name),
	(match_row_name), (select_matching_name_callback),
	(fm_list_nautilus_file_at), (row_get_data_binder),
	(fm_list_get_drag_pixmap), (create_list), (set_up_list),
	(add_to_list), (get_list), (fm_list_view_begin_loading),
	(fm_list_view_set_zoom_level), (fm_list_view_sort_items),
	(get_column_from_attribute), (get_sort_column_from_attribute),
	(install_row_images), (update_icons),
	(fm_list_view_embedded_text_policy_changed),
	(fm_list_view_image_display_policy_changed),
	(get_number_of_columns), (get_link_column),
	(get_column_specification), (get_column_titles),
	(get_column_attribute), (get_column_sort_criterion),
	(fm_list_view_column_set), (real_get_number_of_columns),
	(real_get_link_column), (real_get_column_specification):
	* src/file-manager/fm-search-list-view.h:
	* src/file-manager/fm-search-list-view.c:
	(fm_search_list_view_initialize_class),
	(fm_search_list_view_initialize), (real_get_number_of_columns),
	(real_get_link_column), (real_get_column_specification):
	Refactored the list view code so that the search list view
	doesn't have to replicate anything and can just describe the
	differences between it and the non-search list view. I was
	able to get rid of a lot of complexity while doing this.
	Changed to use the new "name" and "directory" instead of the
	old "real_name" and "real_directory" at the same time.
	
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_new_from_name), (nautilus_file_get), (destroy),
	(nautilus_file_is_self_owned),
	(nautilus_file_get_parent_uri_as_string),
	(get_file_for_parent_directory), (nautilus_file_rename),
	(nautilus_file_get_gnome_vfs_uri),
	(nautilus_file_get_uri), (nautilus_file_mark_gone),
	(nautilus_file_changed):
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory-async.c:
	(select_needy_file):
	Redid the "self-owning" file handling (for URIs with no parent) so
	that a URI doesn't show up as one of its own children.
	
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_is_search_directory):
	Took out "gnome-trash:" which doesn't belong in here. We are doing
	trash at the NautilusDirectory level, not the gnome-vfs level.
	
	* icons/arlo/backgrounds/.cvsignore: [added]
	* icons/arlo/backgrounds/Makefile.in: [removed]
	Added the missing cvsignore file and got rid of the Makefile.in,
	which should not be in cvs.
	
2000-08-01  Arlo Rose  <arlo@eazel.com>

        * icons/thumbnail_frame.png
	* icons/thumbnail_frame.aa.png
        Made them a bit lighter.

2000-08-01  Robin * Slomkowski <rslomkow@eazel.com>

	* src/run-nautilus: added return signal

2000-08-01  Arlo Rose  <arlo@eazel.com>

	* icons/thumbnail_frame.aa.png
	Made it a bit darker.

	* icons/gnome-pack-rpm.png
	Arlo-ized the icon.

2000-08-01  Gene Z. Ragan  <gzr@eazel.com>

	Fixed bug 1790, want a command to cause-removable media check.

	Well, here it is.  I am sure Josh will have fun finding bugs.
	
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_destroy),
	(fm_desktop_icon_view_create_background_context_menu_items):
	Added menu item to desktop icon view that lists possible
	mounted volumes and there current mount status.
	
	* src/file-manager/fm-desktop-mounting.c: 
	(floppy_sort),
	(fm_desktop_get_removable_volume_list),
	(fm_desktop_mount_unmount_removable),
	(mount_device_cdrom_set_state), (mount_device_floppy_set_state),
	(mount_device_activate_floppy), (eject_cdrom),
	(mount_device_deactivate), (mount_device_floppy_add),
	(mount_device_ext2_add), (cdrom_ioctl_frenzy),
	(mount_device_iso9660_add), (add_mount_device),
	(mntent_is_removable_fs), (fm_desktop_find_mount_devices):
	Added support for our new exciting mount menu item.

2000-08-01  John Sullivan  <sullivan@eazel.com>

	Finished task 1781 (Type of search bar should change
	immediately when preference changes)

	* src/nautilus-switchable-search-bar.c:
	(nautilus_switchable_search_bar_initialize): register to
	be notified of changes to the search-bar preference.
	(search_bar_preference_changed_callback): React to changes
	to the search-bar preference by calling _set_mode
	(nautilus_switchable_search_bar_initialize_class):
	install destroy handler.
	(nautilus_switchable_search_bar_destroy): Unregister
	search-bar preference callback.
	(nautilus_switchable_search_bar_set_mode): Added a FIXME
	comment about a reported bug.

2000-08-01  Michael Engber  <engber@eazel.com>

	* libnautilus/nautilus-bonobo-ui.h:
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_create_background_context_menu_items):
	* src/file-manager/fm-directory-view.c:
	(reset_bonobo_trash_delete_menu),
	(fm_directory_view_real_merge_menus):
	* src/file-manager/fm-directory-view.h:
	* src/nautilus-application.c:
	(nautilus_application_close_all_windows):
	* src/nautilus-application.h:
	* src/nautilus-window-menus.c:
	(file_menu_close_all_windows_callback),
	(nautilus_window_initialize_menus):
	Removed "Close Nautilus Desktop" from the desktop's
	right click menu. Removed "Exit" from the File menu.
	Added "Close All Windows" t the File menu. Bug# 1846

2000-08-01  John Sullivan  <sullivan@eazel.com>

	Finished task 1552 (Need "never" option for display-embedded-text
			    preference)
	Finished task 1553 (Need always/local-only/never preference for
			    creating image thumbnails)

	* libnautilus-extensions/nautilus-radio-button-group.h:
	* libnautilus-extensions/nautilus-radio-button-group.c:
	Added "horizontal" field in Details struct.
	(nautilus_radio_button_group_initialize): Initialize
	"horizontal" to FALSE (the default; what you get when
	calling plain "nautilus_radio_button_group_new").
	(nautilus_radio_button_group_new_horizontal): New function,
	used when radio buttons should be laid out in one row; sets
	details->horizontal to TRUE.
	(nautilus_radio_button_group_insert): Lay out the items
	differently depending on value of details->horizontal.
	(nautilus_radio_button_group_set_entry_pixbuf),
	(nautilus_radio_button_group_set_entry_description_text):
	Added g_return_if_fails if details->horizontal is true
	(because the horizontal layout doesn't have a place to
	put an icon or longer description; we could change that
	later if we needed to)

	* libnautilus-extensions/nautilus-preferences-item.h:
	Added new NAUTILUS_PREFERENCE_ITEM_SHORT_ENUM type for
	preferences dialog, to be used when the choices are small
	enough to fit in one row.
	* libnautilus-extensions/nautilus-preferences-item.c:
	(preferences_item_create_short_enum): New function, just like
	preferences_item_create_enum but uses horizontal radio button
	group.
	(preferences_item_construct): Call create_short_enum when
	type is NAUTILUS_PREFERENCE_ITEM_SHORT_ENUM

	* libnautilus-extensions/nautilus-global-preferences.h:
	Took the "REMOTE" out of the name of
	NAUTILUS_PREFERENCES_SHOW_TEXT_IN_REMOTE_ICONS; added
	NAUTILUS_PREFERENCES_SHOW_IMAGE_FILE_THUMBNAILS; added
	NautilusSpeedTradeoffValue enum.
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog): Added thumbnails preference
	to Speed Tradeoffs pane.
	(global_preferences_register_speed_tradeoff_with_defaults):
	New convenience function for registering always/local-only/never
	preferences.
	(global_preferences_register_for_ui): Register the embedded text
	and thumbnail-creation speed-tradeoff preferences.

	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_should_get_top_left_text): Respect all three
	states of the embedded-text preference.
	* libnautilus-extensions/nautilus-icon-factory.c:
	(should_display_image_file_as_itself): New function, respects the
	three states of the create-thumbnails preference.
	(nautilus_icon_factory_get_icon_for_file): Check preference
	before creating thumbnails (including image-as-itself case).
	
	* src/file-manager/fm-directory-view.h:
	New handlers for subclasses to fill in for when embedded-text 
	and thumbnail preferences change.
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize): Start monitoring embedded-text
	and thumbnail preferences.
	(fm_directory_view_destroy): Stop monitoring preferences.
	(embedded_text_policy_changed_callback),
	(image_display_policy_changed_callback): React when preferences
	change by executing subclass's handler, if any. I also put a
	hideous hack in here for kick-starting the embedded-text-reading
	code that otherwise wasn't working in some cases (will fix with
	Darin).
	* src/file-manager/fm-icon-view.c:
	(fm_icon_view_initialize_class): Install handlers for embedded-text
	and thumbnail preference changes.
	(fm_icon_view_embedded_text_policy_changed),
	(fm_icon_view_image_display_policy_changed): New functions; these
	are said handlers.
	* src/file-manager/fm-list-view.c: 
	(fm_list_view_initialize_class): Install handlers for embedded-text
	and thumbnail preference changes.
	(fm_list_view_embedded_text_policy_changed),
	(fm_list_view_image_display_policy_changed): New functions; these
	are said handlers.

2000-08-01  Gene Z. Ragan  <gzr@eazel.com>

	* src/file-manager/fm-desktop-mounting.c:
	(fm_desktop_mount_unmount_removable):
	Fixed a crasher that involved a conflict with the automounter
	and the user manually mounting and unmounting.
	
2000-08-01  Gene Z. Ragan  <gzr@eazel.com>

	More work on the desktop volume mount menu item.
	
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_create_background_context_menu_items):
	Work on showing state of current removable mounts
	in context menu item.
	
	* src/file-manager/fm-desktop-mounting.c:
	* src/file-manager/fm-desktop-mounting.h:
	(fm_desktop_mount_unmount_removable), (mount_device_check_change),
	(mount_devices_update_is_mounted):
	Fine tune mounting and unmounting removable volumes.
	

2000-08-01  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-graphic-effects.c:
	(draw_frame_row), (draw_frame_column), (stretch_frame_image):
	rewrote stretch_frame_image to stretch the frame properly, by repeating the
	area between the corners, instead of stretching the whole pixmap, which made it
	blurry and uneven.
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(draw_or_measure_label_text):
	(nautilus_icon_factory_make_thumbnails):
	set the border parameters correctly for the thumbnail frames
	slight improvement to fix from last check-in
	* libnautilus-extensions/nautilus-icon-factory.c:

2000-07-31  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(draw_or_measure_label_text):
	only save and restore the foreground color if we're drawing, otherwise
	the gc isn't allocated and we crash.
	
2000-07-31  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(draw_or_measure_label_text): Use RGB value for the label color.
	Also fix bug where we would not restore the old foreground color
	value in one case.
	* libnautilus-extensions/nautilus-icon-private.h:
	* libnautilus-extensions/nautilus-icon-container.h:
	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_initialize),
	(nautilus_icon_container_get_label_color), (update_label_color):
	Use an RGB color instead of allocating one. It's simpler.
	
	* libnautilus-extensions/nautilus-stock-dialogs.c:
	(timed_wait_free): Fixed backward assert that caused a core dump
	any time you attempted to change an owner or group.

2000-07-31  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-directory.c:
	(construct_alternate_metafile_uri):
	Back out debugging hacks that must have gotten checked in
	by accident and would have caused leaks.

2000-07-31  Andy Hertzfeld  <andy@eazel.com>

	* icons/eazel/i-regular.xml:
	removed bogus entry for non-existent icon size and tweaked
	the other sizes to better fit the icons.
	
2000-07-31  Maciej Stachowiak  <mjs@eazel.com>

	* nautilus-clean.sh: Added -m option to run medusa-restart.

2000-07-31  Arlo Rose  <arlo@eazel.com>

	* icons/arlo/backgrounds/background_pattern.png
	Fixed a file name that didn't match up with the Makefile.am

2000-07-31  Rebecca Schulman  <rebecka@eazel.com>
	Rewrote the search list view subclass to be
	more functional, and fixed most of the inheritance
	issues.  The search results are displayed in the
	wrong columns still, but the data in them is readable
	and correct.

	* src/file-manager/fm-list-view-private.h:
	* src/file-manager/fm-list-view.c: (fm_list_view_initialize_class),
	(fm_list_view_initialize), (fm_list_view_compare_rows),
	(fm_list_view_create_list), (add_to_list), (get_list),
	(fm_list_view_sort_items),
	(fm_list_view_get_attribute_from_column),
	(fm_list_view_get_sort_criterion_from_column),
	(fm_list_view_column_is_right_justified):
	* src/file-manager/fm-list-view.h:
	* src/file-manager/fm-search-list-view.c:
	(fm_search_list_view_initialize_class),
	(fm_search_list_view_initialize),
	(fm_search_list_view_get_sort_criterion_from_column),
	(fm_search_list_view_get_attribute_from_column),
	(fm_search_list_view_compare_rows),
	(fm_search_list_view_column_is_right_justified):


2000-07-31  Andy Hertzfeld  <andy@eazel.com>

	fixed bug 1034 and 1460, which were really the same bug: icon text
	gets drawn when it shouldn't be when icons are scaled.  This also
	made the icon text rectangles wrong at different scale factors.
	
	* libnautilus-extensions/nautilus-icon-factory.c:
	(get_themed_icon_file_path), (load_specific_image),
	(scale_image_and_rectangle), (load_image_with_embedded_text):
	scale_image_and_rectangle used the icon width for the text
	rectangle width, which was wrong - fixed by computing them
	separately.  Also, some small clean-ups.
	
2000-07-31  Gene Z. Ragan  <gzr@eazel.com>

	* src/file-manager/fm-desktop-mounting.c:
	(mount_device_deactivate), (add_mount_device),
	(fm_desktop_free_device_info):
	Fixed a crasher in unmounting that was a result of changing the 
	way adding and removing icons to the desktop were done.
	
2000-07-31  Gene Z. Ragan  <gzr@eazel.com>

	Fixed bug 1838, seperate volume mounting code into a new source file.
	
	* src/file-manager/Makefile.am:
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_destroy), (fm_desktop_icon_view_initialize),
	(fm_desktop_icon_view_create_background_context_menu_items):
	* src/file-manager/fm-desktop-icon-view.h:
	* src/file-manager/fm-desktop-mounting.c:
	(fm_desktop_rescan_floppy), (mount_device_is_mounted),
	(mount_device_cdrom_set_state), (mount_device_floppy_set_state),
	(mount_device_ext2_set_state), (mount_device_set_state),
	(device_set_state_empty), (mount_device_mount),
	(mount_device_activate_cdrom), (mount_device_activate_floppy),
	(mount_device_activate_ext2), (mount_device_activate),
	(mount_device_deactivate), (mount_device_do_nothing),
	(mount_device_check_change), (mount_devices_update_is_mounted),
	(mount_devices_check_status), (my_g_check_permissions),
	(mount_device_floppy_add), (mount_device_ext2_add),
	(cdrom_ioctl_frenzy), (mount_device_iso9660_add),
	(mount_device_add_aliases), (add_mount_device),
	(mntent_is_removable_fs), (mntent_has_option),
	(fm_desktop_find_mount_devices), (remove_mount_link),
	(fm_desktop_remove_mount_links), (fm_desktop_free_device_info),
	(get_iso9660_volume_name), (get_ext2_volume_name),
	(get_floppy_volume_name), (fm_desktop_place_home_directory):
	* src/file-manager/fm-desktop-mounting.h:

2000-07-31  John Sullivan  <sullivan@eazel.com>

	Finished rest of bug 762 (Framework for dealing with
	component that crashes). Remaining component-failure issues
	have been split off as separate bugs.

	* src/nautilus-sidebar.c: (nautilus_sidebar_remove_panel),
	* src/nautilus-view-frame.c: (check_object):
	Just added FIXME comments with bug numbers.
	
	* src/nautilus-window-manage-views.c:
	(report_sidebar_panel_failure_to_user):
	Turned this from a placeholder to a real function that puts up
	a sensible error message.
	(nautilus_window_update_state): Moved the report_to_user call
	to a place where it is hit in all the error cases, not just some.
	
	* src/nautilus-window.c:
	(window_update_sidebar_panels_from_preferences):
	Call nautilus_window_disconnect_view on sidebar panel before
	removing it the normal way so that it doesn't trigger the
	report-error-to-user code.

2000-07-28  Darin Adler  <darin@eazel.com>

	Mostly some tweaking on the recent link file work.

	* data/top/Makefile.am: Install the new ".link" files.
	* data/top/Computer: Renamed from Computer.link and added the new stuff
	needed for the MIME magic.
	* data/top/Computer.link: [deleted]
	* data/top/Services: Renamed from Services.link and added the new stuff
	needed for the MIME magic.
	* data/top/Services.link: [deleted]

	* components/tree/nautilus-tree-view.c: (queue_pending_files):
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_string_attribute):
	Get rid of all use of nautilus_link_get_display_name since
	links all have plain names now.
	
	* libnautilus-extensions/nautilus-directory-async.c:
	(set_up_request_by_file_attributes): Fix bug that was causing the
	program to get the activation URI for every single icon.  Lots of
	extra I/O! Also changed it to get the file info first since the
	activation URI is now based on MIME type.
	(lacks_activation_uri): Don't try to get the activation URI until
	after the file info is there.
	(activation_uri_done),
	(activation_uri_read_done),
	(activation_uri_nautilus_link_read_callback),
	(activation_uri_gmc_link_read_callback),
	(start_getting_activation_uris):
	Changed the code to read the activation URI to use MIME type,
	so now it doesn't have to open every file just to find out if it's
	a GMC link.
	
	* libnautilus-extensions/nautilus-file-utilities.c:
	(nautilus_get_desktop_directory): Get rid of a tiny bit of dead code.
	
	* libnautilus-extensions/nautilus-file.h:
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_contains_text): No need to special-case the link
	file any more because its MIME type will now make it clear it's
	not a text file.  Also removed nautilus_file_activate_custom since
	it's not needed any more and moved the logic into
	fm-directory-view.c.
	
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_for_file): Added FIXMEs.
	
	* libnautilus-extensions/nautilus-link-set.c:
	(nautilus_link_set_install): Changed comments to not call link files
	".link" files.
	
	* libnautilus-extensions/nautilus-global-preferences.h:
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_register_for_ui): Removed the
	NAUTILUS_PREFERENCES_SHOW_REAL_FILE_NAME preference since we no
	longer have to lie about file names to make ".link" files
	palatable.

	* libnautilus-extensions/nautilus-link.h:
	* libnautilus-extensions/nautilus-link.c: (nautilus_link_create):
	Added code that notifies the NautilusFile framework that a new file
	has been created, so callers don't have to worry about that.
	(nautilus_link_is_link_file): Simplified the code -- turned it into
	a one-liner.
	(nautilus_link_set_icon): The old code had half NautilusFile calls
	and half sync. I/O. Got rid of the NautilusFile stuff. Also put the
	code in to notify the NautilusFile framework about the change to
	the file.
	(nautilus_link_get_root_property): Added FIXME.
	(nautilus_link_get_additional_text): Added FIXME.
	(nautilus_link_get_link_uri): Added FIXME.
	Removed nautilus_link_get_display_name since it's not needed.
	
	* src/nautilus-desktop-window.c: (nautilus_desktop_window_new):
	Fixed GnomeVFSURI leak and turned a GnomeVFSURI into a text URI
	with gnome_vfs_uri_to_string, rather than gnome_vfs_uri_get_path
	which will not do anything useful.
	
	* src/file-manager/fm-desktop-icon-view.c:
	(mount_device_mount), (place_home_directory): Use
	nautilus_get_uri_from_local_path instead of just sticking a
	"file://" prefix on. Simplified by putting code to notify about
	the link file into the link file create function. Some other
	code cleanups and fixes of path/URI confusion.
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize): Use NAUTILUS_N_ELEMENTS.
	(fm_directory_view_display_selection_info), (queue_pending_files):
	Get rid of use of nautilus_link_get_display_name.
	(activate_callback): Added code to handle "command:" URIs, which
	used to be in nautilus_file_activate_custom.
	(fm_directory_view_activate_file): Get rid of call to the
	nautilus_file_activate_custom function.
	(set_trash_empty): Rewrote to simplify and fix some path/URI
	confusion.
	* src/file-manager/fm-icon-view.c: (get_icon_text_callback):
	Get rid of use of nautilus_link_get_display_name.
	
	* src/nautilus-property-browser.c:
	(nautilus_property_browser_drag_data_get), (remove_background),
	(remove_emblem), (emblem_image_file_changed),
	(add_background_to_browser), (emblem_dialog_clicked),
	(make_properties_from_directory): Use
	nautilus_get_uri_from_local_path instead of just sticking a
	"file://" prefix on.
	(get_xml_path): Use nautilus_make_path instead of just sticking
	a "/" between the two pieces.

2000-07-31  Gene Z. Ragan  <gzr@eazel.com>

	* src/file-manager/fm-desktop-icon-view.c:
	(mount_device_floppy_add):
	More floppy mount tweaking.

2000-07-30  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(button_press_event), (nautilus_icon_container_initialize_class):
	* libnautilus-extensions/nautilus-icon-container.h:
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_handle_middle_click),
	(fm_desktop_icon_view_initialize):
	Add support for the window manager middle mouse click menu on the
	desktop. Capture the middle mouse click, create a new XEvent and
	send it to the root window.

2000-07-30  Andy Hertzfeld  <andy@eazel.com>

	* data/top/Computer.link:
	* data/top/Services.link:
	fixed some breakage in the novice home directory: these built-in
	links were not being recognized as such, since they didn't have
	the magic mime string.  Fixed it by adding the string to them.
	* libnautilus-extensions/nautilus-link.c: (make_local_path):
	made it handle remote icon fetching better by unescaping the uri
	if necessary
	
2000-07-30  Andy Hertzfeld  <andy@eazel.com>

	fixed bug 1408, thumbnails do not have the right shadow.  Fixed by
	maintaining different thumbnails for the anti-aliased and
	non-anti-aliased cases.
	
	* libnautilus-extensions/nautilus-graphic-effects.c,h:
	(stretch_frame_image), (nautilus_embed_image_in_frame):
	got rid of old draw_frame routine, and added
	nautilus_embed_image_in_frame
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_for_file), (make_thumbnail_path),
	(nautilus_icon_factory_get_thumbnail_uri), (check_for_thumbnails),
	(load_thumbnail_frame), (nautilus_icon_factory_make_thumbnails):
	called nautilus_embed_image_in_frame to make the thumbnail frame;
	also, added the aa flag to various routines and respected it, using
	a different name and frame for the anti-aliased versions.
	
	* icons/Makefile.am:
	* icons/thumbnail_frame.png:
	* icons/thumbnail_frame.aa.png:
	added frame images to use for both cases (anti-aliased and non-aa)

2000-07-30  Mathieu Lacage  <mathieu@eazel.com>
	
	Make nautilus build with the latest oaf changes.
	_I_ did not broke the build for once :)
	
	* libnautilus-extensions/nautilus-mime-actions.c:
	(server_matches_content_requirements):
	* libnautilus-extensions/nautilus-view-identifier.c:
	(nautilus_view_identifier_new_from_oaf_server_info):

2000-07-30  Fatih Demir	<kabalak@gmx.net>

	* configure.in: Added zh_TW.Big5 to ALL_LINGUAS.
	[ who did forget it ... ]

2000-07-29  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-directory-background.c:
	(local_data_file_to_uri):
	made directory backgrounds interpret "./" when building background
	uri so the image can be kept in the theme folder
	* src/nautilus-sidebar.c: (map_local_data_file):
	ditto for sidebar

2000-07-28  Gene Z. Ragan  <gzr@eazel.com>

	* src/file-manager/fm-desktop-icon-view.c:
	(rescan_floppy_callback), (mount_device_activate_floppy),
	(mount_device_floppy_add), (get_ext2_volume_name),
	(get_floppy_volume_name):
	More work on floppy mounting.

2000-07-28  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-navigation-bar.c:
	(nautilus_navigation_bar_get_mapped_location),
	(nautilus_navigation_bar_location_changed):
	added heuristics to append http:// to typed in locations that look
	like urls and would otherwise fail, so the user isn't required
	to type in the protocol for web browsing
	
2000-07-28  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar-tabs.c: (draw_one_tab_themed):
	removed hack I put in to compensate for unevenly sized tab pieces
	now that Arlo has fixed them.
	* src/nautilus-location-bar.c: (editable_key_press_callback):
	added code to handle the right arrow properly for location
	auto-completion.
	
2000-07-28  Robey Pointer  <robey@eazel.com>

	* components/services/time/nautilus-view/trilobite-eazel-time-view.c:
	(sync_button_pressed), (trilobite_eazel_time_view_get_password),
	(trilobite_eazel_time_view_initialize),
	(trilobite_eazel_time_view_destroy):
	* helper-utilities/authenticate/nautilus-authenticate.c: (main):
	* libnautilus-extensions/nautilus-password-dialog.c:
	(nautilus_password_dialog_initialize),
	(nautilus_password_dialog_destroy), (nautilus_password_dialog_new):
	* libnautilus-extensions/nautilus-password-dialog.h:
	* test/test-nautilus-password-dialog.c:
	(authenticate_boink_callback):

	Ammend password dialog to accept an optional message to display
	at the top (for example, when asking for a retry after a bad
	password).  Fix time service to use the password dialog correctly
	and obey the cancel button and the "remember" checkbox, and to
	give you three tries before giving up.

2000-07-28  Arlo Rose  <arlo@eazel.com>

        * icons/arlo/side_bar_images/fill-active.png  
        This one didn't make it in somehow!

2000-07-28  Arlo Rose  <arlo@eazel.com>

        * icons/arlo/side_bar_images/fill-active.png
        * icons/arlo/side_bar_images/fill-prelight.png   
        * icons/arlo/side_bar_images/fill.png           
        * icons/arlo/side_bar_images/middle-normal-normal.png          
        * icons/arlo/side_bar_images/middle-normal-prelight.png
        * icons/arlo/side_bar_images/middle-prelight-normal.png
	I changed the height of these images to match the design.

2000-07-28  John Sullivan  <sullivan@eazel.com>

	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_register_for_ui): Just added three
	spaces to turn three neologisms into six words. Hint:
	three of the six words are "bar".

2000-07-28  John Sullivan  <sullivan@eazel.com>

	Finished task 1795 (Allow hiding of the pre-canned bookmarks)

	* libnautilus-extensions/nautilus-global-preferences.h:
	#define NAUTILUS_PREFERENCES_SHOW_BUILT_IN_BOOKMARKS
	
	* src/nautilus-bookmarks-window.c: 
	(create_bookmarks_window): Put "Include built-in bookmarks in menu"
	checkbox into Edit Bookmarks window; wire it up.
	(synch_built_in_bookmarks_preference_and_checkbox): New function
	that checks the state of the preference against the state of
	the checkbox and updates one to match the other if necessary.
	(update_built_in_bookmarks_preference_to_match_checkbox),
	(update_built_in_bookmarks_checkbox_to_match_preference): New
	functions, covers for synch_... that lean one way or the other.
	
	* src/nautilus-window-private.h: Renamed field in Details from
	"refresh_bookmarks_menu_idle_id" to "refresh_dynamic_bookmarks_idle_id"
	for clarity since it no longer refreshes all bookmarks.

	* src/nautilus-window-menus.c: 
	(append_bookmark_to_menu), (remove_bookmarks_after), 
	(nautilus_window_remove_bookmarks_menu_callback),
	(refresh_dynamic_bookmarks),
	(refresh_dynamic_bookmarks_idle_callback),
	(schedule_refresh_dynamic_bookmarks), (refresh_go_menu):
	Renamed functions and variables to clarify which ones affect
	all bookmarks and which ones affect only the dynamic bookmarks.
	(append_dynamic_bookmarks): New function, extracted from 
	refresh_dynamic_bookmarks so it can be also called elsewhere.
	(refresh_all_bookmarks): New function, clears away all bookmarks
	before replacing the static (optionally, based on preference)
	and dynamic (always) ones.
	(nautilus_window_initialize_bookmarks_menu): refresh all bookmarks
	and wire up to notice preference changes.

2000-07-28  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar-tabs.c: (draw_one_tab_plain),
	(draw_one_tab_themed), (draw_or_hit_test_all_tabs),
	(nautilus_sidebar_tabs_expose):
	mostly finished the themed sidebar tabs; there are some minor
	issues remaining that require Arlo's help to fix.  Made the
	titles draw in the right place and implemented the right edge
	bumper like Arlo specified.
	
2000-07-28  Mathieu Lacage  <mathieu@eazel.com>

	Implement complex search bar. Need to be hooked onto medusa
	
	* libnautilus-extensions/nautilus-search-bar-criterion-private.h:
	* libnautilus-extensions/nautilus-search-bar-criterion.c:
	(nautilus_search_bar_criterion_destroy), (option_menu_callback),
	(nautilus_search_bar_criterion_set_callback),
	(nautilus_search_bar_criterion_new_from_values),
	(nautilus_search_bar_criterion_next_new),
	(nautilus_search_bar_criterion_first_new),
	(nautilus_search_bar_criterion_get_location):
	* libnautilus-extensions/nautilus-search-bar-criterion.h:
	* src/nautilus-complex-search-bar.c: (criterion_callback),
	(nautilus_complex_search_bar_initialize),
	(nautilus_complex_search_bar_get_location),
	(unattach_criterion_from_search_bar), (more_options_callback),
	(fewer_options_callback):
	* src/nautilus-complex-search-bar.h:

2000-07-28  Josh Barrow  <linuxfan@ionet.net>

	Hopefully, this will be the last change required for 
	nautilus-clean.sh.  When you install gconf over an existing
	gconf installation, gconfd-1 appears.  This updated 
	nautilus-clean.sh for that instance. 

2000-07-28  Gene Z. Ragan  <gzr@eazel.com>

	First pass at adding floppy mounting to desktop.
	There are still access issues to be resolved.
	
	* src/file-manager/fm-desktop-icon-view.c:
	(rescan_floppy_callback):
	New callback to handle menu command
	
	(fm_desktop_icon_view_create_background_context_menu_items):
	Add menu item to rescan floppy device
	
	(mount_device_activate_floppy):
	Actually call mount on the floppy device
	
2000-07-28  John Sullivan  <sullivan@eazel.com>

	Finished task 1793 (Display hierarchical pre-canned set of bookmarks)

	There's now a "static_bookmarks.xml" file that gets installed into
	the Nautilus data directory. Its contents are parsed into menu items
	that appear above the user's dynamic items. The static items can
	include hierarchy and separators. I put in silly content; someone
	else will have to figure out what content we want to ship.

	* data/static_bookmarks.xml: New file, tree of bookmarks to display.
	* data/Makefile.am: Install the bookmarks file into data directory.
	
	* src/nautilus-bookmark-parsing.h,
	* src/nautilus-bookmark-parsing.c: New files, contain xml-bookmark-
	parsing code that's used by both the static and dynamic bookmarks.
	* src/Makefile.am: tell build about new files.
	
	* src/nautilus-bookmark-list.c: 
	(make_bookmark_from_node): Moved and renamed this into new file.
	(nautilus_bookmark_list_load_file): Call renamed function.
	
	* src/nautilus-window-menus.c: 
	Renamed BookmarkHolder "in_bookmarks_menu" field to "prompt_for_removal"
	to clarify its use.
	(bookmark_holder_new), (show_bogus_bookmark_window): Accounted for
	name changes.
	(append_separator): Just moved this function.
	(get_static_bookmarks_file_path): New function, returns path for
	static bookmarks file if found.
	(create_menu_item_from_node): New function, creates a menu item
	from an xml node, recursing into folders.
	(append_static_bookmarks): New function, reads xml document and
	starts the menu-item-creation recursion.
	(nautilus_window_initialize_bookmarks_menu): Now calls
	append_static_bookmarks before handling the dynamic ones.

	* src/nautilus-window-private.h: New last_static_bookmark_path field
	in Details struct.
	* src/nautilus-window.c: (nautilus_window_destroy): free
	last_static_bookmark_path field.

2000-07-28  Andy Hertzfeld  <andy@eazel.com>

	* icons/arlo/sidebar_tab_pieces/Makefile.am:
	Oops! I forget to include one of the sidebar tab pieces in the
	Makefile.
	
2000-07-28  Darin Adler  <darin@eazel.com>

	After complaints from Rebecca, I tested my search changes and
	fixed 3 bugs.

	* libnautilus-extensions/nautilus-search-uri.c:
	(nautilus_search_uri_to_simple_search_criteria):
	Return g_strdup ("") instead of NULL.
	* src/nautilus-navigation-bar.c:
	(nautilus_navigation_bar_initialize_class):
	Fixed bad marshalling that was causing a crash.
	* src/nautilus-switchable-navigation-bar.c:
	(nautilus_switchable_navigation_bar_initialize_class),
	(nautilus_switchable_navigation_bar_get_location):
	Added a get_location here. I missed this subclass and that caused
	an assert every time you search!
	* src/nautilus-switchable-search-bar.c:
	(nautilus_switchable_search_bar_initialize):
	Remove an unneeded callback function here (somehow I missed this
	case last time).
	* src/nautilus-switchable-search-bar.h:
	Fixed a wrong type and cleaned up formatting a bit.

2000-07-28  Gene Z. Ragan  <gzr@eazel.com>

	Fixed bug 1824, Remove automounter callback

	Added an element to details that holds the timer callback id
	so that we can remove it as the first thing we do in destroy.
	
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_destroy), (find_mount_devices):
	Add and remove timer callback.
	
2000-07-28  Andy Hertzfeld  <andy@eazel.com>
    * icons/arlo/sidebar_tab_pieces/Makefile.am:
	fixed glitch in make file
	
2000-07-28  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar-tabs.c: (setup_dark_text),
	(nautilus_sidebar_tabs_load_theme_data),
	(nautilus_sidebar_tabs_destroy),
	(nautilus_sidebar_tabs_unload_tab_pieces), (load_tab_piece),
	(nautilus_sidebar_tabs_load_tab_pieces), (draw_tab_piece),
	(draw_one_tab_themed), (get_text_offset),
	(draw_or_hit_test_all_tabs), (nautilus_sidebar_tabs_expose),
	(nautilus_sidebar_tabs_set_color):
	rework of the arlo sidebar tabs to use individual images for the pieces
	instead of a single one. There are still some glitches that I'll fix soon.
	* configure.in:
	added icons/arlo/sidebar_tab_pieces/Makefile
	* icons/arlo/Makefile.am:
	* icons/arlo/arlo.xml:
	added offsets for tabs
	* icons/arlo/sidebar_tab_pieces/.cvsignore:
	* icons/arlo/sidebar_tab_pieces/Makefile.am:
	* icons/arlo/sidebar_tab_pieces/*:
	new images for the arlo sidebar tab theme
	
2000-07-28  Gene Z. Ragan  <gzr@eazel.com>

	OK.  I made a booboo.  Went back to using NautilusFile.
	I really do understand what is going on now.
	
	* libnautilus-extensions/nautilus-directory-async.c:
	(activation_uri_gmc_link_read_callback):
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_contains_text), (nautilus_file_activate_custom):
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_for_file):
	* libnautilus-extensions/nautilus-link.c:
	(nautilus_link_is_link_file), (nautilus_link_set_icon):
	* libnautilus-extensions/nautilus-link.h:
	* src/file-manager/fm-icon-view.c: (get_icon_text_callback):

2000-07-28  Gene Z. Ragan  <gzr@eazel.com>

	Some placeholder trash code written at the request of Pavel.
	
	* libnautilus-extensions/nautilus-link.c: (nautilus_link_set_icon):
	Made sure the modified xml link gets flushed back to disk.
	
	* src/file-manager/fm-directory-view.c:
	(set_trash_empty):	
	New function that updates the status of the trash tracking global
	and update the trash icon.
	
	(bonobo_menu_empty_trash_callback),
	(fm_directory_view_trash_or_delete_selection):
	Add calls to set_trash_empty ()
	
	* src/nautilus-desktop-window.c: 
	(nautilus_desktop_window_new):
	Removed some debugging cruft
	
2000-07-27  Pavel Cisler  <pavel@eazel.com>

	Bug 1561: Font preferences have no effect on the list view.

	* src/file-manager/fm-directory-view.c:
	(text_attribute_names_changed_callback),
	(directory_view_font_family_changed_callback),
	(click_policy_changed_callback),
	(anti_aliased_mode_changed_callback),
	(fm_directory_view_initialize), (fm_directory_view_destroy):
	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-icon-view.c: (fm_icon_view_destroy),
	(fm_icon_view_text_attribute_names_changed),
	(fm_icon_view_font_family_changed),
	(fm_icon_view_click_policy_changed),
	(fm_icon_view_anti_aliased_mode_changed),
	(fm_icon_view_initialize_class), (fm_icon_view_initialize),
	(fm_icon_view_update_icon_container_fonts):

	Moved all the registering of preference change callbacks into 
	FMDirectoryView.
	Added default signal handlers that get called for each preference
	item change.
	Converted original preference change callbacks into default signal
	handler overrides in FMDirectoryView.

	* src/file-manager/fm-list-view.c: (fm_list_view_initialize_class),
	(fm_list_view_initialize), (fm_list_view_destroy),
	(fm_list_view_setup_list), (fm_list_view_update_click_mode),
	(fm_list_view_font_family_changed):
	Removed extra preference change callback setup calls, they are now
	all done in FMDirectoryView for both the icon view and list view.
	Added a simple font family changed callback that sets the selected
	font.
	Called it during list view initialization to make sure the list view
	comes up with the right saved font.
	
2000-07-27  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-link.c:
	(nautilus_link_is_link_file):
	Escape the path passed in so we can use gnome-fvs
	to determine the mime type.
	
2000-07-27  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c:
	(activation_uri_gmc_link_read_callback):
	Changed the API to determine if file is link file to use path.
	
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_contains_text), (nautilus_file_activate_custom):
	Changed the API to determine if file is link file to use path.

	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_for_file):
	Changed the API to determine if file is link file to use path.
	
	* libnautilus-extensions/nautilus-link.c: (nautilus_link_create),
	(nautilus_link_is_link_file), (nautilus_link_set_icon):
	Changed the API to determine if file is link file to use path.
		
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_destroy), (mount_device_mount),
	(remove_mount_links), (place_home_directory):
	More work on setting links icons.
	
	* src/file-manager/fm-icon-view.c: 
	(get_icon_text_callback):
	Changed the API to determine if file is link file to use path.
	
	* src/nautilus-desktop-window.c: 
	(nautilus_desktop_window_new):
	Work in progress on setting up the Trash icon.

2000-07-27  Seth Nickell  <seth@eazel.com>

	* icons/Makefile.am:
	Added entry for placeholder broken-symlink icon.
	
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_permissions_as_string),
	(nautilus_file_is_symbolic_link):
	Use new Gnome-VFS flags for symlink follow detection.
	
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_name_for_file):
	Deal w/ broken symbolic links properly.
	
2000-07-27  Arlo Rose  <arlo@eazel.com>

        * icons/arlo/i-directory.png
        * icons/arlo/i-regular.png
        Placeholders 'till I'm happy with my final design.

2000-07-27  Robey Pointer  <robey@eazel.com>

	* components/services/time/command-line/main.c: (get_password),
	(main):
	Make command-line time utility use TrilobiteRootClient.

2000-07-27  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-search-uri.c:
	(nautilus_search_uri_to_simple_search_criteria):
	This needs to return a g_free'able string, so I changed the
	placeholder to return NULL instead of "". (g_strdup ("") would
	also have been OK.)
	
	* src/nautilus-complex-search-bar.h:
	* src/nautilus-complex-search-bar.c:
	(nautilus_complex_search_bar_initialize_class),
	(nautilus_complex_search_bar_initialize),
	(nautilus_complex_search_bar_get_location),
	(nautilus_complex_search_bar_set_location):
	* src/nautilus-location-bar.c: (drag_data_received_callback),
	(drag_data_get_callback), (nautilus_location_bar_initialize_class),
	(nautilus_location_bar_initialize),
	(nautilus_location_bar_set_location),
	(nautilus_location_bar_get_location):
	* src/nautilus-navigation-bar.h:
	* src/nautilus-navigation-bar.c:
	(nautilus_navigation_bar_initialize_class),
	(nautilus_navigation_bar_get_location),
	(nautilus_navigation_bar_location_changed):
	* src/nautilus-search-bar.h:
	* src/nautilus-search-bar.c:
	(nautilus_search_bar_initialize_class),
	(nautilus_search_bar_initialize):
	* src/nautilus-simple-search-bar.h:
	* src/nautilus-simple-search-bar.c:
	(nautilus_simple_search_bar_initialize_class),
	(nautilus_simple_search_bar_initialize),
	(nautilus_simple_search_bar_set_location),
	(nautilus_simple_search_bar_get_location):
	* src/nautilus-switchable-navigation-bar.c:
	(nautilus_switchable_navigation_bar_initialize),
	(nautilus_switchable_navigation_bar_set_mode):
	* src/nautilus-switchable-search-bar.h:
	* src/nautilus-switchable-search-bar.c:
	(nautilus_switchable_search_bar_initialize_class),
	(nautilus_switchable_search_bar_set_mode),
	(search_activated_callback),
	(nautilus_switchable_search_bar_get_location),
	(nautilus_switchable_search_bar_set_location):
	Got rid of set_search_controls since set_location does exactly the
	same thing. Changed to use get_location in the
	NautilusNavigationBar base class instead of having lots of
	separate get_location. Fixed bug where get_location would return a
	non-g_strdup'd string, which callers would then g_free. Also
	changed to use simpler version of location_changed since the
	navigation bar can now get the location easily for itself so the
	subclasses need not do it. Callbacks now can call
	nautilus_navigation_bar_location_changed directly. Removed some
	empty destroy functions in classes where they are likely to be
	empty forever.
	
	* src/nautilus-window.c: (goto_uri_callback): Whitespace.

2000-07-27  Robey Pointer  <robey@eazel.com>

	* components/services/install/command-line/eazel-alt-install-corba.c:
	(eazel_install_progress_signal):
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_install_packages):

	Fix dumb \n -> \r typo I introduced on the last checkin.  Finish
	RPM delete-files implementation to actually traverse the package
	tree and delete all the RPM files.

2000-07-27  Arlo Rose  <arlo@eazel.com>

        * icons/eazel/*.png
        Images became corrupt in the last batch... fixed.

2000-07-27   J Shane Culpepper  <pepper@eazel.com>

	* components/services/summary/nautilus-view/nautilus-summary-view.c:
	(generate_summary_form):
	Fixing title so that it displays correctly.

2000-07-27  Arlo Rose  <arlo@eazel.com>

	* data/backgrounds/*.png
	* icons/eazel/*.png
	I fixed all the png files in these directories that
	contained the bad white point.

2000-07-27  Josh Barrow  <linuxfan@ionet.net>

	Minor change in nautilus-clean.sh so that it will kill 
	both gconfd and gconfd-0.6.  This is so that people that
	haven't upgraded to the latest, greatest gconf won't 
	have problems.

2000-07-27  Josh Barrow  <linuxfan@ionet.net>

	Changed the nautilus-clean.sh script to match the name of
	the new gconf daemon.  (gconfd-0.6)

2000-07-27  John Sullivan  <sullivan@eazel.com>

	Changed "Customize % Settings" to "Edit % Settings" to reduce
	the confusion about the two "Customize" menu items. This matches
	(one little bit of) Arlo's menu-layout proposal.

	* src/nautilus-window-menus.c: 

	(get_customize_user_level_settings_menu_string): Corrected the
	spelling of this function (had three consecutive t's)
	(clear_dynamic_bookmark_items): Renamed this from
	"clear_appended_bookmark_items" since I'm about to add support
	for appended bookmarks that aren't dynamic.

	(refresh_bookmarks_menu), (refresh_go_menu),
	(update_user_level_menu_items): updated callers to reflect name changes.

	(nautilus_window_initialize_menus), (get_customize_user_level_string):
	"Customize" -> "Change"	

2000-07-27  Rebecca Schulman  <rebecka@eazel.com>

	* src/nautilus-complex-search-bar.c:
	(nautilus_complex_search_bar_get_location):
	completely got rid of the committed,
	half-written code.
	I fixed this last night, but Mathieu's
	commit seems to have overwritten mine.
	
2000-07-27  Darin Adler  <darin@eazel.com>

	* src/nautilus-complex-search-bar.c:
	(nautilus_complex_search_bar_get_location): Fixed lack of NULL in
	a g_strconcat that was causing an intermittent crash on boot.

2000-07-27  Gene Z. Ragan  <gzr@eazel.com>

	Fixed bug 1474, special handling for running as root
	
	* src/nautilus-application.c: 
	(check_for_and_run_as_super_user):
	New function to determine if app is being run if root. If so,
	warn the user and allow them to cancel execution of
	the app.  Return users decision.
	
	(nautilus_application_startup):
	Call check_for_and_run_as_super_user. If the user is root
	and decides to quit, end program execution.
	
2000-07-27  Ramiro Estrugo  <ramiro@eazel.com>

	* librsvg/Makefile.am:

	Fix a dumb typo i introduced in my last checkin.
	
2000-07-27  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/fm-desktop-icon-view.c:
	(new_terminal_menu_item_callback),
	(fm_desktop_icon_view_create_background_context_menu_items):
	Bug 1792 - "New Terminal" command in menus.
	Added a menu item to the desktop context menu to start a new
	terminal.
	
	* libnautilus-extensions/nautilus-gnome-extensions.c:
	* libnautilus-extensions/nautilus-gnome-extensions.h:
	(max_open_files), (nautilus_gnome_terminal_shell_execute),
	(nautilus_gnome_open_terminal):
	For the above, added a call to launch a new Terminal, pieced
	together from the original GMC code, getting rid of some cruft we
	do not need and using stock glib calls where possible.

	* src/file-manager/fm-directory-view.c:
	(new_folder_menu_item_callback), (fm_directory_view_add_menu_item),
	(fm_directory_view_real_create_background_context_menu_items),
	(fm_directory_view_real_create_selection_context_menu_items):
	* src/file-manager/fm-directory-view.h:
	Did a part of 1063 - "The right click desktop menu needs more commands
	to match gmc" that is not covered by a separate bug - added a "New
	Folder" menu item.
	Fixes 1065 and 1067.
	
	* src/file-manager/dfos-xfer-progress-dialog.c:
	(create_titled_label), (dfos_xfer_progress_dialog_initialize):
	Complete task 1504 - Copy progress dialog needs a visual redesign.
	Made it so that the Copying:, From: and To: lines are packed more
	snugly, as per the design. The spacing of the original GtkLabels
	was too spacy.
	Used a non-zero border to offset the items more from the dialog edges
	to make it look more as designed.

2000-07-27  Mathieu Lacage  <mathieu@eazel.com>

	Fixes a number of bugs from rebecka latest commit.
	The UI for search is almost working. I will finish it
	tomorow and will hook it onto medusa quickly.
	
	* libnautilus-extensions/nautilus-search-bar-criterion.c:
	(number_from_type),
	(nautilus_search_bar_criterion_new_from_values),
	(nautilus_search_bar_criterion_next_new),
	(nautilus_search_bar_criterion_first_new):
	* libnautilus-extensions/nautilus-search-bar-criterion.h:
	* src/nautilus-complex-search-bar.c:
	(nautilus_complex_search_bar_initialize),
	(nautilus_complex_search_bar_get_location),
	(more_options_callback), (fewer_options_callback):

2000-07-27  Maciej Stachowiak  <mjs@eazel.com>

	* components/tree/nautilus-tree-model.c:
	* components/tree/nautilus-tree-model.h:
	* components/tree/nautilus-tree-node.c:
	(nautilus_tree_node_get_parent), (nautilus_tree_node_get_children),
	(nautilus_tree_node_get_file), (nautilus_tree_node_get_directory),
	(nautilus_tree_node_set_user_data),
	(nautilus_tree_node_get_user_data):
	* components/tree/nautilus-tree-node.h:

	Some work in progress on some model/view separation for the tree
	view.

	* libnautilus-extensions/nautilus-file-attributes.h,
	libnautilus-extensions/nautilus-directory-async.c
	(set_up_request_by_file_attributes): Added an "is directory"
	attribute which you can use in a file attribute list for a monitor
	or call_when_ready request, which insures we get that piece of
	info about files.

	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_real_name, nautilus_file_get_real_directory):
	Add necessary decoding for the search case.

	* src/file-manager/fm-search-list-view.c
	(get_attribute_from_column): Get the directory attribute for the
	directroy column.

2000-07-27  Andy Hertzfeld  <andy@eazel.com>

	Fixed task #1729, icon view labels need to adapt their text color to the background.
	
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(draw_or_measure_label_text):
	get the color to draw with from the icon container
	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_initialize),
	(nautilus_icon_container_get_label_color),
	(nautilus_icon_container_update_label_color):
	attach to the background's appearance_changed signal and
	compute the label color from the background when it changes
	* libnautilus-extensions/nautilus-icon-container.h:
	added call to nautilus_icon_container_get_label_color
	* libnautilus-extensions/nautilus-icon-private.h:
	added instance variable for label color
	
2000-07-27  Gene Z. Ragan  <gzr@eazel.com>

	Fixed bug #1775, add home directory to desktop.
	
	* icons/Makefile.am:
	Added temp-home.png. This is a temp icon file.
	
	* src/file-manager/fm-desktop-icon-view.c: (mount_device_mount),
	(place_home_directory), (create_desktop_link):
	Add users name and default icon to home directory link
	on desktop.  Change create_mount_link to more generic
	create_desktop_link.
	
2000-07-27  Maciej Stachowiak  <mjs@eazel.com>

	* libnautilus-extensions/nautilus-link.c
	(nautilus_link_is_link_file): Use nautilus_strcasecmp instead of
	strcasecmp, since the result may be NULL.

2000-07-27  Rebecca Schulman  <rebecka@eazel.com>

	* src/nautilus-complex-search-bar.c:
	(nautilus_complex_search_bar_get_location):
	disabled a not-ready for checkin function

2000-07-26  Robey Pointer  <robey@eazel.com>

	* components/services/time/nautilus-view/trilobite-eazel-time-view.c:
	(update_time_display), (trilobite_eazel_time_view_get_password),
	(trilobite_eazel_time_view_initialize),
	(trilobite_eazel_time_view_destroy):
	* components/services/time/service/Makefile.am:
	* components/services/time/service/trilobite-eazel-time-service.c:
	(impl_Trilobite_Eazel_Time_Service_set_max_difference),
	(impl_Trilobite_Eazel_Time_Service_set_time_url),
	(impl_Trilobite_Eazel_Time_Service_check_time),
	(impl_Trilobite_Eazel_Time_Service_update_time),
	(trilobite_eazel_time_service_create_corba_object),
	(trilobite_eazel_time_service_initialize),
	(trilobite_eazel_time_service_get_server_time):
	*
	components/services/trilobite/libtrilobite/trilobite-service-passwo
	rdquery.c: (trilobite_passwordquery_get_password):

	Make the sample time nautilus-view use the new testmachine url
	instead of old broken eazel24.  Break time-service of its
	libnautilus habit and make the nautilus-view do the password
	dialog instead.  Fix the nautilus-view's misinterpretation of the
	time-service return value.

2000-07-26  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-zoom-control.c:
	(nautilus_zoom_control_class_initialize), (draw_number),
	(draw_zoom_control_image), (nautilus_zoom_control_load_images):
	fixed recently introduced bug where the increment and decrement images were
	not being erased at the extremes; also, added the optional ability for a theme
	to define a custom number strip image for the little percentage number.
	* icons/arlo/Makefile.am:
	* icons/arlo/number_strip.png:
	added image for custom numbers to arlo theme
	* icons/arlo/arlo.xml:
	added info to theme for new number drawing

2000-07-26  Rebecca Schulman  <rebecka@eazel.com>

	Redid the complex search bar to look the way we actually
	wanted it.  There are still some bugs, but as far as i
	can tell, it hasn't introduced horrid instability, and 
	this way, mathieu, among other can work on the 
	partial amount of stuff i have done.  

	* libnautilus-extensions/Makefile.am:

	* src/Makefile.am:
	* src/nautilus-search-bar-criterion.c:
	* src/nautilus-search-bar-criterion.h:
	* libnautilus-extensions/nautilus-search-uri.h:
	* src/nautilus-search-bar.c:
	* src/nautilus-simple-search-bar.c:
	(nautilus_simple_search_bar_initialize_class),
	(nautilus_simple_search_bar_set_search_controls):
	* src/nautilus-switchable-search-bar.c:
	Moved nautilus-search-bar-criterion.c from src/ to 
	libnautilus-extensions.  
	
	* libnautilus-extensions/nautilus-search-bar-criterion.c:
	* libnautilus-extensions/nautilus-search-bar-criterion.h:
	(nautilus_search_bar_criterion_destroy),
	(nautilus_search_bar_criterion_new),
	(nautilus_search_bar_criterion_new_from_values),
	(nautilus_search_bar_criterion_next_new),
	(nautilus_search_bar_criterion_first_new),
	(nautilus_search_bar_criterion_list_get_last),
	(get_next_default_search_criterion_type),
	(nautilus_search_bar_criterion_show),
	(nautilus_search_bar_criterion_hide):
	redid this api, and made it saner.  Doesn't seem
	like a gtk class is even necessary, or even useful here.
	We just want to keep track of the widgets.
	
	* src/nautilus-complex-search-bar.c:
	(nautilus_complex_search_bar_initialize_class),
	(nautilus_complex_search_bar_initialize),
	(nautilus_complex_search_bar_get_location),
	(nautilus_complex_search_bar_set_search_controls),
	(attach_criterion_to_search_bar),
	(unattach_criterion_from_search_bar), (more_options_callback),
	(fewer_options_callback):
	redid this to use tables, instead of all the boxes, as per
	Gene's suggestion.  There are still a few bugs here
	with criterion removal that need to be worked out,
	and there also needs to be some level of translation to
	uri, and re-setting up the search criteria to correspond to
	a uri.

	* libnautilus-extensions/nautilus-search-bar-criterion-private.h:
	added to keep some sense of data privacy.
	
2000-07-26  Gene Z. Ragan  <gzr@eazel.com>

	* src/file-manager/fm-desktop-icon-view.c: (mount_device_mount),
	(make_home_link), (place_home_directory), (create_mount_link):
	Additional work on placement of home directory on desktop
	and conversion of mount links from gnome-vfs symbolic links
	to nautilus links.

2000-07-26  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-link.c:
	* libnautilus-extensions/nautilus-link.h:
	(nautilus_link_is_link_file):
	Renamed function nautilus_link_is_link_file_name to
	nautilus_link_is_link_fileand modified it to determine if
	it is a link file using mime magic.  Function now takes
	a NautilusFile * as the argument.
	
	* libnautilus-extensions/nautilus-link-set.c: (link_set_path_name),
	(create_new_link), (nautilus_link_set_is_installed),
	(nautilus_link_set_remove):
	Modified to use the new mime magic within the link file.

	* libnautilus-extensions/nautilus-directory-async.c:
	(activation_uri_gmc_link_read_callback):
	Changed nautilus_link_is_link_file_name to nautilus_link_is_link_file.
	
	* libnautilus-extensions/nautilus-directory.c:
	(construct_alternate_metafile_uri):
	Changed nautilus_link_is_link_file_name to nautilus_link_is_link_file.
	
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_contains_text), (nautilus_file_activate_custom):
	Changed nautilus_link_is_link_file_name to nautilus_link_is_link_file.
	
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_for_file):
	Removed old way of identifying mount volume links in anticipation
	of using mime magic.
		
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize), (mount_device_mount),
	(mount_device_floppy_add), (add_mount_device), (make_desktop_link),
	(get_ext2_volume_name), (place_home_directory):
	Removed old way of indentifying mount link files in anticipation
	of using mime magic.
	Work in progress on placing a home directory on the desktop.	

2000-07-26  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-first-time-druid.c: (druid_finished),
	(set_up_service_signup_page):
	added a "register now" alternative to the service signup page
	* libnautilus-extensions/nautilus-directory-background.c:
	(directory_changed_callback):
	removed a debugging message I accidentally checked in
	
2000-07-26  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/docs/install-user-settings:
	Added some more settings
	
	* components/services/install/lib/eazel-install-query.c:
	(eazel_install_simple_rpm_query):
	Some debug output
	
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(eazel_install_free_rpm_system),
	(eazel_install_check_existing_packages):
	free_rpm_system null's the pointers, prevents horrible rpm
	crashes. Check_existing correctly sets the modify flag.
	Better transaction reports.
	
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(eazel_install_packagedata_to_xml):
	cutn''pasta typo.
	
2000-07-26  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c:
	(activation_uri_found): Added a missing call to
	nautilus_directory_async_state_changed to keep the state machine
	alive.

2000-07-26  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c:
	(metafile_read_failed): First cut at only reading the metafile if the
	directory is really a directory. This might be making things worse
	for now, because I'm not sure if the file info is available at this
	point. I'll check in something better soon.
	
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_is_search_directory): Fixed backwards test that
	would return TRUE for many non-search directories. Then I put that
	code inside #if 0 and added a version of the function that just
	checks the scheme of the URI for now. Also added FIXMEs.
	
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_real_name): Simplfied the code a bit. Also added
	a FIXME.

2000-07-26  Ramiro Estrugo  <ramiro@eazel.com>

	* Makefile.am:
	* components/hardware/Makefile.am:
	* components/help/Makefile.am:
	* components/history/Makefile.am:
	* components/html/Makefile.am:
	* components/loser/content/Makefile.am:
	* components/loser/sidebar/Makefile.am:
	* components/music/Makefile.am:
	* components/notes/Makefile.am:
	* components/rpmview/Makefile.am:
	* components/services/install/nautilus-view/Makefile.am:
	* components/services/inventory/nautilus-view/Makefile.am:
	* components/services/login/nautilus-view/Makefile.am:
	* components/services/startup/nautilus-view/Makefile.am:
	* components/services/summary/nautilus-view/Makefile.am:
	* components/services/time/nautilus-view/Makefile.am:
	* components/services/trilobite/sample/nautilus-view/Makefile.am:
	* components/services/vault/nautilus-view/Makefile.am:
	* components/tree/Makefile.am:
	* components/websearch/Makefile.am:
	* cut-n-paste-code/widgets/e-paned/Makefile.am:
	* cut-n-paste-code/widgets/nautilus-druid/Makefile.am:
	* helper-utilities/authenticate/Makefile.am:
	* libnautilus-extensions/Makefile.am:
	* librsvg/Makefile.am:
	* src/Makefile.am:
	* test/Makefile.am:

	Make the cut-n-paste libraries be only static archives.  Link all
	the private libraries statically into libnautilus-extensions.
	Remove all the references to private libraries in all the
	components and other users of libnautilus-extensions so that
	dependencies can be managed in just one place.
	
2000-07-26  Robey Pointer  <robey@eazel.com>

	* components/services/install/command-line/eazel-alt-install-corba.c:
	(eazel_download_progress_signal), (eazel_install_progress_signal):
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_all_packages),
	(eazel_install_do_rpm_transaction_process_pipe):

	Fix a few small bugs in percentage reporting and display in the
	install service and its sample command-line client.

2000-07-26  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-property-browser.c: (add_to_content_table),
	(make_properties_from_themes), (set_up_category_width),
	(nautilus_property_browser_update_contents):
	added the capability for different categories to have a
	different number of columns, so we can make everything fit nicely
	
	* data/browser.xml:
	added columns field to all of the categories

2000-07-26  Gene Z. Ragan  <gzr@eazel.com>

	* src/file-manager/fm-cdrom-extensions.h:
	New file that has constants defined in <linux/cdrom.h>
	I added this to solve many problems that people are
	running into with both Mathieu's fix and the old way
	of including the kernel header.
	
	* src/file-manager/fm-desktop-icon-view.c:
	It makes me sad to do this, because Matheiu worked so hard
	to fix this, but I created a new file with the CDROM constants
	in them.  This solves several problems people have.  I wish
	there was a beter solution, because now we have to make
	sure we are in sync with the kernel header constants.

2000-07-26  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/dfos-xfer.c: (handle_xfer_vfs_error):

	Show a more meaningful error dialog when copy/move fails
	because the destination is not writable. This is a cheap 
	replacement for the original fix for bug 657, we aren't
	going to do the full fix for this release.
	

2000-07-26  Andy Hertzfeld  <andy@eazel.com>

	completed task 1774, desktop needs separate background in theme

	* libnautilus-extensions/nautilus-directory-background.c:
	(directory_changed_callback), (background_reset_callback):
	check for desktop tag when fetching from the theme
	* src/file-manager/fm-icon-view.c: (fm_icon_view_begin_loading):
	tag the desktop background so we can treat it specially
	* icons/arlo/arlo.xml:
	* icons/default.xml:
	* icons/eazel/eazel.xml:
	* icons/vector/vector.xml:
	added separate desktop backgrounds to the themes, which I'm sure Arlo and Susan
	will both want to change as soon as I show it to them

2000-07-26  Mathieu Lacage <mathieu@eazel.com>

	* src/file-manager/fm-desktop-icon-view.c:
	evil ugly hack to get nautilus to compile with 
	kernels >= 2.2.16. EKH.

2000-07-25  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-zoom-control.c:
	(nautilus_zoom_control_class_initialize),
	(nautilus_zoom_control_theme_changed), (get_zoom_offset),
	(draw_number), (draw_zoom_control_image),
	(nautilus_zoom_control_update_offsets),
	(nautilus_zoom_control_load_images),
	(nautilus_zoom_control_button_press_event),
	(nautilus_zoom_control_size_allocate):
	made the zoom control work properly with different sets of
	images by vertically centering the images and adding a
	number offset fetched from the theme.
	
	* icons/arlo/Makefile.am:
	* icons/arlo/arlo.xml:
	* icons/increment.png:
	* icons/decrement.png:
	* icons/zoom_body.png:
	zoom control pieces for arlo theme
	
	* icons/vector/Makefile.am:
	* icons/vector/vector.xml:
	* icons/zoom_body.png:
	zoom control body from Bud to try out
	
2000-07-25  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/docs/install-user-settings:
	Stuff that the user should be able to config.
	
	* components/services/install/lib/eazel-install-corba-types.c:
	Removed an unused include
	
	* components/services/install/lib/eazel-install-types.h:
	* components/services/install/lib/eazel-install-private.h:
	* components/services/install/lib/eazel-install-public.h:
	* components/services/install/lib/eazel-install-metadata.c:
	(create_default_configuration_metafile),
	(init_default_install_configuration), (installoptions_destroy):
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_set_arg), (eazel_install_class_initialize),
	(eazel_install_initialize), (eazel_install_new_with_config):
	Handle the transaction dir var.
		
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(download_all_packages),
	(eazel_install_do_rpm_transaction_make_argument_list),
	(eazel_install_do_rpm_transaction_save_report),
	(do_rpm_transaction), (eazel_install_add_to_rpm_set),
	(eazel_install_check_existing_packages),
	(eazel_install_fetch_rpm_dependencies), (eazel_uninstall_globber):
	Removed a lot of of rpmtransaction code. Polished the xml
	transaction output.	
	* components/services/install/lib/eazel-install-types.c:
	(packagedata_new):
	Default vals for status and modify status.
	
	* components/services/install/server/main.c: (sig_segv_handler),
	(main):
	Upon crash, say something on stdout.	

2000-07-25  Maciej Stachowiak  <mjs@eazel.com>

	I think I fixed 1693 and 1766 but I can't test them cause medusa
	searching is broken right now.

	* libnautilus-extensions/nautilus-directory.h,
	libnautilus-extensions/nautilus-directory.c
	(nautilus_directory_is_search_directory): New call to determine if
	a directory is a virtual search directory.

	* libnautilus-extensions/nautilus-file.h,
	libnautilus-extensions/nautilus-file.c:
	(nautilus_file_compare_by_real_name,
	nautilus_file_compare_by_real_directory,
	nautilus_file_compare_for_sort_internal): Added ability to sort by
	directory; made name sorting work right for search results.
	(nautilus_file_is_search_result, nautilus_file_get_real_name,
	nautilus_file_get_real_directory): New functions to get useful
	info about search results.
	(nautilus_file_get_string_attribute): Add real_name and
	real_directory attributes.

	* src/file-manager/fm-search-list-view.c: Use real_name and
	real_directory attributes for name and directory.
	(sort_criterion_from_column): sort properly by directory.

2000-07-25  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c:
	(activation_uri_gmc_link_read_callback):
	Add missing return statement.

2000-07-25  Darin Adler  <darin@eazel.com>

	* components/help/help-method.c: (help_uri_new): No parameters
	is indicated by "(void)" instead of "()".
	(help_uri_to_string): Changed to share more code (I think I might
	have fixed a leak too).
	(init_help_module): No parameters is indicated by "(void)"
	instead of "()". Also fixed a bug where the wrong lock is unlocked.
	(convert_file_to_uri): Use g_strcasecmp instead of strcmp since we
	are checking MIME types.
	(transform_file), (transform_absolute_file), (file_from_path),
	(find_help_file), (transform_relative_file): Merged these so they
	share a lot of common code.

	* components/services/vault/command-line/vault-operations.c:
	(vault_list): Fixed a g_strconcat that was missing a trailing NULL.
	
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-file-attributes.h:
	* libnautilus-extensions/nautilus-directory-async.c:
	(cancel_top_left_read), (top_left_read_done),
	(top_left_read_callback), (top_left_read_more_callback),
	(start_getting_top_lefts), Changed top_left code to use
	nautilus_read_file calls.
	(cancel_metafile_read),
	Changed to reflect name changes in nautilus_read_file calls.
	(cancel_get_activation_uri), (nautilus_directory_cancel),
	(set_up_request_by_file_attributes),
	(nautilus_async_destroying_file), (lacks_activation_uri),
	(wants_activation_uri), (request_is_satisfied),
	(activation_uri_found),
	(activation_uri_nautilus_link_read_callback),
	(activation_uri_gmc_link_read_callback),
	(activation_uri_gmc_link_read_more_callback),
	(start_getting_activation_uris),
	(nautilus_directory_async_state_changed): Add code to fetch
	activation URIs for either GMC or Nautilus-style link files.
	(lacks_top_left): Changed to share common
	nautilus_file_should_get_top_left_text function so we don't have
	lots of different code reading the preferences about top-left
	text.
	(is_needy): Enhanced and renamed is_wanted so it takes into
	account files that are and aren't interesting.
	(start_getting_directory_counts), (deep_count_start):
	(start_getting_file_info), Change to use is_needy.
	
	* libnautilus-extensions/nautilus-directory.h:
	* libnautilus-extensions/nautilus-directory.c:
	Tweaked spacing.

	* libnautilus-extensions/nautilus-file-private.h:
	Added a self_owned flag so we do better with files that don't have
	parent directories and the fields to support activation_uri.
	
	* libnautilus-extensions/nautilus-file-utilities.h:
	* libnautilus-extensions/nautilus-file-utilities.c:
	(read_file_close_callback), (read_file_close),
	(read_file_succeeded), (read_file_failed),
	(read_file_read_callback), (read_file_read_chunk),
	(read_file_open_callback), (nautilus_read_file_async),
	(nautilus_read_entire_file_async), (nautilus_read_file_cancel):
	Added a variation of the read file call that takes a function to
	decide whether to keep reading or not.
	
	* libnautilus-extensions/nautilus-file.h:
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_new_from_name), (nautilus_file_get),
	(nautilus_file_get_parent_uri_as_string),
	(get_file_for_parent_directory), (nautilus_file_rename),
	(nautilus_file_get_gnome_vfs_uri),
	(nautilus_file_get_uri),
	Add code that handles the "self_owned" flag to make files without
	parents work better.
	(destroy): Fixed some leaks I noticed.
	(nautilus_file_get_top_left_text),
	(nautilus_file_should_get_top_left_text): Added this so that all
	code can share a single call when deciding whether to get text
	based on local vs. non-local.
	(nautilus_file_get_activation_uri): Changed to work with new
	async. code to fetch this.
	
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_for_file): Call
	nautilus_file_should_get_top_left_text.
	
	* libnautilus-extensions/nautilus-link.h:
	* libnautilus-extensions/nautilus-link.c:
	(nautilus_link_is_link_file_name): Named so it's clear it looks
	at the file name only.
	(xml_get_root_property), (nautilus_link_get_root_property):
	Added these to share a lot of common code.
	(nautilus_link_get_additional_text): Use the new calls.
	(make_local_path), (icon_read_done_callback),
	(nautilus_link_get_image_uri), (nautilus_link_get_link_uri),
	(nautilus_link_get_display_name): Other cleanup and rewrite.
	(nautilus_link_get_link_uri_given_file_contents): Add API that
	can work with the async. I/O version.
	
	* libnautilus-extensions/nautilus-stock-dialogs.c:
	(timed_wait_free), (nautilus_timed_wait_start):
	Added some asserts.
	
	* src/file-manager/fm-directory-view.c: (activate_callback),
	(fm_directory_view_activate_file): Use call_when_ready and
	the new async. stuff.
	
	* src/file-manager/fm-error-reporting.c:
	(fm_report_error_setting_group): Added a (low-quality) error
	message for the case where you aren't alowed to change the
	group of something.
	
	* src/file-manager/fm-icon-view.c:
	(icon_position_changed_callback): Added missing NULL in a call
	to g_strconcat.
	(get_icon_text_callback): Fix storage leak.
	
	* src/file-manager/fm-properties-window.c:
	(activate_owner_callback): Fixed a timed_wait_start/stop mismatch
	that was causing an assert and other badness when you changed the
	owner.
	
	* src/file-manager/fm-search-list-view.c:
	(get_attribute_from_column): Added a missing case to prevent a
	crash, but had to put in a FIXME since the code isn't really working.
	
	* src/nautilus-application.c: (nautilus_application_startup):
	Fixed bug where you wouldn't see error messages on startup.  Also
	improved one of the error messages by adding some blank lines.

2000-07-25  Gene Z. Ragan  <gzr@eazel.com>

	* src/file-manager/fm-desktop-icon-view.c:
	Added an #if 0 to disable some functions that
	are not called but may be user soon.
	
2000-07-25  Gene Z. Ragan  <gzr@eazel.com>

	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_destroy)
	Clean up all of our symbolic links to mounted volumes.

	(device_set_state_empty)
	Set all devices to empty to start with.  Force a poll
	of all devices in fstab.
	
	(find_mount_devices)
	Call device_set_state_empty () on all device entries.

	(remove_mount_symlinks)
	Utility function to clear out device mouny symbolic link.
	
	(free_device_info):
	Clean up all data in DeviceEntry structure.

2000-07-25  Arlo Rose  <arlo@eazel.com>

	* icons/Makefile.am:
	* icons/emblem-trash.png
	Added the Trash emblem for items found in the trash by a search.
	It will change in the future when/if I clean up or change the
	real trash can icon.
	
2000-07-25  Robey Pointer  <robey@eazel.com>

	* components/services/install/command-line/eazel-alt-install-corba.c:
	(delete_files), (set_root_client), (main):
	* components/services/install/idl/trilobite-eazel-install.idl:
	* components/services/install/lib/eazel-install-corba-callback.c:
	(impl_delete_files), (eazel_install_callback_get_epv),
	(eazel_install_callback_class_initialize):
	* components/services/install/lib/eazel-install-corba-callback.h:
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_class_initialize), (eazel_install_install_packages),
	(eazel_install_emit_delete_files),
	(eazel_install_emit_delete_files_default):
	* components/services/install/lib/eazel-install-public.h:

	Add "delete_files" callback and signal to find out if its okay to
	delete the RPMs after an install.  It doesn't entirely work yet
	(not all files are deleted) pending a change in the install API.

2000-07-25  Robey Pointer  <robey@eazel.com>

	* components/services/trilobite/libtrilobite/trilobite-root-client-public.h:
	* components/services/trilobite/libtrilobite/trilobite-root-client.c:
	(trilobite_root_client_get_passwordqueryclient),
	(trilobite_root_client_attach):
	* components/services/trilobite/sample/command-line/main.c: (main):

	Move oft-repeated code (that attaches a TrilobiteRootClient to a
	service) into the API of the TrilobiteRootClient.

2000-07-25  Ramiro Estrugo  <ramiro@eazel.com>

	* components/mozilla/nautilus-mozilla-content-view.c:

	Fix the dumb bug that prevented local html content from showing
	up.  Also added a comment to clarify the protocol aborting hack.
	
2000-07-25  Andy Hertzfeld  <andy@eazel.com>

	completed bug 1442, toolbar zoom control needs to be themable.
	
	* src/nautilus-zoom-control.c: (nautilus_zoom_control_destroy),
	(nautilus_zoom_control_initialize), (nautilus_zoom_control_new),
	(nautilus_zoom_control_theme_changed):
	made the zoom control connect to the theme preference and update
	itself when the theme changes.
	* icons/eazel/Makefile.am:
	* icons/eazel/zoom_body.png:
	added an alternative magnifying glass to eazel theme for testing.
	It needs some clean-up, which Susan will do soon.
	
2000-07-25  Andy Hertzfeld  <andy@eazel.com>

	reorganized the menus.  There's now a user level menu, which uses
	the current user level symbol as its title, to feedback the
	current level.  There is no longer a settings menu; the rest of
	the stuff in the settings menu was moved to the bottom of the
	edit menu.  We probably want to tweak the order of items some more,
	but this mostly complete now.
	
	Note: you need to get a new bonobo to see the user level symbol
	in the menu title.

	* src/nautilus-window-menus.c: (user_level_customize_callback),
	(customize_callback), (help_menu_about_nautilus_callback),
	(get_user_level_image), (user_level_menu_item_callback),
	(user_level_changed_callback), (nautilus_window_initialize_menus),
	(update_user_level_menu_items), (convert_menu_path_to_user_level),
	(convert_user_level_to_menu_path):
	removed the settings menu and added a user level menu, using ski-slope
	symbols to express the user levels.
		
	* libnautilus/nautilus-bonobo-ui.h:
	changed the path of some menu items
	* src/file-manager/fm-directory-view.h:
	changed the path of some menu items
	* src/file-manager/fm-icon-view.c:
	(fm_icon_view_create_background_context_menu_items),
	(fm_icon_view_merge_menus):
	moved items from setting to edit menu

	* icons/Makefile.am:
	* icons/novice-selected.png:
	* icons/intermediate-selected.png:
	* icons/expert-selected.png:
	made the user level symbols smaller, and added checked ones to
	use in the menu to indicate selection.
	
	* icons/eazel/i-regular.xml:
	tweaked the text rectangles for the standard document icon in
	the eazel theme.

2000-07-25  John Sullivan  <sullivan@eazel.com>

	Note: this requires the latest gnome-vfs changes to compile.

	* libnautilus-extensions/nautilus-file.c:
	(set_owner_and_group): Pass GNOME_VFS_FILE_INFO_DEFAULT
	for get_file_info options.
	(set_owner_and_group_callback): Added new_info parameter to
	match GnomeVFS API change; use this parameter to update
	permissions when owner/group changes, since in some cases
	chown affects permissions.
	(nautilus_file_set_permissions): Pass GNOME_VFS_FILE_INFO_DEFAULT
	for get_file_info options.
	(set_permissions_callback): Added new_info parameter to match
	GnomeVFS API change; use this parameter to update ctime when
	permissions change (fixes bug 1453 -- changing permissions
	doesn't update permissions-changed date)
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_activate_file): Improved a comment to mention
	an existing bug number.

2000-07-25  Pavel Cisler <pavel@eazel.com>

	* libnautilus-extensions/nautilus-drag.c:
	* libnautilus-extensions/nautilus-drag.h:
	(nautilus_drag_default_drop_action_for_icons), (drag_motion_callback):
	Work around a bug in gtk-dnd.c that was making it impossible to
	force a move when dragging in between two volumes - the default
	is copy in that case and holding down Control would force it to
	be a copy too.
	The fix I did is only correct for icon drags, changed the routine
	name to reflect that better.
	
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(nautilus_icon_container_get_drop_action):
	Fix a typo bug that caused the non-default drop action to be 
	undefined for non-icon drags.

2000-07-25  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-property-browser.c: (category_clicked_callback),
	(make_category_link):
	better category highlight in the property browser, using toggle_buttons,
	as desired by Arlo.
	
2000-07-25  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-theme.c:
	(nautilus_theme_get_image_path):
	fixed problem in theme_get_image_path where it was calling
	g_file_exists on null strings.
	
2000-07-25  Gene Z. Ragan  <gzr@eazel.com>

	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_destroy),
	(fm_desktop_icon_view_initialize_class),
	(mount_device_cdrom_set_state), (mount_device_mount),
	(mount_device_activate_cdrom), (mount_device_deactivate),
	(mount_device_check_change), (mount_device_iso9660_add),
	(mount_device_add_aliases), (add_mount_device),
	(remove_mount_link), (remove_mount_symlinks),
	(get_iso9660_volume_name), (get_ext2_volume_name):
	More work on desktop volume mounting.  Added symbolic link
	cleanup in destroy function.  Symbolic mount links are also
	verified when a new volume mount is detected.

2000-07-25  John Sullivan  <sullivan@eazel.com>

	First simple cut at addressing 1469 (clicking on executables
	does not run them). Now it does, which works great for GUI-type
	executables but is pretty lame for command-line ones.

	* src/file-manager/fm-directory-view.c: 
	(file_is_launchable): New utility function, returns true if
	file is executable and not a directory.
	(compute_menu_item_info): Disable "Open in New Window" if
	there's only one item selected and it's executable, since in
	this case "Open" and "Open in New Window" would have the same
	behavior and thus the choice is confusing.
	(fm_directory_view_activate_file): If file is launchable,
	launch it directly instead of looking for another app/viewer to use.
	The user can still use "Open With" to open it differently.

2000-07-25  Andy Hertzfeld  <andy@eazel.com>

	reworked the zoom control to make it themable.  It now gets its pieces from
	three separate images, for flexible theming.  It's not watching the
	theme preference yet, but will be soon
		
	* src/nautilus-zoom-control.c,h: (nautilus_zoom_control_destroy),
	(get_zoom_width), (nautilus_zoom_control_initialize),
	(draw_number), (draw_pixbuf), (draw_zoom_control_image),
	(nautilus_zoom_control_draw), (nautilus_zoom_control_expose),
	(nautilus_zoom_control_unload_images), (load_themed_image),
	(nautilus_zoom_control_load_images), (zoom_menu_callback),
	(create_zoom_menu), (nautilus_zoom_control_button_press_event),
	(nautilus_zoom_control_set_zoom_level),
	(nautilus_zoom_control_set_min_zoom_level),
	(nautilus_zoom_control_set_max_zoom_level),
	(nautilus_zoom_control_set_preferred_zoom_levels),
	(nautilus_zoom_control_get_zoom_level),
	(nautilus_zoom_control_get_min_zoom_level),
	(nautilus_zoom_control_get_max_zoom_level):
	rework to make instance variables private, and use separate images fetched
	using the theme mechansim.
	* icons/Makefile.am:
	* icons/increment.png:
	* icons/decrement.png:
	* icons/zoom_body.png:
	new images for the reworked zoom control. Removed the old "zoom.png" image	
	* libnautilus-extensions/nautilus-theme.c:
	some small clean-ups

2000-07-25  Gene Z. Ragan  <gzr@eazel.com>
	
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_for_file):
	Added some code to check if file is a mountable item.  If so,
	the proper icon is selected.

	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_add):

	* src/file-manager/fm-desktop-icon-view.c: (get_icon_container),
	(fm_desktop_icon_view_initialize), (mount_device_is_mounted),
	(mount_device_cdrom_set_state), (mount_device_floppy_set_state),
	(mount_device_ext2_set_state), (mount_device_set_state),
	(local_device_set_state_empty), (mount_device_mount),
	(mount_device_activate_cdrom), (mount_device_activate_floppy),
	(mount_device_activate_ext2), (mount_device_activate),
	(mount_device_deactivate), (mount_device_check_change),
	(mount_devices_update_is_mounted), (mount_devices_check_status),
	(my_g_check_permissions), (mouunt_device_floppy_add),
	(mount_device_ext2_add), (cdrom_ioctl_frenzy),
	(mount_device_iso9660_add), (mount_device_add_aliases),
	(add_mount_device), (mntent_is_removable_fs), (mntent_has_option),
	(find_mount_devices), (make_mount_link), (get_iso9660_volume_name),
	(get_ext2_volume_name):
	New functions to add mounted volumes to the desktop.  This is work in 
	progress and is being checked in just to keep me sane.  Don't expect it
	to work yet.
	
2000-07-24  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-gdk-extensions.c:
	* libnautilus-extensions/nautilus-gdk-extensions.h:
	(nautilus_gdk_font_get_bold):
	New K-rad call to get a bold flavor of a given font.
	
	* libnautilus-extensions/nautilus-gtk-extensions.c:
	(nautilus_gtk_label_make_bold):
	Add a convenience call to set a label to a bold font.
	
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	* src/file-manager/dfos-xfer-progress-dialog.c:
	(create_titled_label), (dfos_xfer_progress_dialog_initialize):
	Use bold labels where appropriate.
	Make the To: From: and Copying: labels properly right-aligned.
	Add a space between the labels and the paths to make it look nicer.
	
	* src/file-manager/dfos-xfer.c:
	(progress_dialog_set_to_from_item_text):
	Chop off the trailing '/' from to and from paths in the progress
	dialog.

2000-07-24  John Sullivan  <sullivan@eazel.com>

	Fixed bug 1469 (changing owner/group doesn't handle
	special flags correctly)

	* libnautilus-extensions/nautilus-file.c:
	(set_owner_and_group_callback), (set_owner_and_group):
	Changing the owner or group on an executable file now
	clears the SUID and SGID bits as per explanation in
	man 2 chown.

2000-07-24  Pavel Cisler <pavel@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(button_release_event):
	Fix bugzilla 1611 - Poor right-click and move behavior.
	In button_release detect that a drag has not started during a
	right-click and start a context menu instead.
	
2000-07-24  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-theme.c:
	(nautilus_theme_make_selector):
	made it use a theme preview icon, if available
	* src/nautilus-property-browser.c:
	(nautilus_property_browser_initialize):
	got rid of explicit backgrounds for the three panels, so they use whatever is
	specified by the current theme
	* icons/arlo/Makefile.am:
	* icons/arlo/theme_preview.png:
	added preview icon for arlo theme
	* icons/eazel/Makefile.am:
	* icons/eazel/theme_preview.png:
	added preview icon for eazel theme

2000-07-24  Pavel Cisler <pavel@eazel.com>

	* RENAMING:
	Add an entry.
	
	* libnautilus-extensions/nautilus-font-factory.c:
	(nautilus_font_factory_get_font_from_preferences):
	Fix a typo in font name.
	
	* src/file-manager/dfos-xfer-progress-dialog.c:
	(dfos_xfer_progress_dialog_update), (truncate_string_from_start),
	(set_text_unescaped_trimmed), (dfos_xfer_progress_dialog_close),
	(dfos_xfer_progress_dialog_destroy), (create_titled_label),
	(dfos_xfer_progress_dialog_initialize),
	(dfos_xfer_progress_dialog_initialize_class),
	(dfos_xfer_progress_dialog_new),
	(dfos_xfer_progress_dialog_set_total),
	(dfos_xfer_progress_dialog_set_operation_string),
	(dfos_xfer_progress_dialog_new_file),
	(dfos_xfer_progress_dialog_clear),
	(dfos_xfer_progress_dialog_update_sizes),
	(dfos_xfer_progress_dialog_freeze),
	(dfos_xfer_progress_dialog_thaw):
	* src/file-manager/dfos-xfer-progress-dialog.h:
	* src/file-manager/dfos-xfer.c: (create_xfer_dialog),
	(progress_dialog_set_files_remaining_text),
	(progress_dialog_set_to_from_item_text), (handle_xfer_ok),
	(fs_xfer), (fs_move_to_trash), (fs_delete), (fs_empty_trash):
	Start reworking progress dialog to Arlo specs.
	Still need some heavy Gtk wrestling to make it match the design.

2000-07-23  Andy Hertzfeld  <andy@eazel.com>

	rework of the property browser to Arlo's design
	
	* src/nautilus-property-browser.c:
	(nautilus_property_browser_initialize),
	(nautilus_property_browser_destroy),
	(nautilus_property_browser_show),
	(nautilus_property_browser_delete_event_callback),
	(nautilus_property_browser_drag_end), (category_clicked_callback),
	(make_properties_from_directory_path),
	(make_properties_from_directory), (make_properties_from_xml_node),
	(make_category), (make_category_link),
	(nautilus_property_browser_update_contents):
	converted the property browser to use a two panel design, where it remembers
	the last category for next time. Made it use a single, persistent one instead of
	allocating a new one each time
	* src/nautilus-property-browser.h:
	added nautilus_property_browser_show
	* src/nautilus-window-menus.c: (settings_menu_customize_callback):
	made the "customize" menu command call nautilus_property_browser_show instead of _new
	* src/nautilus-sidebar-tabs.c:
	(nautilus_sidebar_tabs_load_theme_data),
	(draw_or_hit_test_all_tabs):
	made the tabs in the arlo theme pre-light properly
	* icons/arlo/arlo.xml:
	changed rectangle for prelight tab piece
	
2000-07-23  J Shane Culpepper  <pepper@eazel.com>

	* components/services/inventory/Makefile.am:
	* components/services/login/Makefile.am:
	* components/services/summary/Makefile.am:
	* components/services/vault/Makefile.am:

	Removing template directories from default build
	until they contain something useful.

2000-07-21  Mathieu Lacage  <mathieu@eazel.com>

	Updates nautilus to the latest gnome-vfs changes.
	
	* components/music/nautilus-music-view.c: (play_current_file),
	(nautilus_music_view_update_from_uri):
	* components/services/vault/command-line/vault-operations.c:
	(vault_list):
	* libnautilus-extensions/bonobo-stream-vfs.c: (vfs_length):
	* libnautilus-extensions/nautilus-directory-async.c:
	(nautilus_directory_get_info_for_new_files),
	(start_monitoring_file_list), (start_getting_directory_counts),
	(deep_count_load), (start_getting_file_info):
	* libnautilus-extensions/nautilus-icon-factory.c:
	(vfs_file_exists), (first_file_more_recent),
	(path_represents_svg_image), (cached_image_still_valid):
	* libnautilus-extensions/nautilus-mime-actions.c:
	(get_mime_type_from_uri):
	* libnautilus-extensions/nautilus-preferences-item.c:
	(has_image_file), (add_icon_themes):
	* src/file-manager/fm-properties-window.c:
	(get_property_names_from_uri):
	* src/nautilus-applicable-views.c: (async_get_file_info_text):
	* src/nautilus-link-set-window.c: (get_link_set_names):
	* src/nautilus-location-bar.c: (try_to_expand_path):
	* src/nautilus-property-browser.c: (ensure_uri_is_image),
	(make_properties_from_directory_path), (vfs_file_exists),
	(make_properties_from_themes):

2000-07-21  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/command-line/Makefile.am:
	* components/services/install/command-line/genpkg_list.example:
	* components/services/install/lib/Makefile.am:
	* components/services/time/command-line/Makefile.am:
	* components/services/time/nautilus-view/Makefile.am:
	* components/services/time/service/Makefile.am:
	* components/services/trilobite/sample/command-line/Makefile.am:
	* components/services/trilobite/sample/command-line/main.c:
	* components/services/trilobite/sample/service/Makefile.am:
	The build was completely wasted if you did a make uninstall,
	since the libtrilobite.h changes hadn't been made to all the libs
	using it. This should fix it. I now need to check, if it uses the
	installer or local .h files after a make install.
	
	* components/services/install/lib/eazel-install-corba.c:
	* components/services/install/lib/eazel-install-protocols.c:
	(get_url_for_package):
	Added a FIXME.

2000-07-21  Ali Abdin  <aliabdin@aucegypt.edu>

	* components/help/help-method.c:
	(transform_absolute_file): Changed some stuff to fit Eazel style
	guidelines. Fixed a couple of places that should use 'temp_file2'
	instead of 'temp_file' (this prolly fixes a leak too).
	(file_from_path): New function - returns the filename with no suffix
	from a given path.
	(transform_relative_file): Filled in this function. This fixed bug
	#698 (i18n)
	(help_uri_to_string): Make NULL the last argument to g_strconcat since
	that is the required behavior (otherwise mem-corruption)
	(convert_file_to_uri): Modified to match Eazel style guidelines.
	Removed erroneous mime-type comparison for SGML files. Changed the
	check for 'info' from a 'strncmp' to a 'strcmp'.

	Also removed the FIXME's for bug #696 and #698

2000-07-21  Robin * Slomkowski  <rslomkow@eazel.com>

	* components/services/trilobite/libtrilobite/Makefile.am:
		added the current source directory to the includes
	* components/services/trilobite/libtrilobite/trilobite-root-client-public.h:
		changed the include to not look for libtrilobite/
		for trilobite-service.h

2000-07-20  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/lib/eazel-install-protocols.c:
	(eazel_install_fetch_package):
	I tried to read the package header before downloading the file. Duh.

2000-07-20  Seth Nickell  <seth@eazel.com>

	* libnautilus-extensions/nautilus-search-uri.c:
	(nautilus_simple_search_criteria_to_search_uri):
	Add better escaping to the search bar, rendering it functional!
	
2000-07-20  Ramiro Estrugo  <ramiro@eazel.com>

	* cut-n-paste-code/freetype/Makefile.am:
	Make distcheck happy.
	
2000-07-20  Eskil Heyn Olsen  <eskil@eazel.com>

	*
	components/services/install/command-line/eazel-alt-install-corba.c:
	(install_failed), (get_password_dude), (set_root_client), (main):
	Added Robey's trilobite-root-helper-client thingy. Now prompts for
	password.
	
	* components/services/install/lib/eazel-install-corba-callback.h:
	* components/services/install/lib/eazel-install-corba-callback.c:
	(eazel_install_callback_destroy),
	(eazel_install_callback_corba_objref),
	(eazel_install_callback_bonobo):
	Added a function to get the bonoboobjectclient pointer from the
	callback dingbot.
	
	* components/services/install/lib/eazel-install-object.c:
	(xml_from_packagedata):
	Duh, the xml creation was screwed.
	
	* components/services/install/lib/eazel-install-protocols.h:
	* components/services/install/lib/eazel-install-protocols.c:
	(eazel_install_fetch_package),
	(eazel_install_fetch_package_which_provides),
	(get_url_for_package), (get_search_url_for_package):
	Added code to fetch a package using the ?provides=; entry
	point. Also fetching now immediately reads the package header.
	
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_all_packages),
	(eazel_install_do_rpm_transaction_make_argument_list),
	(do_rpm_transaction), (eazel_install_load_rpm_headers),
	(eazel_install_check_existing_packages),
	(eazel_install_fetch_rpm_dependencies):
	Better check-existing-package code. No longer allows installs of
	packages already present with equal or higher version. Fixed the
	bad "--force --nodeps" argument to rpm. Implemented querying for
	file dependencies.
	
	* components/services/install/lib/eazel-install-types.h:
	* components/services/install/lib/eazel-install-types.c:
	(packagedata_new), (packagedata_new_from_file),
	(packagedata_fill_from_file), (packagedata_destroy_foreach),
	(packagedata_status_enum_to_str), (packagedata_status_str_to_enum),
	(packagedata_modstatus_enum_to_str),
	(packagedata_modstatus_str_to_enum):
	Fixes to the (mod)status to enum and vice versa. Also some
	functions to load a header into a package. 

	* components/services/install/lib/eazel-install-xml-package-list.c:
	(parse_package):
	Now parses MODIFIES into the structure, also checks if MODSTATUS
	is present before calling modstatus_str_to_enum,
	
	* components/services/install/lib/libeazelinstall.h:
	*
	components/services/trilobite/libtrilobite/libtrilobite-service.h:
	* components/services/trilobite/libtrilobite/libtrilobite.h:
	*
	Fixed <.../...> to "...", and added the gtk roothelper.

2000-07-20  Ramiro Estrugo  <ramiro@eazel.com>

	* librsvg/.cvsignore:
	Ignore generated test-ft file.
	
2000-07-20  Ramiro Estrugo  <ramiro@eazel.com>

	* src/Makefile.am:
	Add the check-nautilus script to EXTRA_DIST to make distcheck
	happy.
	
2000-07-20  Raph Levien  <raph@acm.org>

	* cut-n-paste-code/freetype/ftmodule-list.h: Imported from
	include/freetype/config/ftmodule-list.h from the Freetype codebase.
	The name was changed to avoid a collision with the exsiting
	ftmodule.h.

	* cut-n-paste-code/freetype/ftinit.c: Renamed config/ftmodule.h
	to ftmodule-list.h.

	* cut-n-paste-code/freetype/ftgrays.c: 
	* cut-n-paste-code/freetype/ftextend.c:
	* cut-n-paste-code/freetype/ftsystem.c: Little tweaks to
	make compilation happier now that warnings are stricter.

	* cut-n-paste-code/freetype/Makefile.am: Changed CFLAGS to
	INCLUDES for setting FT_FLAT_COMPILE. The former was clobbering
	other important flags, including -g and various -W*.
	
2000-07-20  Rebecca Schulman  <rebecka@eazel.com>


	* libnautilus-extensions/nautilus-directory-async.c:
	(allow_metafile), (start_monitoring_file_list):
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_destroy), (nautilus_directory_get),
	(construct_alternate_metafile_uri), (nautilus_directory_is_local),
	(nautilus_directory_file_monitor_remove):
	* libnautilus-extensions/nautilus-directory.h:
	got rid of changes before made for putting medusa
	communication into nautilus. that is all part of 
	gnome-vfs now.

	* libnautilus-extensions/nautilus-search-async.c:
	* libnautilus-extensions/nautilus-search-async.h:
	* libnautilus-extensions/Makefile.am:
	Deprecated as they are no longer necessary  (see above)
	
	* libnautilus-extensions/nautilus-string.c:
	* libnautilus-extensions/nautilus-string.h:
	(nautilus_str_get_after_prefix):
	added new function that nautilus-string-uri will use.
	
	* src/file-manager/fm-list-view.c: (fm_list_view_create_list):
	fix list view bug that should have been in my last checkin
	Someone needs beat me over the head and fix my extensive
	cvs issues from the last few days!

2000-07-20  Ali Abdin <aliabdin@aucegypt.edu>

	* components/help/help-method.c:
	Revert an inadvertant checkin made by Gene.

2000-07-20  Ramiro Estrugo  <ramiro@eazel.com>

	* src/file-manager/Makefile.am:
	Make distcheck happy by putting all the headers in a
	noinst_HEADERS macro.
	
2000-07-20  Ramiro Estrugo  <ramiro@eazel.com>

	* cut-n-paste-code/freetype/Makefile.am:
	Add missing included .[ch] files to build to make distcheck happy.
	
2000-07-20  Ramiro Estrugo  <ramiro@eazel.com>

	* cut-n-paste-code/freetype/Makefile.am:
	Build this beast only as a static library and dont install any of
	its headers.
	
	* librsvg/Makefile.am:
	Link in the cut-and-pasted freetype lib statically into librsvg to
	avoid having its clients having a depenency on freetype.
	
Thu Jul 20 10:41:26 2000  Raph Levien  <raph@acm.org>

	* librsvg/rsvg-ft.c librsvg/rsvg-ft.h librsvg/art_render_mask.c
	librsvg/art_render_mask.h librsvg/rsvg.c: Initial checkin of
	freetype2 integration.

	* librsvg/art_render.c: Fixed bugs in compositing with alpha
	channel (alpha was being ignored in some cases).

	* librsvg/rsvg.c: Added expansion of entities, now handles
	many more files generated by Adobe Illustrator 9 SVG export.

	* librsvg/rsvg-path.c: Changed relative coordinate handling
	to generate correct results from SVG sample files provided
	by Adobe.

2000-07-19  Rebecca Schulman  <rebecka@eazel.com>

	* src/file-manager/fm-list-view-private.h:
	added forgotten file from last commit

2000-07-19  Rebecca Schulman  <rebecka@eazel.com>

        Created initial list view for search results, as a subclass (sort
	of) of fm-list-view

	* src/file-manager/fm-list-view.h:
	* src/file-manager/fm-list-view.c: (fm_list_view_initialize_class),
	(fm_list_view_initialize), (fm_list_view_list_is_instantiated),
	(fm_list_view_set_instantiated), (fm_list_view_create_list),
	(fm_list_view_setup_list), (add_to_list), (get_list),
	(fm_list_view_set_zoom_level), (fm_list_view_install_row_images),
	(update_icons):
	added new create_list signal to FM_LIST_VIEW, and instantiate the
	actual widget not in fm_list_view_initialize, but later, so that
	the search subclass can create its own separate clist widget

	* src/file-manager/fm-search-list-view.c:
	(fm_search_list_view_initialize_class),
	(fm_search_list_view_initialize), (fm_search_list_view_add_file),
	(add_to_list), (get_list), (fm_search_list_view_create_list),
	(compare_rows), (sort_criterion_from_column),
	(get_attribute_from_column), (fm_search_list_view_destroy):
	* src/file-manager/fm-search-list-view.h:
	adjusted list-view appearance for search results, by adding a directory
	column to show the actual path of files in a search result directory
	
	* src/nautilus-application.c: (manufactures), (create_object):
	* src/nautilus.oafinfo:
	register the search list view
	
	* src/file-manager/Makefile.am: added new fm-search-list-view.* files        

2000-07-19  Robey Pointer  <robey@eazel.com>

	* components/services/trilobite/libtrilobite/trilobite-core-utils.h:
	Add __GNUC__ alternate of trilobite_debug for non-gcc compilers.

2000-07-19  Darin Adler  <darin@eazel.com>

	* components/services/trilobite/libtrilobite/libtrilobite.h:
	* components/services/trilobite/libtrilobite/trilobite-root-client.c:
	Change include style from <libtrilobite/xxx.h> to "xxx.h" to fix
	the build.

	* libnautilus-extensions/nautilus-directory.c:
	(make_uri_canonical), (is_canonical_uri):
	Add two new elements to the canonical URI rules in here: put a
	"file:" in front of things that don't have a scheme, and
	lower-case the scheme.
	
	* libnautilus-extensions/nautilus-string.h:
	* libnautilus-extensions/nautilus-string.c:
	(nautilus_istr_has_prefix), (nautilus_istr_has_suffix):
	Add case-insensitive versions of these calls. These terse names
	are maybe a little lame; istr is not completely clear. (I guess I
	now wish the "nautilus_" namespace was "n_" instead, like those
	rad Evolution people and their bold "e_").

	* components/music/nautilus-music-view.c: (is_mp3_file),
	(nautilus_music_view_update_from_uri):
	* libnautilus-extensions/nautilus-file-utilities.c:
	(nautilus_format_uri_for_display),
	(nautilus_get_local_path_from_uri):
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_contains_text):
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_for_file), (make_thumbnail_path),
	(load_specific_image):
	* libnautilus-extensions/nautilus-theme.c:
	(nautilus_theme_make_selector):
	* src/file-manager/fm-icon-view.c: (play_file), (preview_sound),
	(icon_container_preview_callback):
	* src/file-manager/fm-properties-window.c:
	(get_property_names_from_uri):
	* src/nautilus-location-bar.c: (try_to_expand_path):
	* src/nautilus-property-browser.c: (ensure_uri_is_image),
	(make_properties_from_directory_path):
	* src/nautilus-sidebar.c: (map_local_data_file),
	(add_command_buttons):
	* libnautilus-extensions/nautilus-directory-background.c:
	(local_data_file_to_uri):
	Use case-insensitive string functions when dealing with MIME
	types, URI schemes, or file name extensions for file types that
	are also used on Windows where file names are not case sensitive.
	
	* libnautilus-extensions/nautilus-string.c:
	(nautilus_self_check_string):
	* libnautilus-extensions/nautilus-bookmark.c:
	(nautilus_bookmark_icon_is_different):
	* src/nautilus-bookmark-list.c:
	(nautilus_bookmark_list_delete_items_with_uri):
	* src/nautilus-window-manage-views.c:
	(nautilus_window_reset_title_internal), (handle_go_back),
	(handle_go_forward), (handle_go_elsewhere):
	* src/nautilus-window-menus.c:
	(nautilus_window_add_bookmark_for_current_location):
	Get rid of uses of nautilus_eat_strcmp since it's yucky.
	
	* libnautilus-extensions/nautilus-debug.c:
	(nautilus_str_equal_with_free):
	Make a debug-only thing kind of like nautilus_eat_strcmp that's
	good for asserts.
	
	* src/nautilus-sidebar.c: (add_command_buttons):
	Fixed a storage leak.

	* libnautilus-extensions/nautilus-link-set.c: (link_set_path_name):
	Added a FIXME.
	
	* components/services/install/command-line/.cvsignore:
	* cut-n-paste-code/freetype/.cvsignore:
	Ignore some generated files.
	
2000-07-19  Robey Pointer  <robey@eazel.com>

	* components/services/trilobite/libtrilobite/libtrilobite.h:
	* components/services/trilobite/libtrilobite/trilobite-core-utils.c:
	(trilobite_add_log), (trilobite_init):
	* components/services/trilobite/libtrilobite/trilobite-core-utils.h:
	* components/services/trilobite/libtrilobite/trilobite-root-client.c:
	(trilobite_root_client_unref), (trilobite_root_client_initialize):
	* components/services/trilobite/libtrilobite/trilobite-root-helper.c:
	(trilobite_root_helper_destroy),
	(trilobite_root_helper_initialize), (eazel_helper_start),
	(eazel_helper_password), (trilobite_root_helper_start),
	(trilobite_root_helper_run_program):
	* components/services/trilobite/sample/service/main.c: (main):
	Add "debug" option to trilobite_init().  If debug mode is on,
	the trilobite_debug() macro will be the debug equivalent of
	g_message().  Added debugging log messages to the root-helper
	stuff.

2000-07-19  Gene Z. Ragan  <gzr@eazel.com>

	* src/nautilus-window.c: (nautilus_window_initialize_class),
	(nautilus_window_constructed),
	(nautilus_window_get_base_page_index), (nautilus_window_show):
	Overode show function with nautilus_window_show.  We need
	to do this so we can first call the parents show and then 
	show/hide window widgets based on the users prefs.  We need
	to do this because GnomeDockItems do not get their parent
	assigned until show is called on them.
	
2000-07-19  Ali Abdin  <aliabdin@aucegypt.edu>

	* components/help/help-method.c:
	(help_uri_to_string):
	Cleaned it up to fit Eazel style guidelines. Changed the URI's so they
	pass the mime-type to pipe and are escaped. Fixes bug #698.

	I also removed a lot of #ifdef DEBUG_ALI cruft left lying around.

2000-07-18  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-file.c: (nautilus_file_dump):
	* libnautilus-extensions/nautilus-file.h:
	Added a debugging call.
	
2000-07-19  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/command-line/Makefile.am:
	* components/services/install/command-line/eazel-alt-install-corba.c:
	Added the uninstall stuff.
	
	(set_parameters_from_command_line), (eazel_preflight_check_signal),
	(eazel_install_progress_signal), (install_failed), (main):
	* components/services/install/command-line/eazel-package-query.c:
	(main):
	Small too to do cli package queries.

	* components/services/install/lib/eazel-install-corba-types.c:
	(categorydata_list_from_corba_categorystructlist):
	* components/services/install/lib/eazel-install-corba-types.h:
	Removed the packagedata to xml conversion to eazel-install-xml-package-list.c
	* components/services/install/lib/eazel-install-object.c:
	(xml_from_packagedata), (eazel_install_destroy),
	(eazel_install_initialize):
	Moved the packagedata corba_char* xml conv here.
	
	* components/services/install/lib/eazel-install-private.h:
	Added a GList*, which holds the current transaction.
	
	* components/services/install/lib/eazel-install-query.c:
	(eazel_install_simple_rpm_query), (eazel_install_simple_query):
	* components/services/install/lib/eazel-install-query.h:
	Implemented the simple query mechanisms. They are simple, since
	they're eg. of the format MATCHES "gmc", REQUIRES "glib" and such.
	
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_new_packages), (install_all_packages),
	(uninstall_all_packages), (uninstall_packages),
	(rpm_show_progress), (eazel_install_do_rpm_transaction_fill_hash),
	(eazel_install_do_rpm_transaction_get_total_size),
	(eazel_install_do_rpm_transaction_make_argument_list),
	(eazel_install_do_rpm_transaction_process_pipe),
	(do_rpm_transaction), (do_rpm_uninstall),
	(eazel_install_prepare_rpm_system), (eazel_install_add_to_rpm_set),
	(eazel_install_check_existing_packages),
	(eazel_install_fetch_rpm_dependencies),
	(eazel_uninstall_upward_traverse),
	(eazel_uninstall_downward_traverse), (eazel_uninstall_globber):
	A lot of the old progress code has been ripped out and replaced
	with the trilobite-root-helper code. Some refactoring was done
	(more needed) and most parts of 1586 is done.
	The uninstall stuff is also reimplemented (1700)
	
	* components/services/install/lib/eazel-install-types.c:
	(rpmname_from_packagedata), (packagedata_status_str_to_enum),
	(packagedata_modstatus_enum_to_str),
	(packagedata_modstatus_str_to_enum):
	* components/services/install/lib/eazel-install-types.h:
	Added fields to PackageData, so I can store transactions (eg. that
	installing package bla upgrades blech from x.y to v.w).
	
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(parse_package), (eazel_install_packagedata_to_xml),
	(eazel_install_packagelist_to_xml),
	(eazel_install_categorydata_to_xml):
	* components/services/install/lib/eazel-install-xml-package-list.h:
	Functions to convert packagedata lists to xml.
	
	* components/services/trilobite/libtrilobite/trilobite-service-passwo
	rdquery.c: (trilobite_passwordquery_get_password):
	Destroy the password query dialog.

2000-07-19  Raph Levien  <raph@acm.org>

	I have added tentative support for building rsvg with
	freetype2. At this point, only test-rsvg has the freetype
	dependency. Thus, if things break, it should be easy enough to
	work around. My current thinking is to add the dependency
	throughout by replacing existing top-builddir relative ldadd's of
	librsvg.la with a newly defined $(RSVG_LIBS) variable. This
	variable will be defined in configure.in to include both freetype
	and librsvg. Hopefully, I'll check that in tomorrow morning.

	* configure.in: added cut-n-paste-code/freetype/Makefile output.

	* cut-n-paste-code/Makefile.am (SUBDIRS): Added freetype subdir.

	* cut-n-paste-code/freetype/Makefile.am
	cut-n-paste-code/freetype/README
	cut-n-paste-code/freetype/autohint.h
	cut-n-paste-code/freetype/cff.c
	cut-n-paste-code/freetype/cidafm.c
	cut-n-paste-code/freetype/cidafm.h
	cut-n-paste-code/freetype/cidgload.c
	cut-n-paste-code/freetype/cidgload.h
	cut-n-paste-code/freetype/cidload.c
	cut-n-paste-code/freetype/cidload.h
	cut-n-paste-code/freetype/cidobjs.c
	cut-n-paste-code/freetype/cidobjs.h
	cut-n-paste-code/freetype/cidparse.c
	cut-n-paste-code/freetype/cidparse.h
	cut-n-paste-code/freetype/cidriver.c
	cut-n-paste-code/freetype/cidriver.h
	cut-n-paste-code/freetype/cidtokens.h
	cut-n-paste-code/freetype/freetype.h
	cut-n-paste-code/freetype/ftbase.c
	cut-n-paste-code/freetype/ftbbox.h
	cut-n-paste-code/freetype/ftcalc.c
	cut-n-paste-code/freetype/ftcalc.h
	cut-n-paste-code/freetype/ftconfig.h
	cut-n-paste-code/freetype/ftdebug.c
	cut-n-paste-code/freetype/ftdebug.h
	cut-n-paste-code/freetype/ftdriver.h
	cut-n-paste-code/freetype/fterrors.h
	cut-n-paste-code/freetype/ftextend.c
	cut-n-paste-code/freetype/ftextend.h
	cut-n-paste-code/freetype/ftglyph.c
	cut-n-paste-code/freetype/ftglyph.h
	cut-n-paste-code/freetype/ftgrays.c
	cut-n-paste-code/freetype/ftgrays.h
	cut-n-paste-code/freetype/ftimage.h
	cut-n-paste-code/freetype/ftinit.c
	cut-n-paste-code/freetype/ftlist.c
	cut-n-paste-code/freetype/ftlist.h
	cut-n-paste-code/freetype/ftmemory.h
	cut-n-paste-code/freetype/ftmm.c
	cut-n-paste-code/freetype/ftmm.h
	cut-n-paste-code/freetype/ftmodule.h
	cut-n-paste-code/freetype/ftobjs.c
	cut-n-paste-code/freetype/ftobjs.h
	cut-n-paste-code/freetype/ftoption.h
	cut-n-paste-code/freetype/ftoutln.c
	cut-n-paste-code/freetype/ftoutln.h
	cut-n-paste-code/freetype/ftraster.c
	cut-n-paste-code/freetype/ftraster.h
	cut-n-paste-code/freetype/ftrend1.c
	cut-n-paste-code/freetype/ftrend1.h
	cut-n-paste-code/freetype/ftrender.h
	cut-n-paste-code/freetype/ftsmooth.c
	cut-n-paste-code/freetype/ftsmooth.h
	cut-n-paste-code/freetype/ftstream.c
	cut-n-paste-code/freetype/ftstream.h
	cut-n-paste-code/freetype/ftsystem.c
	cut-n-paste-code/freetype/ftsystem.h
	cut-n-paste-code/freetype/fttypes.h
	cut-n-paste-code/freetype/license.txt
	cut-n-paste-code/freetype/psmodule.c
	cut-n-paste-code/freetype/psmodule.h
	cut-n-paste-code/freetype/psnames.h
	cut-n-paste-code/freetype/pstables.h
	cut-n-paste-code/freetype/raster1.c
	cut-n-paste-code/freetype/sfdriver.c
	cut-n-paste-code/freetype/sfdriver.h
	cut-n-paste-code/freetype/sfnt.c
	cut-n-paste-code/freetype/sfnt.h
	cut-n-paste-code/freetype/sfobjs.c
	cut-n-paste-code/freetype/sfobjs.h
	cut-n-paste-code/freetype/smooth.c
	cut-n-paste-code/freetype/t1afm.c
	cut-n-paste-code/freetype/t1afm.h
	cut-n-paste-code/freetype/t1driver.c
	cut-n-paste-code/freetype/t1driver.h
	cut-n-paste-code/freetype/t1errors.h
	cut-n-paste-code/freetype/t1gload.c
	cut-n-paste-code/freetype/t1gload.h
	cut-n-paste-code/freetype/t1hinter.c
	cut-n-paste-code/freetype/t1hinter.h
	cut-n-paste-code/freetype/t1load.c
	cut-n-paste-code/freetype/t1load.h
	cut-n-paste-code/freetype/t1objs.c
	cut-n-paste-code/freetype/t1objs.h
	cut-n-paste-code/freetype/t1parse.c
	cut-n-paste-code/freetype/t1parse.h
	cut-n-paste-code/freetype/t1tables.h
	cut-n-paste-code/freetype/t1tokens.c
	cut-n-paste-code/freetype/t1tokens.h
	cut-n-paste-code/freetype/t1types.h
	cut-n-paste-code/freetype/t2driver.c
	cut-n-paste-code/freetype/t2driver.h
	cut-n-paste-code/freetype/t2errors.h
	cut-n-paste-code/freetype/t2gload.c
	cut-n-paste-code/freetype/t2gload.h
	cut-n-paste-code/freetype/t2load.c
	cut-n-paste-code/freetype/t2load.h
	cut-n-paste-code/freetype/t2objs.c
	cut-n-paste-code/freetype/t2objs.h
	cut-n-paste-code/freetype/t2parse.c
	cut-n-paste-code/freetype/t2parse.h
	cut-n-paste-code/freetype/t2tokens.h
	cut-n-paste-code/freetype/t2types.h
	cut-n-paste-code/freetype/truetype.c
	cut-n-paste-code/freetype/ttcmap.c
	cut-n-paste-code/freetype/ttcmap.h
	cut-n-paste-code/freetype/ttdriver.c
	cut-n-paste-code/freetype/ttdriver.h
	cut-n-paste-code/freetype/tterrors.h
	cut-n-paste-code/freetype/ttgload.c
	cut-n-paste-code/freetype/ttgload.h
	cut-n-paste-code/freetype/ttinterp.c
	cut-n-paste-code/freetype/ttinterp.h
	cut-n-paste-code/freetype/ttload.c
	cut-n-paste-code/freetype/ttload.h
	cut-n-paste-code/freetype/ttnameid.h
	cut-n-paste-code/freetype/ttobjs.c
	cut-n-paste-code/freetype/ttobjs.h
	cut-n-paste-code/freetype/ttpload.c
	cut-n-paste-code/freetype/ttpload.h
	cut-n-paste-code/freetype/ttpost.c
	cut-n-paste-code/freetype/ttpost.h
	cut-n-paste-code/freetype/ttsbit.c
	cut-n-paste-code/freetype/ttsbit.h
	cut-n-paste-code/freetype/tttables.h
	cut-n-paste-code/freetype/tttags.h
	cut-n-paste-code/freetype/tttypes.h
	cut-n-paste-code/freetype/type1.c
	cut-n-paste-code/freetype/type1cid.c
	cut-n-paste-code/freetype/type1z.c
	cut-n-paste-code/freetype/winfnt.c
	cut-n-paste-code/freetype/winfnt.h
	cut-n-paste-code/freetype/z1afm.c
	cut-n-paste-code/freetype/z1afm.h
	cut-n-paste-code/freetype/z1driver.c
	cut-n-paste-code/freetype/z1driver.h
	cut-n-paste-code/freetype/z1gload.c
	cut-n-paste-code/freetype/z1gload.h
	cut-n-paste-code/freetype/z1load.c
	cut-n-paste-code/freetype/z1load.h
	cut-n-paste-code/freetype/z1objs.c
	cut-n-paste-code/freetype/z1objs.h
	cut-n-paste-code/freetype/z1parse.c
	cut-n-paste-code/freetype/z1parse.h
	cut-n-paste-code/freetype/z1tokens.h: Adapted a beta version of
	freetype2 so that it would build reasonably well within the
	(horribly broken) confines of autoconf and libtool.

	* librsvg/Makefile.am: Added cut-n-paste code to include paths,
	top-builddir relative path to libfreetype2.la to test-rsvg.

	* librsvg/test-rsvg.c: Added #include <freetype/freetype.h>.

2000-07-18  J Shane Culpepper  <pepper@eazel.com>

	*
	components/services/install/nautilus-view/nautilus-service-install-
	view.c: * components/services/login/nautilus-view/Makefile.am: *
	components/services/login/nautilus-view/nautilus-login-view.c:
	(generate_login_form), (login_button_cb), (maintenance_button_cb):
	*
	components/services/nautilus-dependant-shared/shared-service-utilit
	ies.c: (is_location): *
	components/services/nautilus-dependant-shared/shared-service-utilit
	ies.h: *
	components/services/nautilus-dependant-shared/shared-service-widget
	s.c: (create_services_header_widget),
	(set_widget_foreground_color), (show_feedback): *
	components/services/nautilus-dependant-shared/shared-service-widget
	s.h: *
	components/services/startup/nautilus-view/nautilus-service-startup-
	view.c: (generate_startup_form),
	(nautilus_service_startup_view_get_nautilus_view): *
	components/services/summary/nautilus-view/Makefile.am: *
	components/services/summary/nautilus-view/nautilus-summary-view.c:
	(generate_summary_form):

	Second half of fix for task # 1632. Most of the common functions that
	currently exist have been merged to a single location.

2000-07-18  Robey Pointer  <robey@eazel.com>

	* components/services/install/lib/Makefile.am:
	* components/services/install/lib/eazel-install-rpm-signature.c:
	(read_rpm_lead), (read_rpm_signature),
	(trilobite_check_rpm_signature):

	Fixed RPM signature code (previous code wouldn't work on some
	machines due to blatant library incompatibilities) to parse the
	RPM headers and find the signature by hand.

2000-07-18  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c: (relayout):
	Fixed bug where icons would not re-layout if the state got
	set as if we were in the middle of an icon stretch.

2000-07-18  Gene Z. Ragan  <gzr@eazel.com>

	Fixed bug 1702, Icon renaming doeas not respect user colors
	
	* libnautilus-extensions/nautilus-icon-text-item.c:
	(iti_paint_text), (iti_draw):
	Text color and highlight will use user defined colors.
	The background of the renaming rect is drawn using solid
	white instead of being transparent.

2000-07-18  Robey Pointer  <robey@eazel.com>

	* components/services/install/lib/Makefile.am:
	* components/services/install/lib/eazel-install-rpm-signature.c:
	(trilobite_make_temp_file), (trilobite_get_rpm_signature),
	(trilobite_check_rpm_signature):
	* components/services/install/lib/eazel-install-rpm-signature.h:

	Add eazel-install-rpm-signature.[ch] to verify RPM signatures.

2000-07-18  Robey Pointer  <robey@eazel.com>

	* components/services/trilobite/libtrilobite/trilobite-core-utils.c:
	(trilobite_pexec):
	* components/services/trilobite/sample/command-line/Makefile.am:
	* components/services/trilobite/sample/command-line/main.c: (main):

	Fix up the command-line sample service to use trilobite_init(),
	and make pexec a little more robust.
	
2000-07-18  J Shane Culpepper  <pepper@eazel.com>

	* components/services/nautilus-dependant-shared/Makefile.am:
	Forgot to include subdirs

2000-07-18  J Shane Culpepper  <pepper@eazel.com>

	* components/services/Makefile.am:
	* components/services/install/nautilus-view/Makefile.am:
	* components/services/install/nautilus-view/nautilus-service-install-view.c:
	(generate_install_form),
	(nautilus_service_install_view_update_from_uri):
	* components/services/nautilus-dependant-shared/.cvsignore:
	* components/services/nautilus-dependant-shared/Makefile.am:
	* components/services/nautilus-dependant-shared/icons/.cvsignore:
	* components/services/nautilus-dependant-shared/icons/Makefile.am:
	* components/services/nautilus-dependant-shared/shared-service-utilities.c:
	(go_to_uri):
	* components/services/nautilus-dependant-shared/shared-service-utilities.h:
	* components/services/nautilus-dependant-shared/shared-service-widgets.c:
	(create_image_widget), (create_services_title_widget),
	(create_services_header_widget):
	* components/services/nautilus-dependant-shared/shared-service-widgets.h:
	* components/services/startup/nautilus-view/Makefile.am:
	* components/services/startup/nautilus-view/icons/Makefile.am:
	* components/services/startup/nautilus-view/nautilus-service-startup-view.c:
	(generate_startup_form), (generate_form_logo),
	(nautilus_service_startup_view_initialize),
	(nautilus_service_startup_view_load_uri):
	* configure.in:

	First part of the fix for task #1632.  Creating a common repository
	for duplicated nautilus dependant code that is used in service views.

2000-07-18  Pavel Cisler <pavel@eazel.com>

	* libnautilus-extensions/nautilus-list.c: (nautilus_list_draw),
	(nautilus_list_expose):
	Update the colors before each draw to deal with background color
	changes. I had it listen to appearance_changed signals but this
	is way more robust.

2000-07-18  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-stock-dialogs.c:
	(nautilus_timed_wait_start): Another field needed to be
	initialized to 0, so I used g_new0.

	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_create_background_context_menu_items):
	Call nautilus_application_close_desktop directly instead of
	doing it through FMDirectoryView.

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_get_uri),
	(fm_directory_view_can_accept_item): g_return_val_if_fail
	is better than g_assert for parameter checking on public
	calls.
	(fm_directory_view_get_context_menu_index): Menu paths are
	hard-coded strings, so use strcmp, not g_strcasecmp.

	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-directory-view.c:
	Get rid of the FMDirectoryView cover for turning off
	Nautilus's desktop management. Callers can just use the
	NautilusApplication call directly.

2000-07-18  Maciej Stachowiak  <mjs@eazel.com>

	* components/tree/nautilus-tree-model.c,
	components/tree/nautilus-tree-model.h: files for tree view model.

2000-07-18  Maciej Stachowiak  <mjs@eazel.com>

	* libnautilus-extensions/nautilus-directory.c
	(nautilus_uri_is_search_uri): Always return false to try to
	disable special-casing the brute force way (so Nautilus can
	actually display search results).

2000-07-18  Pavel Cisler <pavel@eazel.com>

	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_initialize_class),
	(nautilus_gdk_set_shifted_foreground_gc_color),
	(nautilus_list_setup_style_colors), (selected_column_index):
	* libnautilus-extensions/nautilus-list.h:
	* src/file-manager/fm-list-view.c: (fm_list_get_drag_pixmap),
	(fm_list_get_sort_column_index), (create_list):
	Made it so that the actual sort column is properly higlighted
	rather than a hardcoded one. Added a signal that nautilus_list
	can use to ask which column is sorted.

	* libnautilus-extensions/nautilus-gdk-extensions.h:
	* libnautilus-extensions/nautilus-gdk-extensions.c:
	(nautilus_gdk_color_to_rgb), (nautilus_shift_color_component),
	(nautilus_rgb_shift_color):
	I added these couple checkins back, moved them to the right
	place.
	Tweaked nautilus_rgb_shift_color to not change the value of 
	the alpha component.

	* libnautilus-extensions/nautilus-gtk-extensions.c:
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	(nautilus_gtk_marshal_INT__NONE):
	More marshalling cruft.

2000-07-18  Ramiro Estrugo  <ramiro@eazel.com>

	* components/tree/main.c: (main):
	Dont initialize gnome twice to avoid assertion spewage.
	
2000-07-18  Ramiro Estrugo  <ramiro@eazel.com>

	* components/services/time/command-line/.cvsignore:
	* components/services/time/nautilus-view/.cvsignore:
	* components/services/trilobite/sample/command-line/.cvsignore:
	Ignore generated spewage.
	
2000-07-18  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-radio-button-group.c:
	(button_toggled), (nautilus_radio_button_group_insert),
	(nautilus_radio_button_group_get_active_index),
	(nautilus_radio_button_group_set_entry_pixbuf),
	(nautilus_radio_button_group_set_entry_description_text):
	* libnautilus-extensions/nautilus-radio-button-group.h:
	Add support for nicely aligned description labels.

	* src/nautilus-first-time-druid.c: (create_named_pixbuf),
	(set_up_user_level_page), (nautilus_first_time_druid_show):
	Add icons for each of the user levels.
	
	Use radio group description labels for the description blurb so
	that they align nicely.

	* test/test-nautilus-widgets.c: (test_radio_group):
	Update for description label support.
	
2000-07-18  Andy Hertzfeld <andy@eazel.com>

	* icons/eazel/i-directory.png
	* icons/eazel/i-directory-accept.png
	* icons/eazel/i-directory-12.png
	* icons/eazel/i-directory-accept-12.png
	* icons/eazel/i-directory-24.png
	* icons/eazel/i-directory-accept-24.png
	* icons/eazel/i-directory-36.png
	* icons/eazel/i-directory-accept-36.png
	* icons/eazel/i-directory-72.png
	* icons/eazel/i-directory-accept-72.png
	* icons/eazel/i-directory-96.png
	* icons/eazel/i-directory-accept-96.png
	updated all of the non-anti-aliased folder icons in the eazel theme
	with new ones from Susan that better match the anti-aliased ones.
	
2000-07-18  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-image.c:
	(nautilus_image_initialize_class), (nautilus_image_realize),
	(nautilus_image_unrealize), (ensure_buffer_size):
	* libnautilus-extensions/nautilus-image.h:
	Subclass from GtkMisc instead of GtkWidget.
	
2000-07-18  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-radio-button-group.c:
	(nautilus_radio_button_group_initialize_class),
	(nautilus_radio_button_group_initialize),
	(nautilus_radio_button_group_destroy),
	(radio_button_group_free_button_group),
	(nautilus_radio_button_group_insert),
	(nautilus_radio_button_group_get_active_index),
	(nautilus_radio_button_group_set_active_index),
	(nautilus_radio_button_group_set_pixbuf):
	* libnautilus-extensions/nautilus-radio-button-group.h:
	Add support for displaying an option icon with each radio button
	pixbuf.  Use NautilusImage for this.

	* test/test-nautilus-widgets.c: (create_pixbuf),
	(test_radio_group):
	Update test to include icon support.
	
2000-07-17  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_setup_style_colors), (nautilus_list_clear_from_row):
	Fix a number of problems in nautilus_list_clear_from_row.
	Tweak the divider line color a bit.

	* src/file-manager/fm-list-view.c:
	Fix some whitespace.
	
2000-07-17  Gene Z. Ragan  <gzr@eazel.com>

	* src/nautilus-desktop-window.c: (realize):
	Fixed bug 1254, Determine whether unfocussable desktop
	cause problems.

	This bug mainly had to do with renaming the icon.  I played with
	the feature to try and find any other problems.  None arose,
	but we should test this feature when we have QA.

	Thanks ramiro for the tip.

2000-07-17  Andy Hertzfeld  <andy@eazel.com>

	fixed bug 1506: we need a way to specify "none" for icon captions
	
	* src/file-manager/fm-icon-text-window.c:
	(attribute_names_string_is_good),
	(changed_attributes_option_menu_callback),
	(ensure_unique_attributes):
	added the "none" option and changed some tests to allow
	"none" to be selected for all 3 captions
	* src/file-manager/fm-icon-view.c: (get_icon_text_callback):
	handle the "none" attribute properly
	
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_name_for_regular_file):
	at Darin's suggestion, I made the code to force the generic
	document for text files only trigger for "text/plain"; I also
	commented it better.
	
2000-07-17  Gene Z. Ragan  <gzr@eazel.com>

	Fixed bug 1021, Should be able to hide toolbar, sidebar
	and locationbar.
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog),
	(global_preferences_register_for_ui):
	Added new items for showing/hiding window views.
	
	* src/nautilus-window-menus.c: (file_menu_new_window_callback):
	* src/nautilus-window.c: (nautilus_window_initialize),
	(nautilus_window_constructed), (nautilus_window_destroy),
	(sidebar_panels_changed_callback),
	(toolbar_visibility_changed_callback),
	(locationbar_visibility_changed_callback),
	(statusbar_visibility_changed_callback),
	(sidebar_visibility_changed_callback):
	New callbacks to dynamically respong to user prefs changes when
	showing/hiding window views.

	* libnautilus-extensions/nautilus-icon-container.c:
	(button_press_event):
	Added a simple double-click test to fix annoying double open bug
	when double clicking an icon in single click mode.
	
2000-07-17  Mathieu Lacage <mathieu@eazel.com>

	* configure.in: add a check for medusa. It is 
	not perfect, it still needs some work but it is better
	than nothing.
	* components/*/Makefile.am: add BONOBO_CFLAGS where necessary.
	* libnautilus-extensions/Makefile.am: add MEDUSA_CFLAGS and
	MEDUSA_LIBS.

2000-07-17  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_name_for_regular_file):
	added code to make sure that we use the generic document icon for
	text files so that the text-in-icons feature works, even if the
	more specific gnome ones are installed.
	
	* icons/eazel/i-regular.png:
	* icons/eazel/i-regular-12.png:
	* icons/eazel/i-regular-24.png:
	* icons/eazel/i-regular-36.png:
	* icons/eazel/i-regular-72.png:
	* icons/eazel/i-regular-96.png:
	new icons from Susan for the non-anti-aliased case that are
	consistent with the anti-aliased one.
		
2000-07-17  Pavel Cisler <pavel@eazel.com>

	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_initialize_class), (selected_column_index),
	(get_column_background), (get_cell_style),
	(nautilus_list_clear_from_row), (draw_rows), (nautilus_list_draw),
	(nautilus_list_expose):
	Rework more of NautilusList drawing.
	Added nautilus_list_draw and nautilus_list_expose.
	Cleaned up draw_rows and made it so that only the NautilusList
	version gets called.
	Improved drawing performance of long lists.
	Added code to draw the list area unpopulated with rows properly
	(still needs some work).

2000-07-15  Ali Abdin  <aliabdin@aucegypt.edu>

	* components/help/help-contents.oafinfo:
	* components/help/help-methods.conf:
	* components/help/help-search.oafinfo:
	Add 'ghelp' as a URI for backwards-compatibility (many doc files
	and applications currently use 'ghelp:' prefix to bring up help
	files we should handle it just like 'help:').

	We might want to emit a 'warning' message saying it's deprecated.

2000-07-14  Gene Z. Ragan  <gzr@eazel.com>

	* components/help/help-method.c: (transform_absolute_file):
	* libnautilus-extensions/nautilus-stock-dialogs.c:
	(nautilus_timed_wait_start):
	Initialize dialog variable in TimeWait structure to NULL.  
	Other code checks to see if it is NULL before performing
	operations on the dialog.  Carbamide exposed this bug when
	trying to rename an icon item in place.
	
	* src/nautilus-window-manage-views.c: (open_location):
	Added a check for a NULL location string.
	
2000-07-14  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-list.c: (nautilus_list_destroy),
	(nautilus_list_setup_style_colors), (nautilus_list_realize),
	(get_cell_style), (nautilus_list_drag_data_received):
	More work on list view look.
	Make the colors be derived from the current background color.
	Make color drops work.
	Draw the selection better.

2000-07-14  Robey Pointer  <robey@eazel.com>

	* components/services/trilobite/libtrilobite/trilobite-root-client-public.h:
	* components/services/trilobite/libtrilobite/trilobite-root-client.c:
	(trilobite_root_client_unref), (trilobite_root_client_finalize),
	(trilobite_root_client_class_initialize),
	(trilobite_root_client_initialize):
	* components/services/trilobite/libtrilobite/trilobite-service-passwordquery.c:
	(trilobite_passwordquery_get_password):
	* components/services/trilobite/sample/command-line/main.c: (main):
	* components/services/trilobite/sample/service/sample-service-impl.c:
	(impl_Trilobite_Eazel_Sample_list_it):

	Fix up TrilobiteRootClient implementation (destroy -> unref) to
	behave according to standards, and to more closely match gob
	output.  Fix a few small bugs.
	
2000-07-14  Ramiro Estrugo  <ramiro@eazel.com>

	* Makefile.am:
	* tools/.cvsignore:
	* tools/Makefile.am:
	* tools/leak-checker/.cvsignore:
	* tools/leak-checker/Makefile.am:
	* tools/leak-checker/nautilus-leak-checker-stubs.h:
	* tools/leak-checker/nautilus-leak-checker.c:
	(nautilus_leak_allocation_record_init),
	(nautilus_leak_allocation_record_copy),
	(nautilus_leak_allocation_record_finalize),
	(nautilus_leak_allocation_record_free),
	(nautilus_leak_stack_crawl_compare), (nautilus_leak_initialize),
	(get_stack_trace), (detect_reentry), (nautilus_leak_record_malloc),
	(nautilus_leak_record_realloc), (nautilus_leak_record_free),
	(nautilus_leak_initialize_if_needed),
	(allocate_temporary_fallback_memory), (__libc_malloc),
	(__libc_memalign), (__libc_calloc), (__libc_realloc),
	(__libc_free), (print_leaks_at_exit), (__libc_start_main),
	(print_one_leak), (nautilus_leak_print_leaks),
	(nautilus_leak_checker_init), (malloc), (realloc), (memalign),
	(calloc), (free), (allocate_lots), (leak_mem2), (leak_mem), (main):
	* tools/leak-checker/nautilus-leak-checker.h:
	* tools/leak-checker/nautilus-leak-hash-table.c:
	(nautilus_leak_hash_element_finalize),
	(nautilus_leak_hash_element_hash),
	(nautilus_leak_hash_element_match),
	(nautilus_leak_hash_element_vector_inititalize),
	(nautilus_leak_hash_element_vector_finalize),
	(nautilus_leak_hash_element_vector_at),
	(nautilus_leak_hash_element_vector_add),
	(nautilus_leak_hash_element_vector_remove),
	(nautilus_leak_hash_table_optimal_size),
	(nautilus_leak_hash_table_initialize),
	(nautilus_leak_hash_table_finalize),
	(nautilus_leak_hash_table_new), (nautilus_leak_hash_table_free),
	(nautilus_leak_hash_table_hash), (nautilus_leak_hash_table_find),
	(nautilus_leak_hash_table_add),
	(nautilus_leak_hash_table_remove_element),
	(nautilus_leak_hash_table_remove),
	(nautilus_leak_table_new_entry_at),
	(nautilus_leak_table_add_entry), (nautilus_leak_table_new),
	(nautilus_leak_table_free), (sort_by_count),
	(nautilus_leak_table_sort_by_count), (sort_by_size),
	(nautilus_leak_table_sort_by_size),
	(nautilus_leak_table_each_item):
	* tools/leak-checker/nautilus-leak-hash-table.h:
	* tools/leak-checker/nautilus-leak-symbol-lookup.c:
	(nautilus_leak_find_symbol_in_map),
	(nautilus_leak_symbol_map_get_offsets),
	(nautilus_leak_symbol_map_load),
	(nautilus_leak_symbol_map_load_if_needed),
	(nautilus_leak_print_symbol_cleanup),
	(nautilus_leak_find_symbol_address),
	(nautilus_leak_print_symbol_address):
	* tools/leak-checker/nautilus-leak-symbol-lookup.h:

	Turn my dumbass brain on this time before committing.  
	Add the moved leak checker code for real.
	
2000-07-14  Darin Adler  <darin@eazel.com>

	* .cvsignore:
	* components/services/time/command-line/.cvsignore:
	* components/services/time/nautilus-view/.cvsignore:
	* components/services/trilobite/libtrilobite/.cvsignore:
	* components/services/trilobite/sample/lib/.cvsignore:
	Some generated file names changed. So these have to change to.

2000-07-14  Michael Engber  <engber@eazel.com>

	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize_class),
	(fm_desktop_icon_view_create_background_context_menu_items),
	(fm_desktop_icon_view_get_directory_sort_by),
	(fm_desktop_icon_view_set_directory_sort_by),
	(fm_desktop_icon_view_get_directory_sort_reversed),
	(fm_desktop_icon_view_set_directory_sort_reversed),
	(fm_desktop_icon_view_get_directory_auto_layout),
	(fm_desktop_icon_view_set_directory_auto_layout):
	* src/file-manager/fm-desktop-icon-view.h:
	* src/file-manager/fm-icon-view.c:
	(fm_icon_view_get_directory_sort_by),
	(fm_icon_view_real_get_directory_sort_by),
	(fm_icon_view_set_directory_sort_by),
	(fm_icon_view_real_set_directory_sort_by),
	(fm_icon_view_get_directory_sort_reversed),
	(fm_icon_view_real_get_directory_sort_reversed),
	(fm_icon_view_set_directory_sort_reversed),
	(fm_icon_view_real_set_directory_sort_reversed),
	(fm_icon_view_get_directory_auto_layout),
	(fm_icon_view_real_get_directory_auto_layout),
	(fm_icon_view_set_directory_auto_layout),
	(fm_icon_view_real_set_directory_auto_layout),
	(set_sort_criterion), (set_sort_reversed),
	(fm_icon_view_begin_loading), (layout_changed_callback),
	(fm_icon_view_initialize_class):
	* src/file-manager/fm-icon-view.h:
	Desktop no longer uses auto layout (bug 1059). Accomplished
	by adding get/set methods to fm_icon_view which
	fm_desktop_icon_view overrides.

2000-07-14  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in:
	* test/Makefile.am:
	* test/nautilus-leak-checker-stubs.h:
	* test/nautilus-leak-checker.c:
	* test/nautilus-leak-checker.h:
	* test/nautilus-leak-hash-table.c:
	* test/nautilus-leak-hash-table.h:
	* test/nautilus-leak-symbol-lookup.c:
	* test/nautilus-leak-symbol-lookup.h:
	* tools/leak-checker:

	Move the leakchecker library to its own place.
	
2000-07-14  Ramiro Estrugo  <ramiro@eazel.com>

	* components/services/install/nautilus-view/nautilus-service-install-view.c:
	(generate_install_form), (create_image_widget),
	(create_title_widget), (create_middle_title_widget):
	* components/services/login/nautilus-view/nautilus-login-view.c:
	(generate_login_form), (create_image_widget),
	(create_title_widget):
	* components/services/startup/nautilus-view/nautilus-service-startup-view.c:
	(generate_startup_form), (create_image_widget),
	(generate_form_logo):
	* libnautilus-extensions/Makefile.am:
	* libnautilus-extensions/nautilus-graphic.c:
	* libnautilus-extensions/nautilus-graphic.h:
	* libnautilus-extensions/nautilus-image.c:
	(nautilus_image_initialize_class), (nautilus_image_initialize),
	(nautilus_image_destroy), (nautilus_image_set_arg),
	(nautilus_image_get_arg), (nautilus_image_realize),
	(nautilus_image_unrealize), (nautilus_image_draw),
	(nautilus_image_size_allocate), (nautilus_image_size_request),
	(nautilus_image_map), (nautilus_image_unmap),
	(nautilus_image_expose), (ensure_buffer_size),
	(create_child_window), (nautilus_gdk_create_copy_area_gc),
	(nautilus_gdk_pixbuf_render_to_drawable),
	(nautilus_gdk_pixbuf_render_to_pixbuf),
	(nautilus_gdk_pixbuf_render_to_pixbuf_alpha),
	(gdk_string_dimensions), (nautilus_gdk_pixbuf_set_to_color),
	(nautilus_gdk_pixbuf_tile), (nautilus_gdk_pixbuf_tile_alpha),
	(nautilus_image_new), (nautilus_image_set_background_pixbuf),
	(nautilus_image_get_background_pixbuf),
	(nautilus_image_set_background_type),
	(nautilus_image_get_background_type),
	(nautilus_image_set_background_color),
	(nautilus_image_get_background_color),
	(nautilus_image_set_placement_type),
	(nautilus_image_get_placement_type), (nautilus_image_set_pixbuf),
	(nautilus_image_get_pixbuf), (nautilus_image_set_overall_alpha),
	(nautilus_image_set_label_text), (nautilus_image_get_label_text),
	(nautilus_image_set_label_font), (nautilus_image_get_label_font),
	(nautilus_image_set_left_offset),
	(nautilus_image_set_right_offset), (nautilus_image_set_top_offset),
	(nautilus_image_set_bottom_offset),
	(nautilus_image_set_extra_width),
	(nautilus_image_set_extra_height):
	* libnautilus-extensions/nautilus-image.h:
	* test/.cvsignore:
	* test/Makefile.am:
	* test/test-nautilus-graphic.c:
	* test/test-nautilus-image.c: (create_background), (create_pixbuf),
	(create_image), (alpha_scale_value_changed),
	(red_color_value_changed), (green_color_value_changed),
	(blue_color_value_changed), (toggle_background_type_callback),
	(create_color_scale), (main):

	Rename NautilusGraphic to NautilusImage everywhere.
	
2000-07-14  Ramiro Estrugo  <ramiro@eazel.com>

	* src/nautilus-main.c: (main):
	Commit the damn file for real this time.

2000-07-14  Ramiro Estrugo  <ramiro@eazel.com>

	* src/nautilus-main.c: (main):
	Yank the leak checker intitialization code.  Its not needed no
	more cause the leak checker automatically does it when its
	pre loaded.
	
	* test/nautilus-leak-checker.c: (print_leaks_at_exit),
	(__libc_start_main), (nautilus_leak_print_leaks):
	Call atexit() with the leak dumping function.
	
2000-07-14  Pavel Cisler <pavel@eazel.com>

	* libnautilus-extensions/nautilus-list.c: 
	(nautilus_list_destroy), (nautilus_list_button_release), 
	(nautilus_list_realize), (get_cell_style),
	(draw_cell), (draw_row):
	Work in progress on new list view look. Allocate GdkGCs needed to
	draw the individual cells in different colors. Rework get_cell_style
	to alternate gcs for different rows/columns properly.
	Few things are still hardcoded and will get fixed soon.

	* libnautilus-extensions/nautilus-list.c: 
	(nautilus_gdk_gc_copy)
	Cover call for creating a new gc and copying state from an existing one.

	* libnautilus-extensions/nautilus-list.c: 
	(nautilus_gdk_color_to_gdk_rgb),
	(nautilus_shift_color_component), (nautilus_gdk_rgb_shift_color),
	(nautilus_gdk_set_shifted_foreground_gc_color),
	Convenience calls for lightening/darkening a color. Flavor that
	sets a lightened/darkened color as a foreground color for a GC.
	I'll move most of these to nautilus-gdk-extensions.c soon.
	
	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.c:
	(nautilus_gdk_pixbuf_average_value):
	Fix white space.

2000-07-13  Robey Pointer  <robey@eazel.com>

	* components/services/trilobite/libtrilobite/Makefile.am:
	*
	components/services/trilobite/libtrilobite/trilobite-core-utils.c:
	(trilobite_pexec), (trilobite_add_log), (trilobite_close_log),
	(trilobite_init):
	*
	components/services/trilobite/libtrilobite/trilobite-core-utils.h:
	* components/services/trilobite/sample/command-line/Makefile.am:
	* components/services/trilobite/sample/lib/Makefile.am:
	* components/services/trilobite/sample/nautilus-view/Makefile.am:
	* components/services/trilobite/sample/service/Makefile.am:
	* components/services/trilobite/sample/service/main.c: (main):

	Add trilobite_init() to cover up initialization madness.  Clean up
	the G_LOG_DOMAINS and make them roughly uniform.  Use a
	service-specified logfile for g_{message|warning|error} dumps.

2000-07-13  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/rpmview/Makefile.am:
	* components/rpmview/nautilus-rpm-view.c:
	(nautilus_rpm_view_initialize),
	(nautilus_rpm_view_update_from_uri):
	Fixed so it should compile without enable-eazel-services (close
	bug 1654)
	
	*
	components/services/install/command-line/eazel-alt-install-corba.c:
	(eazel_preflight_check_signal), (eazel_install_progress_signal),
	(done), (main):
	Uses the new preflight signal.
	
	* components/services/install/idl/trilobite-eazel-install.idl:
	* components/services/install/lib/eazel-install-corba-callback.c:
	(impl_preflight_check), (eazel_install_callback_get_epv),
	(eazel_install_callback_create_corba_object),
	(eazel_install_callback_destroy),
	(eazel_install_callback_class_initialize):
	* components/services/install/lib/eazel-install-corba-callback.h:
	* components/services/install/lib/eazel-install-corba.c:
	(impl_Eazel_Install_install), (impl_Eazel_Install_uninstall),
	(impl_Eazel_Install_install_packages),
	(impl_Eazel_Install_uninstall_packages),
	(eazel_install_create_corba_object):
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_destroy), (eazel_install_class_initialize),
	(eazel_install_emit_download_progress_default),
	(eazel_install_emit_preflight_check),
	(eazel_install_emit_preflight_check_default):
	* components/services/install/lib/eazel-install-public.h:
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(do_rpm_install), (eazel_install_fetch_rpm_dependencies):
	* components/services/install/lib/eazel-install-types.h:
	Fixed bug 1615, now emits the preflight_check signal, before
	running rpm and after completing downloads.
	Also corrected some bad stuff in the corba usage reg. duplicating
	the callback objects and releasing them.
	The RPM output parsing now seems to work fine, and signals are
	again emitted as expected.
	Added FIXME:s for bug 1586, so I can split it up.
	
	* components/services/install/lib/eazel-install-corba-types.c:
	(corba_packagedatastruct_from_packagedata):
	Fixed dumb bug reg. converting PackageData to corba.
		
	* components/services/install/lib/eazel-install-types.c:
	(packagedata_fill_from_rpm_header):
	Correct read of the bytesize.

	* components/services/time/command-line/main.c: (main):
	Fixed dumb bug that prevented a maxdiff=0.
	* components/services/time/service/main.c:
	(trilobite_service_factory_destroy):
	* components/services/time/service/trilobite-eazel-time-service.c:
	(impl_Trilobite_Eazel_Time_Service_check_time),
	(impl_Trilobite_Eazel_Time_Service_update_time):
	Uses the TrilobiteRootHelper object now.
	*
	components/services/trilobite/libtrilobite/trilobite-service-passwo
	rdquery.c: (trilobite_passwordquery_get_password):
	Added a debug output, will remove.

	* components/services/time/command-line/Makefile.am:
	* components/services/time/nautilus-view/Makefile.am:
	* components/services/trilobite/libtrilobite/Makefile.am:
	* components/services/trilobite/sample/lib/Makefile.am:
	Added the idl_stamp to CLEAN_FILES.
	
2000-07-13  Andy Hertzfeld  <andy@eazel.com>

	* icons/eazel/eazel.xml:
	changed the background in the eazel theme per Susan's request
	* data/backgrounds/Makefile.am:
	* data/backgrounds/blue_gray_rough.png:
	* data/backgrounds/camouflage.png:
	* data/backgrounds/fleur_de_lis.png:
	* data/backgrounds/pale_blue_string.png:
	* data/backgrounds/pale_blue_wavy.png:
	* data/backgrounds/satin.png:
	* data/backgrounds/wavy_white.png:
	added new backgrounds from Susan
	
2000-07-13  Darin Adler  <darin@eazel.com>

	* HACKING: Updated gnome-libs branch.
	* libnautilus-extensions/nautilus-stock-dialogs.c:
	(timed_wait_hash), (timed_wait_hash_equal), (add_label_to_dialog),
	(timed_wait_free), (timed_wait_cancel_callback),
	(timed_wait_callback), (nautilus_timed_wait_start),
	(nautilus_timed_wait_stop), (nautilus_simple_dialog):
	A cut at a real timed wait implementation; not tested yet beyond
	making sure it builds and doesn't die in any obvious way.

2000-07-13  Andy Hertzfeld  <andy@eazel.com>

	At Darin's not-so-gentle urging, I removed all knowledge of the
	anti-aliased preference from the icon factory, and passed it in
	via parameters instead.
	
	* libnautilus-extensions/nautilus-bookmark.c:
	(nautilus_bookmark_update_icon),
	(nautilus_bookmark_set_icon_to_default):
	changed icon factory calls to pass in anti-aliased preference
	* libnautilus-extensions/nautilus-icon-container.c,h:
	(nautilus_icon_container_get_anti_aliased_mode):
	added a get_anti_aliased_mode accessor
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(nautilus_icon_dnd_begin_drag):
	changed icon factory calls to pass in anti-aliased preference	
	* libnautilus-extensions/nautilus-icon-factory.c,h:
	(nautilus_icon_factory_initialize),
	(nautilus_icon_factory_destroy), (get_themed_icon_file_path),
	(get_icon_file_path),
	(nautilus_scalable_icon_new_from_text_pieces),
	(nautilus_icon_factory_get_icon_for_file),
	(nautilus_icon_factory_get_emblem_icon_by_name),
	(nautilus_icon_factory_get_emblem_icons_for_file),
	(nautilus_icon_factory_get_thumbnail_uri), (load_specific_image),
	(nautilus_icon_factory_get_pixbuf_for_file),
	(nautilus_icon_factory_get_pixmap_and_mask_for_file),
	(load_image_with_embedded_text):
	added the anti-aliased parameter to the appropriate calls, and
	revamped internal calls to pass it around as necessary
	* src/file-manager/fm-icon-view.c: (get_icon_images_callback):
	changed icon factory calls to pass in anti-aliased preference
	* src/file-manager/fm-list-view.c:
	(fm_list_view_get_emblem_pixbufs_for_file):
	changed icon factory calls to pass in anti-aliased preference
	* src/file-manager/fm-properties-window.c:
	(get_pixmap_and_mask_for_properties_window),
	(create_image_widget_for_emblem):
	changed icon factory calls to pass in anti-aliased preference
	* src/nautilus-bookmark-list.c: (make_bookmark_from_node):
	changed icon factory calls to pass in anti-aliased preference
	* src/nautilus-sidebar-title.c: (update_emblems):
	changed icon factory calls to pass in anti-aliased preference

2000-07-13  Darin Adler  <darin@eazel.com>

	* components/services/startup/lib/dummy.c: Added an empty file to
	fix the build (required since Elliot added it to the Makefile).

	* HACKING: Some tweaks.
	* TODO: Removed some done items.
	
	* src/Makefile.am:
	* src/file-manager/Makefile.am:
	Changed libntl-file-manager.la to libnautilus-file-manager.la.

2000-07-13 Elliot Lee <sopwith@redhat.com>
	
	* TODO: Fix typo
	* components/rpmview/Makefile.am,
	components/services/install/command-line/Makefile.am,
	components/services/install/lib/Makefile.am,
	components/services/install/nautilus-view/Makefile.am,
	components/services/install/server/Makefile.am,
	components/services/startup/lib/Makefile.am,
	components/services/time/command-line/Makefile.am,
	components/services/time/service/Makefile.am,
	components/services/trilobite/helper/Makefile.am,
	components/services/trilobite/sample/command-line/Makefile.am,
	components/services/trilobite/sample/service/Makefile.am,
	components/services/vault/command-line/Makefile.am,
	cut-n-paste-code/widgets/e-paned/Makefile.am,
	cut-n-paste-code/widgets/nautilus-druid/Makefile.am,
	libnautilus-extensions/Makefile.am,
	src/Makefile.am,
	test/Makefile.am: Fix srcdir != builddir:

	* components/services/trilobite/helper/eazel-helper.c,
	components/services/vault/command-line/vault-operations.c,
	libnautilus-extensions/nautilus-graphic.c,
	libnautilus-extensions/nautilus-icon-container.c,
	libnautilus-extensions/nautilus-list.c: Include string.h
	for strlen prototype.

2000-07-13  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_initialize),
	(nautilus_icon_factory_destroy),
	(anti_aliased_mode_changed_callback), (get_themed_icon_file_path),
	(nautilus_scalable_icon_new_from_text_pieces),
	(nautilus_scalable_icon_hash), (nautilus_scalable_icon_equal):
	made the icon factory support optimized icons for anti-aliased mode.
	Added a field to nautilus_scalable_icon and included it in the
	cache key calculation; arranged for notification when aa-mode
	changes so we can emit the "icons_changed" signal.
	
	* icons/eazel/Makefile.am:
	* icons/eazel/i-regular-12-aa.png:
	* icons/eazel/i-regular-24-aa.png:
	* icons/eazel/i-regular-36-aa.png:
	* icons/eazel/i-regular-72-aa.png:
	* icons/eazel/i-regular-96-aa.png:
	* icons/eazel/i-regular-aa.png:
	* icons/eazel/i-directory-12-aa.png:
	* icons/eazel/i-directory-24-aa.png:
	* icons/eazel/i-directory-36-aa.png:
	* icons/eazel/i-directory-72-aa.png:
	* icons/eazel/i-directory-96-aa.png:
	* icons/eazel/i-directory-aa.png:
	* icons/eazel/i-directory-accept-12-aa.png:
	* icons/eazel/i-directory-accept-24-aa.png:
	* icons/eazel/i-directory-accept-36-aa.png:
	* icons/eazel/i-directory-accept-72-aa.png:
	* icons/eazel/i-directory-accept-96-aa.png:
	* icons/eazel/i-directory-accept-aa.png:
	added a bunch of new anti-aliased icons from Susan to the eazel theme
	 
2000-07-13  Robey Pointer  <robey@eazel.com>

	* components/services/trilobite/libtrilobite/trilobite-root-client.c:
	(trilobite_root_client_destroy):
	* components/services/trilobite/sample/command-line/main.c: (main):
	* components/services/trilobite/sample/service/sample-service-impl.c:
	(impl_Trilobite_Eazel_Sample_list_it):

	Fix a few places where corba objects weren't released, so that the
	sample service test demonstrates freeing the root client *and* the
	root helper.
	
2000-07-13  Robin * Slomkowski  <rslomkow@eazel.com>

	* nautilus.spec.in: added arlo theme

2000-07-13  Darin Adler  <darin@eazel.com>

	* components/sample/main.c: (main): There was a second call
	to bonobo_shutdown which I forgot to remove.

2000-07-13  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-file.h: Fix a FIXME.
	* libnautilus-extensions/nautilus-file.c: Add a FIXME.
	
	* src/file-manager/fm-error-reporting.c: (fm_rename_file):
	Start the timed wait first in case the call succeeds or fails
	immediately.
	
	* src/file-manager/fm-properties-window.c:
	(group_change_callback), (cancel_group_change_callback),
	(activate_group_callback), (owner_change_callback),
	(cancel_owner_change_callback), (activate_owner_callback):
	Added a timed wait for each of these operations.

2000-07-13  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-file.c:
	(set_permissions_callback), (nautilus_file_set_permissions),
	(set_owner_and_group_callback), (set_owner_and_group),
	(nautilus_file_set_owner), (nautilus_file_set_group):
	Made set_permissions, set_owner, and set_group all be async.

2000-07-13  Michael Engber  <engber@eazel.com>

	* libnautilus/nautilus-view-component.idl:
	* libnautilus/nautilus-view.c:
	* libnautilus/nautilus-view.h:
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_close_desktop_menu_item_callback),
	(fm_desktop_icon_view_create_background_context_menu_items):
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_close_desktop):
	* src/file-manager/fm-directory-view.h:
	* src/nautilus-application.c: (nautilus_application_windows),
	(nautilus_application_startup),
	(nautilus_application_destroy_desktop_window),
	(nautilus_application_create_desktop_window),
	(nautilus_application_open_desktop),
	(nautilus_application_close_desktop),
	(nautilus_application_destroy_window),
	(nautilus_application_create_window):
	* src/nautilus-application.h:
	* src/nautilus-desktop-window.c: (nautilus_desktop_window_new):
	* src/nautilus-shell.c: (corba_manage_desktop):
	* src/nautilus-view-frame-corba.c:
	(impl_Nautilus_ViewFrame_set_title):
	* src/nautilus-view-frame-private.h:
	* src/nautilus-view-frame.c:
	(nautilus_view_frame_initialize_class),
	(nautilus_view_frame_set_title):
	* src/nautilus-view-frame.h:
	* src/nautilus-window-manage-views.c: (open_location):
	* src/nautilus-window.c: (nautilus_window_connect_view):
	Changed desktop menu to offer close desktop instead of
	quit nautilus. Also, changed the menu item's action to
	use a direct fn call instead of CORBA.

2000-07-13  Gene Z. Ragan  <gzr@eazel.com>

	* components/history/nautilus-history-view.c: (install_icon),
	(history_view_update_icons), (history_load_location), (make_obj):
	Added code to check for position of current page in list.
	
	* src/nautilus-window.c:
	* src/nautilus-window.h:
	(nautilus_window_get_base_page_index):
	New function to return the index of the base page in the
	history list.
	
	(nautilus_window_get_history_list_callback),
	Set position field of returned list info using new function above.
	
2000-07-13  Darin Adler  <darin@eazel.com>

	My apologies to all who read the cvs commits list that have
	suffered from my "spam" in the past (due to my use of emacs cvs
	mode to commit).  I will never use emacs cvs mode again so you
	will see each of my commits only once!

	* src/file-manager/fm-error-reporting.c:
	(rename_callback_data_free), (rename_callback),
	(cancel_rename_callback), (fm_rename_file):
	Finished the 1/2 done code for renaming.

	* src/nautilus-main.c: (main): Removed the call to bonobo_shutdown
	since Michael decided he won't do it this way any more.
	
	* src/nautilus-window.c: (nautilus_window_destroy): Added code
	to unref the UI handler to fix a leak.

	* components/hardware/nautilus-hardware-view.h:
	* components/loser/content/nautilus-content-loser.h:
	* components/loser/sidebar/nautilus-sidebar-loser.h:
	* components/mozilla/nautilus-mozilla-content-view.h:
	* components/music/nautilus-music-view.h:
	* components/rpmview/nautilus-rpm-view.h:
	* components/services/install/lib/eazel-install-corba-callback.h:
	* components/services/install/lib/eazel-install-public.h:
	* components/services/install/nautilus-view/nautilus-service-install-view.h:
	* components/services/inventory/nautilus-view/nautilus-inventory-view.h:
	* components/services/login/nautilus-view/nautilus-login-view.h:
	* components/services/startup/nautilus-view/nautilus-service-startup-view.h:
	* components/services/summary/nautilus-view/nautilus-summary-view.h:
	* components/services/time/nautilus-view/trilobite-eazel-time-view.h:
	* components/services/time/service/trilobite-eazel-time-service-public.h:
	* components/services/trilobite/libtrilobite/trilobite-root-helper.h:
	* components/services/trilobite/libtrilobite/trilobite-service-passwordquery-public.h:
	* components/services/trilobite/libtrilobite/trilobite-service-public.h:
	* components/services/trilobite/sample/lib/sample-service-public.h:
	* components/tree/nautilus-tree-view.h:
	* libnautilus/nautilus-view.h:
	* libnautilus/nautilus-zoomable.h:
	* src/file-manager/fm-desktop-icon-view.h:
	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-icon-view.h:
	* src/file-manager/fm-list-view.h:
	* src/nautilus-application.h:
	* src/nautilus-shell.h:
	* src/nautilus-view-frame.h:
	Fixed a copied and pasted typo.
	
2000-07-13  Pavel Cisler <pavel@eazel.com>

	* src/file-manager/dfos-xfer.c: (handle_xfer_ok):
	Part 2 of fix for 1549 - Empty trash doesn't update progress 
	properly.

2000-07-13  J Shane Culpepper  <pepper@eazel.com>

	* components/services/install/nautilus-view/nautilus-service-install-view.c:
	(generate_install_form):
	Adding layout fixes to the install widget to match changes in the
	baranch.

2000-07-12  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-property-browser.c: (make_drag_image),
	(make_background_chit), (make_properties_from_directory_path):
	removed the white halo around the background chit for dragging
	
	* src/nautilus-first-time-druid.c: (set_up_service_signup_page),
	(nautilus_first_time_druid_show):
	tweaked the text a bit

2000-07-12  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-icon-dnd.c:
	(auto_scroll_timeout_callback):
	Fix a problem where parts of the exposed area weren't being
	updated correctly during a fast auto-scroll.
	
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(nautilus_icon_container_get_drop_action):
	Fix a crash when nautilus_icon_container_get_drop_action
	got called too early on during a drag, before 
	drag_data_received_callback got a chance to set state up.

2000-07-12  Robey Pointer  <robey@eazel.com>

	* components/services/trilobite/libtrilobite/Makefile.am:
	* components/services/trilobite/libtrilobite/trilobite-root-client-private.h:
	* components/services/trilobite/libtrilobite/trilobite-root-client-public.h:
	* components/services/trilobite/libtrilobite/trilobite-root-client.c:
	* components/services/trilobite/libtrilobite/trilobite-root-helper.c:
	* components/services/trilobite/libtrilobite/trilobite-service-passwordquery.c:
	(impl_Trilobite_PasswordQuery_set_query_client),
	(trilobite_passwordquery_destroy),
	(trilobite_passwordquery_get_password):
	* components/services/trilobite/sample/command-line/main.c:
	(get_password_dude), (main):
	* components/services/trilobite/sample/service/main.c:
	(trilobite_service_factory_destroy),
	(trilobite_sample_service_factory):

	Add TrilobiteRootClient: a GTK object that wraps corba password
	requests and emits a signal to handle it.  The sample command-line
	service now uses it to ask for a password.

	Fix bug in PasswordQuery where it didn't duplicate (ref) the corba
	object it stored away.

2000-07-12  Ramiro Estrugo  <ramiro@eazel.com>

	* components/services/install/nautilus-view/nautilus-service-install-view.c:
	(generate_install_form), (create_title_widget),
	(create_middle_title_widget):

	Fix a bunch of gtk assertions caused by adding widgets to gtkboxes
	twice.

	Add a middle title widget to separete the progress dislay from the
	top.
	
2000-07-12  Darin Adler  <darin@eazel.com>

	* src/nautilus-view-frame.c: (nautilus_view_frame_destroy_client):
	Change to use bonobo_object_unref now that the leaks have been
	fixed.  This requires the new Bonobo or you'll have lots of leaked
	processes. Luckily, Nautilus won't compile without the new Bonobo
	due to my use of bonobo_object_shutdown in main :-)

	* configure.in:
	Fix the way -Werror works so it affects all directories, not just
	ones where we use WERROR.
	
	* components/hardware/Makefile.am:
	* components/help/Makefile.am:
	* components/history/Makefile.am:
	* components/loser/content/Makefile.am:
	* components/loser/sidebar/Makefile.am:
	* components/mozilla/Makefile.am:
	* components/music/Makefile.am:
	* components/notes/Makefile.am:
	* components/rpmview/Makefile.am:
	* components/sample/Makefile.am:
	* components/services/install/command-line/Makefile.am:
	* components/services/install/lib/Makefile.am:
	* components/services/install/nautilus-view/Makefile.am:
	* components/services/install/server/Makefile.am:
	* components/services/inventory/lib/Makefile.am:
	* components/services/inventory/nautilus-view/Makefile.am:
	* components/services/inventory/service/Makefile.am:
	* components/services/login/lib/Makefile.am:
	* components/services/login/nautilus-view/Makefile.am:
	* components/services/login/service/Makefile.am:
	* components/services/startup/command-line/Makefile.am:
	* components/services/startup/lib/Makefile.am:
	* components/services/startup/nautilus-view/Makefile.am:
	* components/services/summary/lib/Makefile.am:
	* components/services/summary/nautilus-view/Makefile.am:
	* components/services/summary/service/Makefile.am:
	* components/services/time/command-line/Makefile.am:
	* components/services/time/nautilus-view/Makefile.am:
	* components/services/time/service/Makefile.am:
	* components/services/trilobite/helper/Makefile.am:
	* components/services/trilobite/libtrilobite/Makefile.am:
	* components/services/trilobite/sample/command-line/.cvsignore:
	* components/services/trilobite/sample/command-line/Makefile.am:
	* components/services/trilobite/sample/lib/Makefile.am:
	* components/services/trilobite/sample/nautilus-view/Makefile.am:
	* components/services/trilobite/sample/service/Makefile.am:
	* components/services/vault/command-line/Makefile.am:
	* components/services/vault/lib/Makefile.am:
	* components/services/vault/nautilus-view/Makefile.am:
	* components/services/vault/service/Makefile.am:
	* components/tree/Makefile.am:
	* components/websearch/Makefile.am:
	* cut-n-paste-code/widgets/nautilus-druid/Makefile.am:
	* helper-utilities/authenticate/Makefile.am:
	* libnautilus-extensions/Makefile.am:
	* libnautilus/Makefile.am:
	* librsvg/Makefile.am:
	* nautilus-installer/src/Makefile.am:
	* src/Makefile.am:
	* src/file-manager/Makefile.am:
	* test/Makefile.am:
	Got rid of the WERROR shell variable. The -Werror switch is no
	longer a per-directory thing.
	
	* librsvg/Makefile.am:
	Added libpng to the libraries for the test program. Maybe this was
	the wrong thing to do, but before this change the link failed.

	* components/sample/Makefile.am:
	* components/sample/main.c:
	* components/sample/nautilus-sample-content-view.c:
	* components/sample/nautilus-sample-content-view.h:
	A clean-up of the sample, including fixing many bugs and adding
	lots of comments. I figure we want this to be as close to
	exemplary as possible since people will continue to start with it
	for new components.
	
	* libnautilus-extensions/nautilus-bookmark.c:
	(nautilus_bookmark_new_with_icon): Removed a bogus extra ref of a
	NautilusFile object that I spotted in here.

	* src/nautilus-application.c: (nautilus_application_destroy_window):
	Re-added the code to quit when the last window is closed that Mike
	removed in his recent check-in.
	
	* src/nautilus-main.c: (main): Added a call to bonobo_shutdown.
	We don't need this call, but I say, "Why not?"
	
2000-07-12  J Shane Culpepper  <pepper@eazel.com>

	* components/services/login/nautilus-view/nautilus-login-view.c:
	(generate_login_form):
	Change NickName to User Name.

2000-07-12  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-preferences.c:
	(preferences_initialize_if_needed):
	* libnautilus-extensions/nautilus-user-level-manager.c:
	(user_level_manager_new):
	Update for GConf api changes.

2000-07-12  J Shane Culpepper  <pepper@eazel.com>

	* components/services/install/nautilus-view/nautilus-service-install-view.c:
	(generate_install_form):

	Formatting tweaks to the Description.

2000-07-11  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-property-browser.c: (strip_extension),
	(format_name_for_display), (make_background_chit),
	(make_properties_from_directory_path), (make_category_link),
	(nautilus_property_browser_update_contents):
	made various improvements suggested by Arlo and cleaned up
	the code a bit.  There's more changes coming soon.
	* src/nautilus-first-time-druid.c: (set_up_service_signup_page):
	improved the services description a bit
	* data/browser.xml:
	* icons/Makefile.am:
	* icons/themes.png:
	added an icon for the themes button

2000-07-11  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/inventory/nautilus-view/Makefile.am:
	Added RPM_LIBS

2000-07-11  Ramiro Estrugo  <ramiro@eazel.com>

	* src/run-nautilus:
	Setup the mozilla environment correctly.
	
2000-07-11  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/trilobite/idl/trilobite-service.idl:
	* components/services/trilobite/libtrilobite/Makefile.am:
	* components/services/trilobite/libtrilobite/libtrilobite-service.h:
	* components/services/trilobite/libtrilobite/libtrilobite.h:
	* components/services/trilobite/libtrilobite/trilobite-service-passwordquery-private.h:
	* components/services/trilobite/libtrilobite/trilobite-service-passwordquery-public.h:
	* components/services/trilobite/libtrilobite/trilobite-service-passwordquery.c:
	(impl_Trilobite_PasswordQuery_set_query_client),
	(trilobite_passwordquery_get_epv),
	(trilobite_passwordquery_destroy),
	(trilobite_passwordquery_set_arg),
	(trilobite_passwordquery_class_initialize),
	(trilobite_passwordquery_initialize),
	(trilobite_passwordquery_add_interface),
	(trilobite_passwordquery_get_password),
	(trilobite_passwordquery_set_prompt):
	Added the trilobite_passwordquery interface and
	trilobite_passwordquery_client. You add the _passwordquery
	interface to your service, and the client (view or cli tool)
	registers a _passwordquery_client object. When you then execute a
	service function that requires eg. root acces, the service can
	access a TrilobiteRootHelper (accessible using gtk_object_get_data
	(... "trilobite-root-helper"...), and call it. This will emit a
	signal, that will cause the _passwordquery to ask the
	_passwordquery_client for a password. Currently, if no
	_passwordquery_client is set, it will popup a gui input box. But
	we should loose then when Robey does the gtk interface to be used
	in views and cli tools.
	
	* components/services/trilobite/libtrilobite/trilobite-service-public.h:
	* components/services/trilobite/libtrilobite/trilobite-service.c:
	(trilobite_service_add_interface):
	Added the trilobite_service_add_interface. All trilobite
	interfaces should have one to handle the
	bonobo_object_add_interface ond other magic stuff.
	
	* components/services/trilobite/sample/idl/sample-service.idl:
	* components/services/trilobite/sample/command-line/main.c: (main):	
	* components/services/trilobite/sample/service/Makefile.am:
	* components/services/trilobite/sample/service/main.c:
	(trilobite_sample_service_factory):
	* components/services/trilobite/sample/service/sample-service-impl.c:
	(impl_Trilobite_Eazel_Sample_list_it), (sample_service_get_epv):
	Added a list_it call, that given a dir does a ls on it. (proof of
	concept stuff).	So I've also added the trilobite_passwordquery
	interface to the sampleservice, and the cli tool tries to do an
	ls -lart /root (thus triggering a password query).

	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_destroy), (eazel_install_initialize):
	* components/services/install/lib/eazel-install-private.h:
	* components/services/install/lib/eazel-install-protocols.c:
	(eazel_install_fetch_package):
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_new_packages), (install_all_packages),
	(rpm_show_progress), (do_rpm_install), (do_rpm_uninstall),
	(eazel_install_load_rpm_headers),
	(eazel_install_prepare_rpm_system):
	* components/services/install/server/Makefile.am:
	* components/services/install/server/main.c:
	(eazel_install_service_factory), (main):
	I've partly made the installer use the use the new stuff. It
	doesn't work yet, but it makes it all the way to password query.
	
	* components/services/time/command-line/main.c: (main):
	* components/services/time/idl/trilobite-eazel-time-service.idl:
	* components/services/time/service/Makefile.am:
	* components/services/time/service/main.c:
	(trilobite_eazel_time_service_factory):
	* components/services/time/service/trilobite-eazel-time-service.c:
	(impl_Trilobite_Eazel_Time_Service_check_time),
	(impl_Trilobite_Eazel_Time_Service_update_time),
	(trilobite_eazel_time_service_parse_body),
	(trilobite_eazel_time_service_do_http_request):
	Pached to work with the trilobite_passwordquery stuff. So as user,
	you can now set the time if you've got the root password.

	This closes 946, 938 and fixes root problem for the installer.

2000-07-11  Gene Z. Ragan  <gzr@eazel.com>

	* components/history/nautilus-history-view.c:
	(history_load_location), (history_button_press),
	(history_button_release), (make_obj):
	Removed drag move from list. Changed navigation to occur on mouse
	up, not on select row. This is because select row is called on
	rows during a drag. This can be annoying if you are trying to drag
	a row item and Nautilus is navigating to the item you ared
	dragging over. This behavior happens even if we are not supporting
	drag move of items. Now navigation occurs on the mouse up.

2000-07-11  Michael Engber  <engber@eazel.com>

	* libnautilus/nautilus-view-component.idl:
	* libnautilus/nautilus-view.c: (nautilus_view_quit_nautilus):
	* libnautilus/nautilus-view.h:
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_quit_menu_item_callback),
	(fm_desktop_icon_view_create_background_context_menu_items):
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_quit_nautilus):
	* src/file-manager/fm-directory-view.h:
	* src/nautilus-application.c: (nautilus_application_startup),
	(nautilus_application_destroy_window):
	* src/nautilus-application.h:
	* src/nautilus-desktop-window.c: (nautilus_desktop_window_new):
	* src/nautilus-view-frame-corba.c:
	(impl_Nautilus_ViewFrame_set_title),
	(impl_Nautilus_ViewFrame_quit_nautilus):
	* src/nautilus-view-frame-private.h:
	* src/nautilus-view-frame.c:
	(nautilus_view_frame_initialize_class),
	(nautilus_view_frame_set_title),
	(nautilus_view_frame_quit_nautilus):
	* src/nautilus-view-frame.h:
	* src/nautilus-window-manage-views.c:
	(nautilus_window_load_content_view):
	* src/nautilus-window.c: (nautilus_window_quit_nautilus_callback),
	(nautilus_window_connect_view):
	Hooked up the quit menu in the desktop context menu to quit Nautilus.
	Now, if Nautilus is managing the desktop no default window is created
	and Nautilus does not quit when the last window is closed - i.e. use
	the quit menu item instead. Bugs 1050 and 1051.

2000-07-11  J Shane Culpepper  <pepper@eazel.com>

	* components/services/login/nautilus-view/nautilus-login-view.c:

2000-07-11  Robin * Slomkowski  <rslomkow@eazel.com>

	* components/services/trilobite/helper/Makefile.am:
	added EXTRA_DISTS for eazel-helper.security.in, eazel-helper.pam

2000-07-11  Darin Adler  <darin@eazel.com>

	* src/nautilus-application.h:
	* src/nautilus-application.c: (nautilus_application_startup):
	* src/nautilus-main.c: (main):
	Fixed a bug I introduced at application startup time where it
	would quit right away instead of running the first time druid.
	(Calling it a druid is so lame, who are we kidding?)

	* RENAMING: Some renaming ideas. In particular, we can deprecate
	"null-tolerance" a little bit by including it in the names of the
	functions.
	
	* libnautilus-extensions/Makefile.am:
	* libnautilus-extensions/nautilus-gdk-extensions.c:
	(nautilus_set_mini_icon):
	* libnautilus-extensions/nautilus-gdk-extensions.h:
	* libnautilus-extensions/nautilus-mini-icon.c: [removed]
	* libnautilus-extensions/nautilus-mini-icon.h: [removed]
	* src/nautilus-window.c:
	Moved the single function from its own file into the gdk
	extensions file instead and changed the single place that uses it
	to get it from there.

2000-07-11  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-property-browser.c: (make_drag_image),
	(make_background_chit), (make_properties_from_directory_path):
	drew a frame around the background tiles at Arlo's request
	* icons/Makefile.am:
	* icons/chit_frame.png:
	added Arlo's image for the chit frame

2000-07-11  Robin Slomkowski  <rslomkow@eazel.com>

	* components/services/vault/command-line/Makefile.am:
	added a Header file 

2000-07-11  Robin * Slomkowski  <rslomkow@eazel.com>

	* components/html/Makefile.am:
	* components/loser/content/Makefile.am:
	* components/loser/sidebar/Makefile.am:
	* components/mozilla/Makefile.am:
	* components/music/Makefile.am:
	* components/rpmview/Makefile.am:
	* components/sample/Makefile.am:
	* components/services/install/nautilus-view/Makefile.am:
	* components/services/login/nautilus-view/Makefile.am:
	* components/services/startup/command-line/Makefile.am:
	* components/services/summary/nautilus-view/Makefile.am:
	* components/services/time/command-line/Makefile.am:
	* components/services/time/nautilus-view/Makefile.am:
	* components/services/trilobite/sample/command-line/Makefile.am:
	* components/services/trilobite/sample/nautilus-view/Makefile.am:
	* components/services/vault/command-line/Makefile.am:
	* components/services/vault/nautilus-view/Makefile.am:
	* components/tree/Makefile.am:
	* helper-utilities/authenticate/Makefile.am:
	* test/Makefile.am:
	mass change of LDFLAGS to LDADD

2000-07-11  Darin Adler  <darin@eazel.com>

	Fixed some leaks that cause problems with the new Bonobo.

	* components/history/nautilus-history-view.c:
	(history_view_frame_call_end):
	* libnautilus/nautilus-undo.c: (set_up_bonobo_control):
	* libnautilus/nautilus-view.c: (view_frame_call_end):
	* libnautilus/nautilus-zoomable.c:
	(nautilus_zoomable_ensure_zoomable_frame):
	Fixed a ref. count leak by adding code to unref the result of
	query_interface.
	
	* src/nautilus-view-frame.c: (nautilus_view_frame_is_zoomable):
	Fixed logic that was backwards.

2000-07-11  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-window.c: (nautilus_window_realize):
	fixed bug 609, set up nautilus mini-icon.  Also, removed the
	private hacked gdk_pixbuf_render_pixmap_and_mask routine since the real
	one in gdk_pixbuf is working properly now with images that lack
	an alpha channel.
	
2000-07-11  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar-tabs.c: (draw_or_hit_test_all_tabs):
	made the Arlo tabs use a new right edge when appropriate
	* icons/arlo/arlo.xml:
	added rectangle for new tab edge piece
	* src/nautilus-window-toolbars.c: (toolbar_search_web_callback):
	made it disable local search mode before invoking web search
	* data/emblems/Makefile.am:
	removed emblems that represent intrinisc properties from browser
	* icons/Makefile.am:
	* icons/novice.png:
	* icons/intermediate.png:
	* icons/expert.png:
	added Susan's user level images
	
2000-07-11  Robin * Slomkowski <rslomkow@eazel.com>

	* components/hardware/Makefile.am: changed to LDADD

2000-07-11  Darin Adler  <darin@eazel.com>

	* components/help/hyperbola-main.c:
	* src/file-manager/fm-directory-view.c:
	Oops. Missed two files that were including nautilus-alloc.h.

2000-07-12  Ian McKellar  <yakk@yakk.net.au>

	* libnautilus-extensions/nautilus-mime-actions.c:
	(nautilus_mime_get_short_list_methods_for_uri):
	* libnautilus-extensions/nautilus-mime-actions.h:
	* src/nautilus-window.c: (nautilus_window_load_content_view_menu):
	Load mime->vfs module mapping from gnome-vfs.

2000-07-11  Darin Adler  <darin@eazel.com>

	* src/nautilus-view-frame.c:
	Fixed to compile with latest Bonobo. Doesn't work quite as well
	as before -- we get some Bonobo ref. count asserts all the time --
	but it's better than nothing I guess. Also did some other code
	cleanup.

	* libnautilus-extensions/Makefile.am:
	* libnautilus-extensions/nautilus-alloc.h: [removed]
	Removed an unused source file.
	
	* libnautilus-extensions/nautilus-icon-container.c: (icon_free),
	(stop_rubberbanding), (destroy), (hide_rename_widget):
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(nautilus_icon_container_dropped_icon_feedback),
	(nautilus_icon_container_free_drag_data), (nautilus_icon_dnd_fini):
	* src/nautilus-property-browser.c:
	(nautilus_property_browser_drag_end):
	* src/nautilus-view-frame-nautilus-view.c: (load_location),
	(stop_loading), (selection_changed):
	* src/nautilus-view-frame.c: (nautilus_view_frame_handle_client_destroy),
	(nautilus_view_frame_load_client), (check_object),
	(nautilus_view_frame_set_active_errors):
	* src/nautilus-window-manage-views.c:
	(nautilus_window_end_location_change_callback):
	Added FIXMEs to various questionable uses of gtk_object_destroy.
	
	* src/Makefile.am:
	Added missing source file and replaced use of .. with $(top_srcdir).

2000-07-11  Ramiro Estrugo  <ramiro@eazel.com>

	* test/Makefile.am:
	Forgot the makefile in the last commit.
	
2000-07-11  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-password-dialog.c:
	(nautilus_password_dialog_initialize_class),
	(nautilus_password_dialog_initialize),
	(nautilus_password_dialog_destroy), (dialog_show_callback),
	(dialog_close_callback), (caption_table_activate_callback),
	(nautilus_password_dialog_new),
	(nautilus_password_dialog_run_and_block),
	(nautilus_password_dialog_set_username),
	(nautilus_password_dialog_set_password),
	(nautilus_password_dialog_set_readonly_username),
	(nautilus_password_dialog_get_username),
	(nautilus_password_dialog_get_password),
	(nautilus_password_dialog_get_remember),
	(nautilus_password_dialog_set_remember),
	(nautilus_password_dialog_set_remember_label_text):
	* libnautilus-extensions/nautilus-password-dialog.h:
	Many cleanups and improvements.  Use the GnomeDialog run_and_close
	call instead of our own event loop hack.  Removed many unneeded
	callbacks and details member variables.  Add checks for all
	callbacks.  Add support for remembering the password.
	
	* test/.cvsignore:
	* test/Makefile.am:
	* test/test-nautilus-password-dialog.c:
	(authenticate_boink_callback), (exit_callback), (main):
	Add a new test for the password dialog.

	* test/test-nautilus-widgets.c: (main),
	(text_caption_changed_callback):
	Removed the old password dialog test.
		
2000-07-10  J Shane Culpepper  <pepper@eazel.com>

	* components/services/install/nautilus-view/nautilus-service-install-view.c:
	(generate_install_form), (generate_current_progress),
	(go_to_uri), (nautilus_service_install_view_update_from_uri):
	* components/services/login/nautilus-view/nautilus-login-view.c:
	* components/services/startup/nautilus-view/nautilus-service-startup-view.c:
	(generate_startup_form):

	Fixed the startup view progress meter.  Various changes to get flow
	correct for the first cut at the services demo rpms.

2000-07-10  Andy Hertzfeld  <andy@eazel.com>

	* data/browser.xml:
	Oops! Changing the capitalization of the names broke the customize
	window, since there's no distinction between the directory name and
	the display name. I'll fix it soon, but for now I changed them back
	to lower-case.
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog):
	removed the theme preference from the appearance panel, since it's
	now in the customize window

2000-07-10  Robey Pointer  <robey@eazel.com>

	* components/services/trilobite/helper/eazel-helper.c:
	(do_command), (main):
	* components/services/trilobite/libtrilobite/trilobite-root-helper.c:
	(trilobite_root_helper_run_program), (trilobite_root_helper_run):
	* components/services/trilobite/libtrilobite/trilobite-root-helper.h:

	Add _RUN_LS command to TrilobiteRootHelper and eazel-helper, for
	Eskil to use for testing.

2000-07-10  Pavel Cisler  <set EMAIL_ADDRESS environment variable>

	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_scroll), (rubberband_timeout_callback):
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(auto_scroll_timeout_callback), (set_up_auto_scroll_if_needed),
	(stop_auto_scroll), (handle_local_move), (drag_leave_callback),
	(nautilus_icon_dnd_fini), (drag_motion_callback),
	(nautilus_icon_dnd_end_drag):
	Add support for auto-scroll during drag&drop in the icon view.
	

	* libnautilus-extensions/nautilus-icon-private.h:
	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_scroll):
	Renamed scroll to nautilus_icon_container_scroll and made it
	available to nautilus-icon-dnd.c.
	
	* src/file-manager/fm-list-view.c: (fm_list_get_drag_pixmap):
	Fix a memory thrasher in the code that grabs the item icon during
	a list view drag -- added a missing ref.

	* libnautilus-extensions/nautilus-drag.c:
	(add_one_gnome_icon_list), (add_one_uri_list):
	Fix some whitespace.

2000-07-10  Robey Pointer  <robey@eazel.com>

	* components/services/trilobite/helper/eazel-helper.c: (main):
	* components/services/trilobite/libtrilobite/trilobite-root-helper.c:
	(trilobite_root_helper_start), (trilobite_root_helper_rpm),
	(trilobite_root_helper_set_time), (trilobite_root_helper_run):
	* components/services/trilobite/libtrilobite/trilobite-root-helper.h:

	Make sure TrilobiteRootHelper can be restarted after each use
	(same object, new session).  Add _set_time function.

2000-07-10  Andy Hertzfeld  <andy@eazel.com>

	added a "web search" button to the toolbar
	
	* libnautilus-extensions/nautilus-global-preferences.c,h:
	(global_preferences_create_dialog),
	(global_preferences_register_for_ui):
	added a preference for the web search uri.
	
	* src/Makefile.am:
	* src/nautilus-toolbar.c,h: (nautilus_toolbar_new),
	(nautilus_toolbar_initialize_class), (nautilus_toolbar_initialize),
	(nautilus_toolbar_set_button_spacing),
	(nautilus_toolbar_size_allocate):
	added a new nautilus_toolbar class to overcome the problem that
	the normal toolbar uses the maximum width for all the buttons,
	because the "web search" button has a longer name than usual
	
	* src/nautilus-window-toolbars.c: (toolbar_clear_search_mode),
	(toolbar_search_local_callback), (toolbar_search_web_callback),
	(remember_buttons), (setup_toolbar_images),
	(nautilus_window_initialize_toolbars):
	used nautilus_toolbar instead of gtk_toolbar;
	added a "web search" button to the toolbar
	
	* src/nautilus-window.c,h: (navigation_bar_mode_changed_callback),
	(nautilus_window_set_search_mode), (nautilus_window_go_web_search):
	added the semantics for web search, which is to invoke the
	location specified by the web search uri
	
	* src/nautilus-property-browser.c: (remove_color),
	(nautilus_property_browser_remove_element),
	(make_properties_from_xml_node):
	some minor clean-ups
	* data/browser.xml:
	capitalized titles for Arlo


2000-07-10  Robey Pointer  <robey@eazel.com>

	* components/services/trilobite/helper/.cvsignore:
	* components/services/trilobite/helper/Makefile.am:
	* components/services/trilobite/helper/eazel-helper.pam:
	* components/services/trilobite/helper/eazel-helper.security.in:

	Add Makefile.am magic to autogenerate eazel-helper.security from
	the .in file and copy eazel-helper.pam and eazel-helper.security
	into the proper directory (well, right now, into /gnome/etc, but
	that's a separate issue).
	
2000-07-10  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/docs/installer-rpmsearch:
	text file on how the rpmsearch.cgi should work.
		
	* components/services/install/command-line/eazel-alt-install-corba.c:
	(set_parameters_from_command_line),
	(eazel_download_progress_signal), (eazel_install_progress_signal),
	(install_failed), (create_package), (done):
	Added --force to do force installs. Also fixed the screen output
	to show the begin/progress/end handling on download and install
	callbacks.
	Changed the output tree in case of install_failed.
		
	* components/services/install/command-line/eazel-alt-install.c:
	(set_parameters_from_command_line),
	(eazel_install_progress_signal), (eazel_download_progress_signal),
	(main):
	Tried to revive it...
	
	* components/services/install/lib/eazel-install-corba-callback.c:
	(eazel_install_callback_class_initialize):
	Removed the evil marshal func, and renamed it to prevent name clashes.
	
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_destroy), (eazel_install_class_initialize),
	(eazel_install_initialize):
	Some more free's in the _destroy.
	
	* components/services/install/lib/eazel-install-private.h:
	Added a hash table to fix bug #1585.
	
	* components/services/install/lib/eazel-install-protocols.c:
	(http_fetch_remote_file), (eazel_install_fetch_package):
	Fixed bug 1620. Would probably be more elegant to use some
	enums. Also now inserts packages into the hashtable in
	EazelInstall.
	
	* components/services/install/lib/eazel-install-public.h:
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(rpm_show_progress), (do_rpm_install), (do_rpm_uninstall),
	Fixed bug 1585 by having the rpm_show_progress lookup the package
	in the hashtable, and bug 1620 by inserting a load of if's to make
	sure the signal emits with amount==0, amount > 0 && < total and
	amount == total.
	(eazel_install_fetch_rpm_dependencies):
	Fixed bug 1363.
	
	* components/services/install/lib/eazel-install-types.c:
	(rpmfilename_from_packagedata), (packagedata_hash_equal),
	(packagedata_status_str_to_enum),
	(eazel_install_gtk_marshal_NONE__POINTER_INT_INT_INT_INT_INT_INT):
	* components/services/install/lib/eazel-install-types.h:
	Added the evil marshaller to types.c
	
	* nautilus-installer/src/Makefile:
	* nautilus-installer/src/installer.c: (eazel_install_progress),
	(eazel_download_progress):
	* nautilus-installer/src/interface.c: (create_window):
	Tried to make the installer look slightly more pleasing.

2000-07-10  Darin Adler  <darin@eazel.com>

	* components/history/nautilus-history-view.c:
	(history_view_update_icons), (get_history_list),
	(hyperbola_navigation_history_load_location):
	* libnautilus/nautilus-view-component.idl:
	* src/nautilus-history-frame.c:
	(impl_Nautilus_HistoryFrame_get_history_list):
	* src/nautilus-view-frame.h:
	* src/nautilus-view-frame.c:
	(nautilus_view_frame_get_history_list):
	* src/nautilus-window.c:
	(nautilus_window_get_history_list_callback),
	(nautilus_window_connect_view):
	Changed history list to include a separate position field
	instead of having a position in each entry.
	
	* components/notes/nautilus-notes.c: (done_with_file):
	Name changed from nautilus_file_cancel_callback to
	nautilus_file_cancel_call_when_ready to reduce confusion with
	nautilus_file_cancel.
	
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_get): Made NULL for URI be legal (and result
	in NULL for the directory object).
	* libnautilus-extensions/nautilus-mime-actions.c:
	(get_mime_type_from_uri): Made NULL for URI be legal (and result
	in NULL for MIME type).

	* libnautilus-extensions/nautilus-entry.c:
	(nautilus_entry_set_text): Minor tweak.
	
	* libnautilus-extensions/nautilus-file.h:
	* libnautilus-extensions/nautilus-file-private.h:
	* libnautilus-extensions/nautilus-file.c: (operation_new),
	(operation_free), (operation_complete), (operation_cancel),
	(rename_update_info_and_metafile), (rename_callback),
	(nautilus_file_rename), (nautilus_file_cancel),
	(nautilus_file_set_owner), (nautilus_file_cancel_call_when_ready):
	Added cancelling to rename as a prelude to doing the same for
	set_file_info-based calls.
	
	* libnautilus-extensions/nautilus-graphic.c:
	Fixed a formatting mistake and a typo.
	
	* libnautilus-extensions/nautilus-stock-dialogs.h:
	* libnautilus-extensions/nautilus-stock-dialogs.c:
	(timed_wait_hash), (timed_wait_hash_equal),
	(nautilus_timed_wait_start), (nautilus_timed_wait_free),
	(nautilus_timed_wait_stop): Re-did timed wait API now that
	we are really using it. Still unimplemented.
	
	* src/Makefile.am:
	Since IDL dependencies are not understood by automake, added
	an explicit one so we pick up the change to the libnautilus
	view component IDL.
	
	* src/file-manager/fm-error-reporting.h:
	* src/file-manager/fm-error-reporting.c: (rename_callback),
	(cancel_rename_callback), (fm_rename_file): Moved code for
	renaming into here so it can be shared between the icon view
	and the properties dialog. Perhaps it needs to be renamed.
	
	* src/file-manager/fm-icon-view.c:
	(fm_icon_view_icon_text_changed_callback): Use the shared
	code instead of having the rename code here.
	
	* src/nautilus-application.c: (create_object): Make a new
	shell object each time instead of trying to share one.
	(nautilus_application_startup): Activate the shell object
	using OAF. This makes it work across processes and adds
	the feature.
	
	* src/nautilus-main.c: (main): Call bonobo_activate explicitly so
	CORBA calls work before the main loop.
	
	* src/nautilus-shell.c: (display_caveat_first_time),
	(corba_manage_desktop): Got rid of all state in NautilusShell
	so we can use multiple shell objects if we want.
	
	* src/nautilus-sidebar.c: (nautilus_sidebar_update_info):
	Got rid of code that checks for NULL.
	
2000-07-10  Ramiro Estrugo  <ramiro@eazel.com>

	* icons/eazel/Services.png:
	New icon from Arlo.

2000-07-10  Michael Engber  <engber@eazel.com>

	* src/file-manager/Makefile.am:
	* src/file-manager/fm-desktop-icon-view.c:
	(fm_desktop_icon_view_initialize_class),
	(fm_desktop_icon_view_initialize),
	(fm_desktop_icon_view_quit_menu_item_callback),
	(fm_desktop_icon_view_create_background_context_menu_items):
	* src/file-manager/fm-desktop-icon-view.h:
	* src/nautilus-application.c: (manufactures), (create_object):
	* src/nautilus-application.h:
	* src/nautilus-window-manage-views.c:
	(nautilus_window_load_content_view):
	* src/nautilus.oafinfo:
	First half of putting a quit menu item on the desktop's
	right-click menu. Still need to hook up the quit item.

2000-07-10  Gene Z. Ragan  <gzr@eazel.com>

	Fixed bug 971, enable undo in file editing part of
	properties window.
	
	* src/file-manager/fm-properties-window.c: 
	(create_basic_page):
	Enabled entry for undo and enabled the use of ctl-z
	to invoke undo while properties dialog has focus.

2000-07-10  Ramiro Estrugo  <ramiro@eazel.com>

	* src/nautilus-window-toolbars.c: (toolbar_services_callback):
	Add a toolbar button to instanciate services.  Defaults to off if
	EAZEL_SERVICES is not on.

	* icons/eazel/Makefile.am:
	* icons/eazel/Servics.png:
	Add services icon for toolbar.

2000-07-10  Robey Pointer  <robey@eazel.com>

	* components/services/trilobite/Makefile.am:
	* components/services/trilobite/helper/.cvsignore:
	* components/services/trilobite/helper/Makefile.am:
	* components/services/trilobite/helper/README:
	* components/services/trilobite/helper/eazel-helper.c:
	* configure.in:

	Add new helper/ directory to trilobite for building eazel-helper,
	the sudo-ish utility that lets trilobite services do stuff as root.

2000-07-10  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-graphic.c:
	(nautilus_graphic_initialize), (nautilus_graphic_size_allocate),
	(nautilus_graphic_size_request), (nautilus_graphic_set_label_text),
	(nautilus_graphic_set_label_font),
	(nautilus_graphic_set_left_offset),
	(nautilus_graphic_set_right_offset),
	(nautilus_graphic_set_top_offset),
	(nautilus_graphic_set_bottom_offset),
	(nautilus_graphic_set_extra_width),
	(nautilus_graphic_set_extra_height):
	* libnautilus-extensions/nautilus-graphic.h:
	Add support for boundary offset and extra width and height.

	* test/test-nautilus-graphic.c: (main):
	Update for new boundary offset support.
	* components/services/install/nautilus-view/nautilus-service-install-view.c:
	(generate_install_form), (create_graphic_widget),
	(create_title_widget):
	* components/services/login/nautilus-view/nautilus-login-view.c:
	(generate_login_form), (create_graphic_widget),
	(create_title_widget):
	Use new graphic widget to make things prettier.
	
2000-07-10  Robey Pointer  <robey@eazel.com>

	* components/services/trilobite/libtrilobite/Makefile.am:
	* components/services/trilobite/libtrilobite/libtrilobite.h:
	* components/services/trilobite/libtrilobite/trilobite-core-utils.c:
	(trilobite_pexec):
	* components/services/trilobite/libtrilobite/trilobite-core-utils.h:
	* components/services/trilobite/libtrilobite/trilobite-root-helper.c:
	new file
	* components/services/trilobite/libtrilobite/trilobite-root-helper.h:
	new file

	Add baseline TrilobiteRootHelper object.  It uses the "userhelper"
	utility to get run eazel-helper, which can do certain tasks as
	root.  (For now, it can only run "rpm".)  A signal callback is
	used to fetch the root password.

2000-07-10  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.c:
	(nautilus_gdk_pixbuf_scale_to_fit),
	(nautilus_gdk_pixbuf_draw_text):
	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.h:
	New function to draw text into a pixbuf given a rect and a
	string.   Factored from the icon factoyr.
	* libnautilus-extensions/nautilus-graphic.c:
	(nautilus_graphic_size_allocate):
	Add support for drawing text.
	
	* libnautilus-extensions/nautilus-icon-factory.c: (embed_text):
	Factored out gdk pixbuf text drawing.  Use the new text drawing
	function.

	* test/test-nautilus-graphic.c: (create_color_scale):
	Update for text support.
	
2000-07-10  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-gdk-extensions.c:
	* libnautilus-extensions/nautilus-gdk-extensions.h:
	(nautilus_gdk_window_bring_to_front):
	Added genric function that brings a GdkWindow to the
	front and activates it.  There is no GDK API that
	does this.
	
	* src/nautilus-window-manage-views.c: (open_location):
	Removed case specific code and repalced wirth new function.
	
2000-07-10  Gene Z. Ragan  <gzr@eazel.com>

	* src/nautilus-window-manage-views.c: 
	(open_location):
	Modified function to handle the folloing case:
	If a user has selected open location in new window
	in prefs, and a window is already open for the location,
	the window is activated and given focus.  This feature
	makes the most sense, but conflicts with the wording
	of the preferences item.  We need a way to express
	this feature in the prefs.

2000-07-10  Andy Hertzfeld  <andy@eazel.com>

		
	* src/nautilus-property-browser.c:
	(nautilus_property_browser_initialize),
	(nautilus_property_browser_destroy),
	(nautilus_property_browser_theme_changed),
	(theme_clicked_callback):
	made the property browser update itself when the theme changes	
	* libnautilus-extensions/nautilus-theme.c:
	(nautilus_theme_make_selector):
	fixed bug where we were calling g_file_exists with NULL
	by testing for NULL instead of calling it at all.		
	* data/emblems/Makefile.am:
	* data/emblems/personal.png:
	* icons/Makefile.am:
	* icons/emblem-personal.svg:
	added the emblems that I tried to on Friday but forgot to cvsadd

2000-07-10  Ramiro Estrugo  <ramiro@eazel.com>

	*
	components/services/startup/nautilus-view/nautilus-service-startup-
	view.c: (generate_startup_form), (create_graphic_widget),
	(generate_form_logo):
	Use the new NautilusGraphic widget.  Add a function to create
	graphics with a given image and background.
	
	* libnautilus-extensions/nautilus-graphic.c:
	(nautilus_graphic_size_allocate):
	Add FIXME blurbs.

	* libnautilus-extensions/nautilus-icon-factory.c:
	Add FIXME blurbs.
	
2000-07-10  Ian McKellar  <yakk@yakk.net.au>

	* libnautilus-extensions/nautilus-mime-actions.c:
	(nautilus_mime_get_short_list_methods_for_uri):
	Fix for stupid segfault I introduced in my last checkin.

2000-07-10  Andy Hertzfeld  <andy@eazel.com>

	* data/browser.xml:
	* libnautilus-extensions/nautilus-theme.c,h:
	(nautilus_theme_get_image_path), (nautilus_theme_make_selector):
	added code to make a pixbuf that exemplifies a theme;
	Arlo is going to give me a better design soon
	* src/nautilus-property-browser.c:
	(make_properties_from_directory_path),
	(make_properties_from_directory), (make_properties_from_xml_node),
	(theme_clicked_callback), (vfs_file_exists), (has_image_file),
	(add_theme_selector), (make_properties_from_themes),
	(make_category), (nautilus_property_browser_update_contents):
	lots of work here: added a title gotten from the xml file,
	added theme selector and theme support
	* src/nautilus-window-menus.c:
	disabled test mode, since it was inadvertently closing the sidebar
	
2000-07-09  Ian McKellar  <yakk@yakk.net.au>

	* components/services/vault/command-line/Makefile.am:
	* components/services/vault/command-line/main.c: (valid_ops),
	(main):
	* components/services/vault/command-line/vault-operations.c:
	(vault_list), (make_local_uri), (make_remote_uri), (vault_upload),
	(vault_download), (vault_move), (vault_delete):
	* components/services/vault/command-line/vault-operations.h:
	Beginnings of a command line Vault manipulation tool. Likely to change
	extensively.

	* libnautilus-extensions/nautilus-mime-actions.h:
	* libnautilus-extensions/nautilus-mime-actions.c:
	(nautilus_mime_get_short_list_methods_for_uri):
	Added nautilus_mime_get_short_list_methods_for_uri function which
	returns a list of GnomeVFS methods that can be used to decode a given
	URI. The current implementation has a hard-coded list because I'm
	still trying to work out the right place to make this configurable.

	* src/nautilus-window.c: (view_menu_vfs_method_callback),
	(nautilus_window_load_content_view_menu):
	Add gnome-vfs methods to the View as menu if appropriate.

2000-07-08  Fatih Demir	<kabalak@gmx.net>
	
	* components/html/Makefile.am: Define _VERSION.
	
	* components/html/ntl-web-browser: Made it indent rightly and
		removed 2 debug messages.	

2000-07-09  J Shane Culpepper  <pepper@eazel.com>

	*
	components/services/startup/nautilus-view/nautilus-service-startup-
	view.c: (generate_startup_form), (set_widget_color):

	Adding a hack override the global font color. Fonts on startup are
	now white.

2000-07-09  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-background.c,h:
	(nautilus_background_is_dark):
	added a method to determine if backgrounds are generally dark or light colored
	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.c,h:
	(nautilus_gdk_pixbuf_average_value):
	added a method to get a pixbufs average color component values
	* src/nautilus-sidebar-tabs.c:
	(nautilus_sidebar_tabs_load_theme_data), (is_light_color),
	(nautilus_sidebar_tabs_set_color):
	made the tabs use light or dark colored label text depending on the tab color
	* src/nautilus-sidebar-title.c,h:
	(nautlius_sidebar_title_select_text_color),
	(nautilus_sidebar_title_theme_changed), (update_all):
	made the sidebar title use light or dark colored text depending on the background
	* src/nautilus-sidebar.c: (receive_dropped_color),
	(background_appearance_changed_callback):
	added call to tell sidebar label to calculate text color when background changes
	* src/nautilus-property-browser.c: (nautilus_property_browser_new),
	(element_clicked_callback):
	flipped sense of shift key for keeping the property browser open; now it stays open
	by default unless the shift key is down.
	Also, made the window resizable
	* data/browser.xml:
	tweaked colors in browser
	
2000-07-09  J Shane Culpepper  <pepper@eazel.com>

	*
	components/services/install/nautilus-view/nautilus-service-install-
	view.c: (generate_install_form), (generate_form_title),
	(generate_current_progress):

	More formatting.

2000-07-08  J Shane Culpepper  <pepper@eazel.com>

	*
	components/services/install/nautilus-view/nautilus-service-install-
	view.c: (generate_install_form), (generate_form_title),
	(fake_overall_install_progress), (generate_current_progress),
	(show_overall_feedback),
	(nautilus_service_install_view_update_from_uri):
	*
	components/services/install/nautilus-view/nautilus-service-install-
	view.h:

	Adding progress meter fixes to get the current progress message box
	working.

2000-07-08  Gene Z. Ragan  <gzr@eazel.com>

	Work on bug 1021, should be able to open smaller Nautilus windows.
	

	* src/nautilus-window.c: (nautilus_window_constructed),
	* src/nautilus-window.h:
	(sidebar_panels_changed_callback),
	(nautilus_window_hide_locationbar),
	(nautilus_window_show_locationbar), (nautilus_window_hide_toolbar),
	(nautilus_window_show_toolbar), (nautilus_window_hide_sidebar),
	(nautilus_window_show_sidebar), (nautilus_window_hide_statusbar),
	(nautilus_window_show_statusbar):
	Added several new functions that control the visibility
	of NautilusWindow elements.
	
	* src/nautilus-window-menus.c: (edit_menu_cut_callback),
	(edit_menu_copy_callback), (settings_menu_toolbar_callback),
	(settings_menu_locationbar_callback),
	(settings_menu_statusbar_callback),
	(settings_menu_sidebar_callback),
	(settings_menu_normalize_menu_callback),
	(nautilus_window_initialize_menus):
	Test menu items to exercise the new code above.  These can be
	removed from the build by undefining WINDOW_ITEMS_TEST.

2000-07-08  J Shane Culpepper  <pepper@eazel.com>

	* components/services/install/nautilus-view/Makefile.am:
	*
	components/services/install/nautilus-view/nautilus-service-install-
	view.c: (generate_install_form), (show_feedback),
	(nautilus_service_install_view_update_from_uri),
	(nautilus_service_install_view_load_uri):
	*
	components/services/install/nautilus-view/nautilus-service-install-
	view.h:
	*
	components/services/install/nautilus-view/nautilus-service-install.
	c: (nautilus_service_install_view_install_package_callback):

	First cut of the skeleton for easy install view.

2000-07-08  J Shane Culpepper  <pepper@eazel.com>

	*
	components/services/startup/nautilus-view/nautilus-service-startup-
	view.c: (generate_startup_form), (generate_form_logo),
	(nautilus_service_startup_view_load_uri):

	Adding new logo.  More spacing tweaks.

2000-07-08  Fatih Demir	<kabalak@gmx.net>
	
	* components/html/ntl-web-browser.c:
 	   Made the GtkHTML view work again.
	    +Include gconf/gconf.h for the GConf routines.
	    +Init the GConf library before doing the other
	      stuff.
	    +Use a GConfError for the init function.

2000-07-08  J Shane Culpepper  <pepper@eazel.com>

	* components/services/inventory/nautilus-view/Makefile.am:
	* components/services/inventory/nautilus-view/main.c: (main):
	*
	components/services/inventory/nautilus-view/nautilus-inventory-view
	.oafinfo:
	* components/services/login/nautilus-view/Makefile.am:
	* components/services/login/nautilus-view/main.c: (main):
	* components/services/startup/nautilus-view/Makefile.am:
	* components/services/startup/nautilus-view/icons/Makefile.am:
	* components/services/startup/nautilus-view/main.c: (main):
	* components/services/summary/nautilus-view/Makefile.am:
	* components/services/summary/nautilus-view/main.c: (main):
	*
	components/services/summary/nautilus-view/nautilus-summary-view.oaf
	info:

	Fixing oafinfo files based on Darin's suggestion and cleaning up main
	functions to use locale and remove old corba call that is no longer
	needed.

2000-07-07  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/server/.cvsignore:
	* nautilus-installer/src/.cvsignore:
	* .cvsignore:
	* components/services/install/command-line/.cvsignore:
	Less noise on cvs update.
	
	* components/rpmview/nautilus-rpm-view-install.c:
	(nautilus_rpm_view_install_progress_signal):
	*
	components/services/install/command-line/eazel-alt-install-corba.c:
	(eazel_install_progress_signal):
	* components/services/install/idl/trilobite-eazel-install.idl:
	* components/services/install/lib/eazel-install-corba-callback.c:
	(impl_install_progress),
	(gtk_marshal_NONE__POINTER_INT_INT_INT_INT_INT_INT),
	(eazel_install_callback_class_initialize):
	* components/services/install/lib/eazel-install-corba-callback.h:
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_class_initialize),
	(eazel_install_emit_install_progress),
	(eazel_install_emit_install_progress_default):
	* components/services/install/lib/eazel-install-private.h:
	* components/services/install/lib/eazel-install-public.h:
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(rpm_show_progress), (do_rpm_install):
	Fixed bug 1603, install_progress now reports package
	numnber/total, package size completed/total, total install size
	completed/total.
	
2000-07-07  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/command-line/genpkg_list.example:
	Represents the july 5th milestone.
	
	(create_default_metadata):	
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(rpm_show_progress), (do_rpm_install),	
	(eazel_install_fetch_rpm_dependencies):
	Added some FIXME's. Fixed a horrible mem bug. It now leaks, but
	rpm install works. 
	
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(parse_package):
	Added a check so the strtol isn't a risk anymore
	
	* components/services/trilobite/idl/trilobite-service.idl:
	Added the interface for the password query hell.
	
	* components/services/trilobite/libtrilobite/Makefile.am:
	*
	components/services/trilobite/libtrilobite/trilobite-service-passwo
	rdquery-private.h:
	*
	components/services/trilobite/libtrilobite/trilobite-service-passwo
	rdquery-public.h:
	*
	components/services/trilobite/libtrilobite/trilobite-service-passwo
	rdquery.c: (trilobite_passwordquery_get_epv),
	(trilobite_passwordquery_destroy),
	(trilobite_passwordquery_set_arg),
	(trilobite_passwordquery_class_initialize),
	(trilobite_passwordquery_construct),
	(trilobite_passwordquery_create_corba_object),
	(trilobite_passwordquery_initialize),
	(trilobite_passwordquery_get_type), (trilobite_passwordquery_new):
	Did the initial passwordquery corba object by cp & s/x/y/ on
	trilobite-service*[ch].
	
	* data/emblems/Makefile.am:
	removed personal.png from _DATA, as it does not exists
	
	* icons/Makefile.am:
	removed emblem-personal.svg
	
	* icons/vector/Makefile.am:
	icons/Makefile.am
	
	* nautilus-installer/src/Makefile:
	* nautilus-installer/src/installer.c: (eazel_install_progress),
	(make_dirs), (installer):
	Now creates the /var/eazel/services dir. Sets the proper flags for
	the install object and again prints the package name during
	progress display.
	
	* nautilus-installer/src/interface.c: (create_window):
	Fiddled with the layout, everything doesn't jump around anymore,
	just a few things.
	
	* nautilus-installer/src/prescript:
	Inc'ed the version to 0.1d

2000-07-07  Andy Hertzfeld  <andy@eazel.com>

	* data/emblems/Makefile.am:
	* icons/Makefile.am:
	* icons/emblem-draft.svg:
	* icons/emblem-favorite.svg:
	* data/emblems/draft.png:
	* data/emblems/favorite.png:
	added, removed and updated emblems as first step of emblem
	clean-up; more changes coming soon.
	
2000-07-07  Darin Adler  <darin@eazel.com>

	* components/music/main.c: (music_view_make_object), (main):
	* components/services/install/nautilus-view/main.c: (main):
	Got rid of unneeded CORBA_Environment variable.

	* components/services/install/nautilus-view/nautilus-service-install-view.oafinfo:
	Fixed a typo that was making the view not work.
	
	* src/nautilus-applicable-views.c: (got_file_info_callback):
	Reformatted.
	
	* src/nautilus-window-manage-views.c:
	(nautilus_window_update_state): Added a FIXME for a place where an
	error happens and it's not reported.

	* src/nautilus-application.c: (nautilus_application_startup):
	Fixed a double-destroy problem with the CORBA object I just added.

2000-07-07  J Shane Culpepper  <pepper@eazel.com>

	* components/services/install/Makefile.am:
	* components/services/install/nautilus-view/.cvsignore:
	* components/services/install/nautilus-view/Makefile.am:
	* components/services/install/nautilus-view/main.c:
	(service_install_object_destroyed), (service_install_make_object),
	(main):
	* components/services/install/nautilus-view/nautilus-service-install-view.c:
	(generate_install_form), (generate_form_title),
	(nautilus_service_install_view_initialize_class),
	(nautilus_service_install_view_initialize),
	(nautilus_service_install_view_destroy),
	(nautilus_service_install_view_get_nautilus_view),
	(nautilus_service_install_view_load_uri),
	(service_install_load_location_callback):
	* components/services/install/nautilus-view/nautilus-service-install-view.h:
	* components/services/install/nautilus-view/nautilus-service-install-view.oafinfo:
	* components/services/install/nautilus-view/nautilus-service-install.c:
	(nautilus_service_install_download_progress_signal),
	(nautilus_service_install_progress_signal),
	(nautilus_service_install_download_failed),
	(nautilus_service_install_failed_helper),
	(nautilus_service_install_failed),
	(nautilus_service_install_dependency_check),
	(nautilus_service_install_done),
	(nautilus_service_install_view_install_package_callback),
	(nautilus_service_install_view_uninstall_package_callback):
	* components/services/install/nautilus-view/nautilus-service-install.h:

	Adding the skeleton for the eazel install view.

2000-07-07  Darin Adler  <darin@eazel.com>

	* components/hardware/nautilus-hardware-view.oafinfo:
	* components/help/help-contents.oafinfo:
	* components/help/help-index.oafinfo:
	* components/help/help-search.oafinfo:
	* components/history/nautilus-history-view.oafinfo:
	* components/html/ntl-web-browser.oafinfo:
	* components/loser/content/nautilus-content-loser.oafinfo:
	* components/loser/sidebar/nautilus-sidebar-loser.oafinfo:
	* components/mozilla/nautilus-mozilla-content-view.oafinfo:
	* components/music/nautilus-music-view.oafinfo:
	* components/notes/nautilus-notes.oafinfo:
	* components/rpmview/nautilus-rpm-view.oafinfo:
	* components/sample/nautilus-sample-content-view.oafinfo:
	* components/services/inventory/nautilus-view/nautilus-inventory-view.oafinfo:
	* components/services/login/nautilus-view/nautilus-login-view.oafinfo:
	* components/services/startup/nautilus-view/nautilus-service-startup-view.oafinfo:
	* components/services/summary/nautilus-view/nautilus-summary-view.oafinfo:
	* components/services/time/nautilus-view/trilobite-eazel-time-view.oafinfo:
	* components/services/trilobite/sample/nautilus-view/nautilus-sample-service-view.oafinfo:
	* components/shell/shell.oafinfo:
	* components/tree/nautilus-tree-view.oafinfo:
	* components/websearch/ntl-web-search.oafinfo:
	Removed the obsolete Nautilus/ContentView and Nautilus/MetaView.

	* components/services/install/command-line/.cvsignore:
	Added a generated file.
	
	* libnautilus-extensions/nautilus-directory-async.c:
	(metafile_read_done), (allow_metafile),
	(nautilus_directory_request_read_metafile): Another quick cut at
	leaving out metafiles for some schemes.
	(dequeue_pending_idle_callback): Get rid of "pending file info is
	NULL!" message and "approve" the change that made Maciej put it
	in.
	
	* libnautilus/nautilus-view.c: (nautilus_uri_list_from_g_list):
	Use CORBA_TRUE to truly use CORBA correctly.
	
	* src/nautilus-shell-interface.idl:
	* src/.cvsignore:
	* src/Makefile.am:
	* src/nautilus.oafinfo:
	* src/nautilus-shell.h:
	* src/nautilus-shell.c: (nautilus_shell_initialize_class),
	(nautilus_shell_get_epv), (nautilus_shell_get_vepv),
	(nautilus_shell_create_servant), (nautilus_shell_initialize),
	(destroy), (nautilus_shell_new), (display_caveat),
	(display_caveat_first_time), (open_window), (corba_open_windows),
	(corba_open_default_window), (corba_manage_desktop): Added a new
	CORBA file for the interface of the Nautilus shell itself and a
	class for a server side of it. Moved some code in here from
	NautilusApplication.
	
	* src/nautilus-application.c: (manufactures), (create_object),
	(create_factory), (nautilus_application_initialize),
	(nautilus_strv_length), (nautilus_make_uri_list_from_strv),
	(nautilus_application_startup): Moved the IID strings into
	constants for easier code reading. Added the code that can yield
	up the shell object, although it's not used yet. Changed startup
	code to use the NautilusShell object to do the work. This doesn't
	work cross-process yet, but it's ready to.
	
	* src/nautilus-window.h:
	* src/nautilus-window.c: (nautilus_window_initialize_class),
	(nautilus_window_initialize), (goto_uri_callback),
	(navigation_bar_mode_changed_callback),
	(nautilus_window_constructed), (nautilus_window_destroy),
	(nautilus_window_realize): Misc. cleanup, including getting rid of
	the strange old way of doing parent_class.
	
2000-07-07  Pavel Cisler <pavel@eazel.com>

	* libnautilus-extensions/nautilus-drag.c:
	(nautilus_drag_default_drop_action),
	(nautilus_drag_drop_action_ask):
	Clean fix up action handling - respect suggested actions, handle
	actions better if they are different than GDK_ACTION_COPY and GDK_ACTION_MOVE.

	* libnautilus-extensions/nautilus-drag.c:
	(nautilus_drag_default_drop_action):
	Fix a crash in the new drop context menu when Cancel gets selected.
	
	* libnautilus-extensions/nautilus-drag.h:
	* libnautilus-extensions/nautilus-icon-container.c:
	(start_stretching), (button_release_event), (motion_notify_event),
	(show_context_menu_callback), (handle_icon_button_press):
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(nautilus_icon_container_receive_dropped_icons),
	(nautilus_icon_container_get_drop_action):
	* libnautilus-extensions/nautilus-icon-private.h:
	Fix 1551 - Make drop context menu show up when drag started with
	right click. Turned out to be a bit harder than estimated.
	To do this I made the right-click context menu come up with a slight
	delay - a drag may be started if the mouse is moved before the delay
	expires.
	Renamed and reworked the click/drag state machine a bit.

2000-07-07  Ali Abdin  <aliabdin@aucegypt.edu>

	* components/html/ntl-web-browser.c:
	(main) Ack! The gtkhtml crew just removed gtkhtmllib_init - Reverting
	my change (must read cvs-commits before commiting)

2000-07-07  Ali Abdin  <aliabdin@aucegypt.edu>

	* components/html/ntl-web-browser.c:
	(main) Add gtkhtmllib_init to make gtkhtml work again (it still needs
	 a lot of love though but at least not it works)

2000-07-07  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c:
	(load_specific_image), (nautilus_icon_factory_make_thumbnails):
	made it load custom icons for remote files, by using nautilus_gdk_pixbuf_load
	instead of gdk_pixbuf_new_from_file in load_specific_image.  Also, made 
	thumbnailing of svg files work by testing for the case and handling it in make_thumbnails.
	
2000-07-06  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-property-browser.c: (make_drag_image),
	(make_color_label), (make_properties_from_xml_node):
	made the color properties have a label like Susan's design plus
	miscellaneous clean-ups
	
2000-07-06  Gene Z. Ragan  <gzr@eazel.com>
	
	Fixed bug 1571, Need titles in history list instead
	of just URIs.

	This was a result of sharing the NautilusWindow history list
	information over CORBA.

	* libnautilus/nautilus-view-component.idl:
	Create new interface, Nautilus::HistoryFrame
	Interface has method to get a sequence of 
	history information.  This sequence contains
	structs that contain uri and name history 
	information.

	* src/Makefile.am:
	Added new file, NautilusHistoryFrame.c, to makefile.
	 
	* src/nautilus-history-frame.c:
	* src/nautilus-history-frame.h:
	(impl_Nautilus_HistoryFrame__destroy),
	(impl_Nautilus_HistoryFrame__create),
	(impl_Nautilus_HistoryFrame_get_history_list):
	New files that implements the functionality of the 
	Nautilus::HistoryFrame.

	* components/history/nautilus-history-view.c:
	(get_bookmark_from_row), (get_uri_from_row),
	(history_view_frame_call_begin), (history_view_frame_call_end),
	(history_view_update_icons), (get_history_list),
	(hyperbola_navigation_history_load_location),
	(hyperbola_navigation_history_select_row), (do_destroy),
	(make_obj), (main):
	Changes in the way that the history list is maintained.
	We now use the info that is received by asking the view frame
	for history information.
		
	* src/nautilus-view-frame.c:
	* src/nautilus-view-frame.h:
	(nautilus_view_frame_initialize_class),
	(nautilus_view_frame_load_client),
	(nautilus_view_frame_get_history_list):
	Added new signal GET_HISTORY_LIST and new
	function that emits the signal when called.

	* src/nautilus-window.c:
	(nautilus_window_connect_view):
	Create and add history interface to connected view.
	
	(nautilus_window_get_history_list_callback):
	New signal handler that connects to the get_history_list
	signal of NautilusViewFrame.  Returns a Nautilus_HistoryList
	created from the history list data.
	
2000-07-06  Michael Engber  <engber@eazel.com>

	* src/nautilus-window.c: (nautilus_window_class_init):
	Added fixme for redundant parent_class slot (pavel's
	request since we puzzled over this for some time)

2000-07-06  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-icon-dnd.c:
	(nautilus_icon_container_get_drop_action):
	Fix a problem that I introduced with my recent change to 
	drag&drop - colors, background images, etc would no longet
	get accepted in the icon view.
	Made nautilus_icon_container_get_drop_action only check
	the selection list and the drop target if the dragged data
	is a file operation drag&drop.

2000-07-06  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar-tabs.c: (nautilus_sidebar_tabs_remove_view):
	fixed long-standing bug where sidebar tabs would invoke the
	wrong views, by decrementing subsequent indexes when a panel is
	removed.
	* src/nautilus-sidebar.c: (nautilus_sidebar_initialize),
	(nautilus_sidebar_activate_panel),
	(nautilus_sidebar_deactivate_panel),
	(nautilus_sidebar_update_buttons):
	fixed problem of sidebar views changing their position as you
	navigate, and also gave them more space, by hiding the title
	info when a sidebar view is showing, allowing them to take up
	the entire space of the sidebar.
	* libnautilus-extensions/nautilus-horizontal-splitter.c:
	reduced the slop threshold and time threshold for toggling the
	sidebar so it doesn't happen accidentally
	* icons/backgrounds.png:
	* icons/colors.png:
	* icons/emblems.png:
	new images from Susan
	
2000-07-06  Michael Engber  <engber@eazel.com>

	* src/nautilus-zoom-control.c: (nautilus_zoom_control_destroy):
	NULL out preferred_zoom_levels in the destroy method (after
	freeing them) in case someone looks at them before finalize.

2000-07-05  Robin * Slomkowski <rslomkow@eazel.com>

	* nautilus.spec.in: removed refernce to some *.svg files
	and changed the dependancies

2000-07-05  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_initialize_class), (nautilus_list_button_press),
	(nautilus_list_button_release), (nautilus_list_drag_start):
	* libnautilus-extensions/nautilus-list.h:
	* src/file-manager/fm-list-view.c: (fm_list_drag_data_get),
	(fm_list_get_drag_pixmap), (create_list):
	Fixed 1095 - need to draw dragged icon when dragging from list view.

	* libnautilus-extensions/nautilus-gtk-extensions.c:
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	(nautilus_gtk_marshal_NONE__POINTER_INT_POINTER_POINTER):
	I swore the next time I need a new marshaling function, I'll 
	set Nautilus to auto-generate them like the gtk build and here
	I am adding another one manually.

2000-07-05  Maciej Stachowiak  <mjs@eazel.com>

	* libnautilus-extensions/nautilus-search-async.c: include
	<libmedusa/medusa-search-service-private.h> until I change this to
	use the new API.

2000-07-05  Eskil Heyn Olsen  <eskil@eazel.com>

	* po/POTFILES.in:
	Removed ntl-web-search.c since it's no longer in the codebase.
	
	* components/rpmview/nautilus-rpm-view-install.c:
	(nautilus_rpm_view_install_package_callback):
	Fixed bug... eh, some number.
	
	* components/services/install/command-line/Makefile.am:
	* components/services/install/command-line/eazel-alt-install-corba.c:
	(set_parameters_from_command_line), (main):
	* components/services/install/command-line/eazel-gen-xml.c: (main):
	* components/services/install/command-line/eazel-uninstall.c:
	(uninstall_failed):
	* components/services/install/idl/trilobite-eazel-install.idl:
	* components/services/install/lib/eazel-install-corba-callback.c:
	(impl_dep_check), (impl_install_progress),
	(impl_uninstall_progress), (impl_install_failed),
	(impl_uninstall_failed), (eazel_install_callback_query):
	* components/services/install/lib/eazel-install-corba-types.c:
	(corba_packagedatastruct_from_packagedata),
	(packagedata_from_corba_packagedatastruct),
	(corba_category_list_from_categorydata_list),
	(categorydata_list_from_corba_categorystructlist),
	(xmlnode_from_packageData), (xml_from_packagedata):
	* components/services/install/lib/eazel-install-corba-types.h:
	* components/services/install/lib/eazel-install-corba.c:
	(impl_Eazel_Install_uninstall_packages),
	(impl_Eazel_Install_query), (eazel_install_get_epv):
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_class_initialize),
	(eazel_install_emit_install_progress_default),
	(eazel_install_emit_install_failed_default),
	(eazel_install_emit_uninstall_failed_default),
	(eazel_install_emit_dependency_check_default):
	* components/services/install/lib/eazel-install-protocols.c:
	(eazel_install_fetch_package):
	* components/services/install/lib/eazel-install-query.c:
	(eazel_install_simple_query):
	* components/services/install/lib/eazel-install-query.h:
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_new_packages), (download_all_packages),
	(uninstall_packages), (do_rpm_install),
	(eazel_install_load_rpm_headers), (eazel_install_free_rpm_system),
	(eazel_install_prepare_rpm_system),
	(eazel_install_fetch_rpm_dependencies), (print_package_list),
	(eazel_install_do_dependency_check), (eazel_install_ensure_deps),
	(eazel_uninstall_upward_traverse),
	(eazel_uninstall_downward_traverse), (eazel_uninstall_globber):
	* components/services/install/lib/eazel-install-types.c:
	(packagedata_destroy_foreach), (rpmname_from_packagedata),
	(packagedata_equal), (packagedata_status_enum_to_str),
	(packagedata_status_str_to_enum):
	* components/services/install/lib/eazel-install-types.h:
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(parse_package), (parse_category), (parse_shared),
	(parse_memory_xml_package_list), (parse_local_xml_package_list):
	* components/services/install/lib/eazel-install-xml-package-list.h:

	Muy work. Worked around orbit-idl's shortcommings, by packing the
	dependency trees for the (un)install_failed callbacks into
	xml. Uninstall now does the upwards traversel to detect packages
	that will break. Still not the downwards though. Installing a
	packge using the filename no longer results in a query for the
	file to the server, although we still download all missing deps.

	Most of the corbafication stuff is done.
	
	* nautilus-installer/src/Makefile:
	* nautilus-installer/src/installer.c: (installer):

	Compiles again. 

2000-07-05  Darin Adler  <darin@eazel.com>

	* components/services/trilobite/sample/service/.cvsignore:
	Stop ignoring some no-longer-generated files.

2000-07-05  Darin Adler  <darin@eazel.com>

	* check-headers-in-Makefile.pl: Wrote a script to check that the
	Makefile.am file matches what's actually in the directories.
	
	* components/html/main.c: Obsolete file.
	* components/services/time/command-line/Makefile.am: Removed
	mention of nonexistent trilobite-eazel-sample-service-common.c.
	* components/services/time/nautilus-view/Makefile.am: Removed
	mention of nonexistent trilobite-eazel-sample-service-common.c.
	* libnautilus-extensions/nautilus-icon-grid.c: Obsolete file.
	* libnautilus-extensions/nautilus-icon-grid.h: Obsolete	file.
	* nautilus-installer/src/Makefile.am: Fixed typo; it said
	"installer h" instead of "installer.h".
	* src/Makefile.am: Added nautilus-search-bar-private.h.
	* src/file-manager/fm-directory-list.h: Obsolete file.

2000-07-05  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-user-level-manager.c:
	(user_level_manager_new):
	Initialize gconf if needed right before creating a gconf_client.
	
	* src/nautilus-first-time-druid.c: (user_level_selection_changed),
	(set_up_user_level_page):
	Set the user level when toggled by the user.  Also make sure the
	initiali user level is correct.
	
2000-07-05  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-first-time-druid.c: (druid_finished),
	(nautilus_first_time_druid_show):
	made it launch services sign-up on "finish" if the
	user selected that.
	* src/nautilus-sidebar-title.c: (update_icon):
	At Susan request, used a larger icon in the sidebar
	
2000-07-05  Darin Adler  <darin@eazel.com>

	* components/music/nautilus-music-view.c: (fetch_play_time):
	Fix a divide-by-zero problem.
	(play_status_display), (slider_moved_callback),
	(slider_release_callback): Added FIXMEs at other possible
	divide-by-zero problems where I am less sure what the solution is.
	* libnautilus-extensions/nautilus-directory-async.c:
	(allow_metafile), (nautilus_directory_request_read_metafile),
	(nautilus_directory_request_write_metafile): Disable metafile
	reading and writing for "pipe:" URIs for now. This turns off the
	creation of alternate metafiles too. Hope this turns out to be
	good.
	(start_monitoring_file_list): Fixed a wrong assert.
	* libnautilus-extensions/nautilus-gnome-extensions.c:
	(nautilus_gnome_canvas_fill_with_gradient): Fixed a divide by zero
	bug in here.
	* src/file-manager/fm-icon-view.c: (fm_icon_view_destroy),
	(directory_view_font_family_changed_callback),
	(fm_icon_view_initialize): Changed spelling of "familiy" to the more
	standard "family".
	* src/nautilus-application.c: (nautilus_application_startup): Put
	in some more verbose detailed error messages; we'll have to do more
	iteration on these.

2000-07-05  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c,h:
	(nautilus_icon_factory_get_pixbuf_for_file),
	(nautilus_icon_factory_get_pixmap_and_mask_for_file):
	added modifier parameter to icon factory high level routines
	* components/tree/nautilus-tree-view.c:
	(nautilus_tree_view_insert_file):
	added extra parameter to get_pixmap call
	* src/file-manager/fm-list-view.c: (install_row_images):
	added extra parameter to get_pixmap call
	* src/file-manager/fm-properties-window.c:
	(get_pixmap_and_mask_for_properties_window):
	added extra parameter to get_pixmap call
	* icons/eazel/Makefile.am:
	* icons/eazel/i-directory-accept.svg:
	removed the .svg open folder, added bitmap ones
	changed the folder icons in eazel theme to Susan's new one
	* src/nautilus-sidebar-title.c: (update_icon):
	use the open folder in the sidebar
	
2000-07-05  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_get_sidebar_panel_view_identifiers):
	Remove an obsolete FIXME.
	
2000-07-05  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c,
	* libnautilus-extensions/nautilus-icon-container.h:
	(destroy), (nautilus_icon_container_initialize),
	(nautilus_icon_container_new),
	(nautilus_icon_container_set_label_font_for_zoom_level),
	(nautilus_icon_container_set_single_click_mode):
	Implement missing set_single_click_mode function.

	Its up to users of this widget to setup click policy and other
	attributes. We shouldnt peek/poke nautilus specific preferences
	in the icon container widget.
	
	* libnautilus-extensions/nautilus-list.c:
	* libnautilus-extensions/nautilus-list.h,
	(nautilus_list_set_single_click_mode), (nautilus_list_initialize),
	(nautilus_list_destroy), (nautilus_list_clear):
	Implement missing set_single_click_mode function.

	Its up to users of this widget to setup click policy and other
	attributes. We shouldnt peek/poke nautilus specific preferences
	in the list widget.
	
	* src/file-manager/fm-icon-view.c: (fm_icon_view_destroy),
	(text_attribute_names_changed_callback),
	(click_policy_changed_callback),
	(anti_aliased_mode_changed_callback), (fm_icon_view_initialize),
	(fm_icon_view_update_click_mode),
	(fm_icon_view_update_anti_aliased_mode), (create_icon_container):
	Keep track of changes in preferences that affect the icon
	container and update it when needed.

	* src/file-manager/fm-list-view.c: (fm_list_view_initialize_class),
	(fm_list_view_initialize), (fm_list_view_destroy), (create_list),
	(update_icons), (fm_list_view_update_click_mode),
	(click_policy_changed_callback):
	Keep track of changes in preferences that affect the list and
	update it when needed.

2000-07-05  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c,
	* libnautilus-extensions/nautilus-icon-container.h:
	(nautilus_icon_container_set_label_font_for_zoom_level):
	New function to set the font for a zoom level.

	(nautilus_icon_container_initialize),
	Initialize to fonts to a well known font.  Dont look at font
	preferences here.  Fonts should be suppied by the icon container
	user. 

	* src/file-manager/fm-icon-view.c: 
	(fm_icon_view_update_icon_container_fonts),
	New function to update the icon container's zoom level specific
	fonts.
	
	(directory_view_font_family_changed_callback),
	(fm_icon_view_initialize),
	(fm_icon_view_destroy),
	Keep track of font family preference changes and update the icon
	container fonts as needed.
	
	(create_icon_container):
	Update the fonts for the first time when the icon container is
	created. 
	
2000-07-05  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-string-picker.c:
	(nautilus_string_picker_initialize_class),
	(nautilus_string_picker_initialize),
	(nautilus_string_picker_destroy), (option_menu_activate_callback),
	(nautilus_string_picker_set_string_list),
	(nautilus_string_picker_get_text),
	(nautilus_string_picker_set_text):
	* libnautilus-extensions/nautilus-string-picker.h:
	Changed string picker to use option menus instead of combo boxes.
	
	* test/test-nautilus-widgets.c: (test_string_picker),
	(string_picker_changed_callback):
	Changed widget test program to exercise more string picker
	functions. 
	
2000-07-05  Ramiro Estrugo  <ramiro@eazel.com>

	* components/services/install/command-line/.cvsignore:
	Ignore generated files.
	
2000-07-05  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/test-nautilus-preferences.c:
	* libnautilus-extensions/test-nautilus-widgets.c:
	* libnautilus-extensions/test-preferences.c:
	Moved widgets and preferences test to nautilus/test.
	
	* test/.cvsignore:
	* test/Makefile.am:
	* test/test-nautilus-preferences.c: (main),
	(test_preferences_item), (test_preferences_group),
	(create_enum_item), (register_global_preferences):
	* test/test-nautilus-widgets.c: (main), (test_radio_group),
	(test_caption_table), (test_string_picker), (test_text_caption),
	(test_authenticate_boink_callback),
	(string_picker_changed_callback), (text_caption_changed_callback),
	(test_password_dialog), (test_radio_changed_callback),
	(test_caption_table_activate_callback):
	Ressurect my widgets/preferences test over here.  They got whacked
	in the nautilus-widgets -> libnautilus-extensions renamings.
	
2000-07-05  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-directory.c:
	(construct_alternate_metafile_uri):
	* libnautilus-extensions/nautilus-file-utilities.c:
	(nautilus_make_path), (nautilus_get_user_directory),
	(nautilus_get_desktop_directory),
	(nautilus_get_user_main_directory),
	(nautilus_get_pixmap_directory):
	* libnautilus-extensions/nautilus-file-utilities.h:
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_register_for_ui):
	* libnautilus-extensions/nautilus-icon-factory.c:
	(get_themed_icon_file_path):
	* libnautilus-extensions/nautilus-preferences-item.c:
	(add_icon_themes):
	* src/file-manager/fm-properties-window.c: (get_property_names):
	* src/nautilus-application.c:
	(nautilus_application_check_user_directories):
	* src/nautilus-bookmark-list.c:
	(nautilus_bookmark_list_get_file_path):
	* src/nautilus-desktop-window.c: (nautilus_desktop_window_new):
	* src/nautilus-first-time-druid.c: (druid_finished):
	* src/nautilus-property-browser.c:
	(nautilus_property_browser_drag_data_get), (make_drag_image),
	(remove_color), (remove_background), (remove_emblem),
	(get_xml_path), (add_background_to_browser), (add_color_to_file),
	(emblem_dialog_clicked), (make_properties_from_directory):
	Change file utilities special directory access functions to always
	return allocated strings.  Change all callers to match the new
	functions and free the results.

	Also change the file utilities functions to always create the
	special directories if needed.
	
2000-07-05  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-global-preferences.c:
	(compare_view_identifiers), (global_preferences_create_dialog):
	Sort the sidebar panel names.
	
2000-07-05  Ramiro Estrugo  <ramiro@eazel.com>

	* components/Makefile.am:
	Dont install the currently broken components (websearch)
	
	* components/help/Makefile.am:
	* components/help/help-contents.oafinfo:
	* components/help/help-factory.oafinfo:
	* components/help/help-index.oafinfo:
	* components/help/help-search.oafinfo:
	* components/help/hyperbola.oafinfo:
	Split the oafinfo for help components into pieces so we can
	control which get intalled and which dont (like the broken onces)

	* configure.in:
	Fix a small dumb typo.
	
2000-07-05  J Shane Culpepper  <pepper@eazel.com>

	* components/services/startup/nautilus-view/nautilus-service-startup-view.c:
	(generate_startup_form):
	More changes to the progress meter.

2000-07-05  Pavel Cisler <pavel@eazel.com>

	* libnautilus-extensions/nautilus-drag.c:
	(nautilus_drag_modifier_based_action),
	(nautilus_drag_drop_action_ask):
	* libnautilus-extensions/nautilus-drag.h:
	* libnautilus-extensions/nautilus-icon-container.c:
	(motion_notify_event):
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(nautilus_icon_container_receive_dropped_icons),
	(nautilus_icon_dnd_init):
	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_initialize), (nautilus_list_drag_start):
	* src/file-manager/fm-list-view.c: (fm_list_handle_dropped_icons):
	Did most of bug 1371:
	Implemented a drop context menu that allows users to choose between
	Copy, Move and link.
	Added the GDK_ACTION_ASK selector and added support for it.

2000-07-04  Andy Hertzfeld  <andy@eazel.com>

	First cut at the first-time preferences druid.  It's still
	not hooked-up yet, and it's appearance needs some work.
	
	* libnautilus-extensions/nautilus-file-utilities.c,h:
	(nautilus_user_main_directory_exists):
	added routine to test if the user main directory has been created
	* src/nautilus-application.c: (nautilus_application_startup):
	if the user main directory hasn't been created yet, run the
	first time druid instead of showing a Nautilus window.
	* src/Makefile.am:
	added new files: nautilus-first-time-druid.c and .h
	* src/nautilus-first-time-druid.c,h: (druid_cancel),
	(druid_finished), (set_up_background),
	(user_level_selection_changed), (signup_selection_changed),
	(set_up_user_level_page), (set_up_service_signup_page),
	(nautilus_first_time_druid_show):
	new, first-time druid asks for user level and service signup.
	
2000-07-04  J Shane Culpepper  <pepper@eazel.com>

	* components/services/startup/nautilus-view/nautilus-service-startup-view.c:
	(generate_startup_form), (show_feedback),
	(generate_form_title), (service_load_location_callback):
	More work on the progress meter for bootstraping and various ui
	enhancements.

2000-07-04  Pavel Cisler <pavel@eazel.com>

	* src/file-manager/dfos-xfer.c: (new_folder_xfer_callback):
	Fix 1042 - "untitled folder" will not work on file systems with
	8.3 names. Added code that handles GNOME_VFS_ERROR_NAME_TOO_LONG
	and supplies a name in the 8.3 scheme instead.
	
2000-07-04  Pavel Cisler <pavel@eazel.com>

	* src/file-manager/dfos-xfer-progress-dialog.c:
	* src/file-manager/dfos-xfer-progress-dialog.h:
	(handle_xfer_ok),
	(fs_xfer), (fs_move_to_trash), (fs_delete), (fs_empty_trash):
	* src/file-manager/dfos-xfer-progress-dialog.c:
	(dfos_xfer_progress_dialog_clear):
	Fixed 1215 - inter-volume move now removes the source files.
	Made it so that when an inter-volume copy has ended and source files
	are removed, the progress dialog updates. Added a new cleanup phase
	string.

	* src/file-manager/dfos-xfer-progress-dialog.c:
	(dfos_xfer_progress_dialog_new_file),
	(set_text_unescaped_trimmed):
	Added code to unescape paths in progress dialogs.
	
	* src/file-manager/dfos-xfer.c:
	* src/file-manager/dfos-xfer.h:
	(nautilus_convert_to_unescaped_string_for_display),
	(handle_xfer_vfs_error), (handle_xfer_overwrite):
	Added code to unescape paths in error dialogs.
	
	* libnautilus-extensions/nautilus-drag.c:
	(nautilus_drag_default_drop_action),
	(nautilus_drag_modifier_based_action):
	* libnautilus-extensions/nautilus-drag.h:
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(handle_nonlocal_move), (nautilus_icon_container_find_drop_target),
	(nautilus_icon_container_receive_dropped_icons),
	(nautilus_icon_container_get_drop_action), (drag_motion_callback):
	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_drag_motion):
	Reworked a whole lot to allow me to update the default copy action
	based on the drag&drop context - an inter-volume drag&drop will now
	suggest a copy as a default.
	Moved out more sharable code into nautilus-drag.c.
	Added a common routine for figuring out the drop target.
	
	* src/file-manager/fm-directory-view.c: (fm_directory_is_trash),
	(fm_directory_can_move_to_trash):
	Fixed a bunch of asserts caused by unreffing NULL uris.

2000-07-04  Michael Meeks  <michael@helixcode.com>

	* libnautilus-extensions/bonobo-stream-vfs.c (vfs_read): update
	for new bonobo code; why is this code duplicated here in a worse
	condition to that in Bonobo/storage-modules ?

2000-07-04  J Shane Culpepper  <pepper@eazel.com>

	* components/services/startup/nautilus-view/icons/Makefile.am:
	components/services/startup/nautilus-view/nautilus-service-startup-view.c:
	(generate_startup_form), (progress_timeout_cb),
	(go_to_uri), (generate_form_title):

	Added the watch icon and a fake progress meter.  Still need to get
	the progress meter working right and work on the layout.

2000-07-03  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar-tabs.c:
	(nautilus_sidebar_tabs_load_theme_data),
	(nautilus_sidebar_tabs_destroy), (draw_tab_piece),
	(draw_one_tab_themed), (draw_or_hit_test_all_tabs),
	(nautilus_sidebar_tabs_expose):
	more work on the themed tabs in the arlo theme
	* icons/arlo/arlo.xml:
	added more tab_piece rectangles
	
2000-07-03  J Shane Culpepper  <pepper@eazel.com>

	* components/services/login/nautilus-view/nautilus-login-view.c:
	(generate_login_form), (login_button_cb), (maintenance_button_cb),
	(go_to_uri), (generate_form_title):

	Finishing up the new ui for the login screen.  Bug # 1004.

2000-07-03  Maciej Stachowiak  <mjs@eazel.com>

	* components/tree/nautilus-tree-view.c
	(nautilus_tree_view_initialize): Only show scroll bars when needed
	in tree view.

	* components/tree/nautilus-tree-view.c:
	(tree_expand_callback): constness fixes
	(nautilus_tree_view_initialize, tree_select_row_callback):
	Navigate to selected location on row selection.

2000-07-03  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar-tabs.c: (draw_or_hit_test_all_tabs):
	fixed bug where themed tabs weren't stacking correctly.  Fixed by
	using the actual tab height instead of the constant used by the
	default.
	* icons/arlo/sidebar_tab_pieces.png:
	replaced with newer version that has a background and edge piece.
	
2000-07-03  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar-title.c:
	(nautilus_sidebar_title_initialize),
	(nautilus_sidebar_title_destroy), (nautilus_sidebar_title_new),
	(set_widget_color), (nautilus_sidebar_title_theme_changed):
	made the sidebar title text color themable.
	* icons/arlo/arlo.xml:
	made the arlo theme use white text for the sidebar title
	
2000-07-03  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/lib/Makefile.am:
	Ensuring rpm build

2000-07-03  Seth Nickell  <seth@eazel.com>

	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_permissions_as_string),
	(nautilus_file_is_symbolic_link):
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_name_for_file):
	Necessary to make Nautilus compile after changing 
	GNOME_VFS_FILE_TYPE_BROKEN_SYMLINK to GNOME_VFS_FILE_TYPE_SYMBOLIC_LINK
	and removing the existing flag. See bug 1547 for more information on
	breakages in the way Nautilus handles symbolic links (caused by the
	GnomeVFS changes) such as detecting them in the first place.

2000-07-03  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-background.c:
	(nautilus_background_draw_aa):
	implemented n-point gradients at Arlo's request.  Right now,
	they are only implemented for anti-aliased mode.
	* icons/arlo/arlo.xml:
	made the sidebar use a 3-point gradient

2000-07-03  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/bonobo-stream-vfs.c:
	(bonobo_stream_vfs_class_init), (create_bonobo_stream_vfs):
	Fixed problem with previous change to this file.  Allocated 
	a static epv.  Assigned this epv to the servants epv and then
	alocated the individual elements in the structure.

2000-07-03  Pavel Cisler <pavel@eazel.com>

	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_drag_start), (nautilus_list_motion):
	Start adding support for dislaying dragged icon while dragging
	in a list view.

2000-07-02  J Shane Culpepper  <pepper@eazel.com>

	*
	components/services/startup/nautilus-view/nautilus-service-startup-
	view.c:
	*
	components/services/summary/nautilus-view/nautilus-summary-view.c:
	(generate_summary_form), (generate_form_title):

	Making summary view "I am just a view" until I can get the actual
	widget finished.

2000-07-02  Pavel Cisler <pavel@eazel.com>

	* components/help/help-method.c: (convert_file_to_uri):
	Make the help component build properly -- convert the call
	gnome_vfs_mime_type_of_file to the new 
	gnome_vfs_get_file_mime_type.
	
	* components/help/Makefile.am:
	Turn on -Werror that would have caught the problem earlier.


2000-07-02  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar-tabs.c: (parse_rectangle_list),
	(nautilus_sidebar_tabs_load_theme_data),
	(nautilus_sidebar_tabs_initialize),
	(nautilus_sidebar_tabs_destroy), (draw_one_tab_plain),
	(draw_tab_piece), (draw_one_tab_themed),
	(draw_or_hit_test_all_tabs), (nautilus_sidebar_tabs_expose):
	made the sidebar tabs themable and implemented arlo-style tabs
	in the arlo theme.  This isn't finished yet, because I still have
	some details to work out with Arlo.
	* icons/arlo/arlo.xml:
	added sidebar tab stuff to the arlo theme
	* libnautilus-extensions/nautilus-theme.c,h:
	(nautilus_theme_get_image_path):
	added a routine to access themed images
	* src/nautilus-property-browser.c: (make_category_link):
	made it access pixmaps with nautilus_pixmap_file instead of gnome_pixmap_file
	* data/browser.xml:
	removed the "nautilus" from image references
	
2000-07-02  J Shane Culpepper  <pepper@eazel.com>

	* components/services/inventory/lib/.cvsignore:
	* components/services/vault/lib/.cvsignore:

	Fixing cvsignores.  I always forget that.

2000-07-02  J Shane Culpepper  <pepper@eazel.com>

	* components/services/Makefile.am:
	* components/services/login/nautilus-view/nautilus-login-view.c:
	(generate_form_title):
	* components/services/startup/lib/Makefile.am:
	* components/services/startup/lib/eazel-register.c:
	* components/services/startup/lib/eazel-register.h:
	* components/services/startup/nautilus-view/Makefile.am:
	* components/services/startup/nautilus-view/icons/Makefile.am:
	* components/services/startup/nautilus-view/main.c:
	(service_object_destroyed), (service_make_object), (main):
	*
	components/services/startup/nautilus-view/nautilus-service-startup-
	view.c: (generate_startup_form), (go_to_uri),
	(generate_form_title),
	(nautilus_service_startup_view_initialize_class),
	(nautilus_service_startup_view_initialize),
	(nautilus_service_startup_view_destroy),
	(nautilus_service_startup_view_get_nautilus_view), (is_location),
	(nautilus_service_startup_view_load_uri),
	(service_load_location_callback):
	*
	components/services/startup/nautilus-view/nautilus-service-startup-
	view.h:

	Have all of the eazel: views hooked into the build now.  Most of the
	backend parsing of eazel:login, eazel:inventory, eazel:summary,
	eazel:time, eazel:startup.  Most of these views don't look very good.
	That's the next task.

2000-07-01  Maciej Stachowiak  <mjs@eazel.com>

	* components/tree/main.c (main): Remove unnecessary debugging
	statement.
	
	* components/tree/nautilus-tree-view.c
	(nautilus_tree_view_insert_file): Partly fix bugzilla task 1524 -
	show icons in tree view. Still need to

2000-07-01  J Shane Culpepper  <pepper@eazel.com>

	* components/services/install/command-line/.cvsignore:
	* components/services/install/lib/.cvsignore:
	* components/services/login/lib/.cvsignore:
	* components/services/summary/lib/.cvsignore:

	cvsignore fixes.

2000-07-01  J Shane Culpepper  <pepper@eazel.com>

	* components/services/inventory/lib/Makefile.am:
	* components/services/inventory/lib/eazel-inventory-shared.c:
	(add_package_info), (read_proc_info), (add_info), (add_io_info),
	(add_hardware_info), (synchronize_configuration_metafile),
	(update_configuration_metafile), (create_configuration_metafile):
	* components/services/inventory/lib/eazel-inventory-shared.h:
	* components/services/inventory/nautilus-view/Makefile.am:
	*
	components/services/inventory/nautilus-view/nautilus-inventory-view
	.c: (generate_inventory_form), (gather_config_button_cb),
	(register_later_cb), (make_http_post_request), (go_to_uri),
	(get_home_uri), (update_now):

	Moving the inventory view to its new home to make way for the new
	bootstrap startup view.

2000-07-01  J Shane Culpepper  <pepper@eazel.com>

	* components/services/inventory/nautilus-view/Makefile.am:
	* components/services/inventory/nautilus-view/main.c:
	(inventory_object_destroyed), (inventory_make_object), (main):
	*
	components/services/inventory/nautilus-view/nautilus-inventory-view
	.c: (generate_inventory_form), (entry_changed_cb),
	(inventory_button_cb), (maintenance_button_cb), (show_feedback),
	(generate_form_title), (nautilus_inventory_view_initialize_class),
	(nautilus_inventory_view_initialize),
	(nautilus_inventory_view_destroy),
	(nautilus_inventory_view_get_nautilus_view),
	(nautilus_inventory_view_load_uri),
	(inventory_load_location_callback):
	*
	components/services/inventory/nautilus-view/nautilus-inventory-view
	.h:
	*
	components/services/inventory/nautilus-view/nautilus-inventory-view
	.oafinfo:
	* components/services/login/nautilus-view/Makefile.am:
	* components/services/login/nautilus-view/main.c:
	(login_make_object):
	* components/services/summary/nautilus-view/Makefile.am:
	* components/services/summary/nautilus-view/main.c:
	(summary_object_destroyed), (summary_make_object), (main):
	*
	components/services/summary/nautilus-view/nautilus-summary-view.c:
	(generate_summary_form), (entry_changed_cb), (summary_button_cb),
	(maintenance_button_cb), (show_feedback), (generate_form_title),
	(nautilus_summary_view_initialize_class),
	(nautilus_summary_view_initialize),
	(nautilus_summary_view_destroy),
	(nautilus_summary_view_get_nautilus_view),
	(nautilus_summary_view_load_uri), (summary_load_location_callback):
	*
	components/services/summary/nautilus-view/nautilus-summary-view.h:
	*
	components/services/summary/nautilus-view/nautilus-summary-view.oaf
	info:

	Simple framework for inventory and summary views.  Minor fixes to
	login view.  All are clones of the same basic widget right now. I'll
	be adding the real widgets soon.

2000-06-30  Ramiro Estrugo  <ramiro@eazel.com>

	* src/nautilus-application.c: (display_installation_wizard),
	(nautilus_application_startup):
	Add code to display an installation wizard using the new druid.
	Its #ifdefed out until we do more real work on it.
	
2000-06-30  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in:
	* cut-n-paste-code/widgets/Makefile.am:
	Build the new nautilus druid.
	
2000-06-30  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in:
	* src/Makefile.am:
	Adding canvas pixbuf item check and flags, which are needed in
	order to use the nautilus druid.
	
2000-06-30  Ramiro Estrugo  <ramiro@eazel.com>

	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-edge.c:
	(nautilus_druid_page_edge_construct):
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-finish.c:
	(nautilus_druid_page_finish_configure_size),
	(nautilus_druid_page_finish_construct),
	(nautilus_druid_page_finish_set_logo),
	(nautilus_druid_page_finish_set_watermark):
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-standard.c:
	(nautilus_druid_page_standard_construct):
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-start.c:
	(nautilus_druid_page_start_construct):
	Update these items to properly use the canvas pixbuf beast.
	
2000-06-30  Ramiro Estrugo  <ramiro@eazel.com>

	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-edge.c:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-edge.h:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-finish.c:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-finish.h:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-standard.c:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-standard.h:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-start.c:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-start.h:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page.c:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page.h:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid.c:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid.h:
	Globally rename the GnomeDruid to NautilusDruid to prevent
	namespace clashing with the gnome-libs-1-0 druid.
	
2000-06-30  Ramiro Estrugo  <ramiro@eazel.com>

	* cut-n-paste-code/widgets/nautilus-druid/.cvsignore:
	* cut-n-paste-code/widgets/nautilus-druid/Makefile.am:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-edge.c:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-edge.h:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-finish.c:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-finish.h:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-standard.c:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-standard.h:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-start.c:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page-start.h:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page.c:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid-page.h:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid.c:
	* cut-n-paste-code/widgets/nautilus-druid/nautilus-druid.h:
	Importing the gnome-libs HEAD druid to the cut-n-paste toxic
	dump.  Arlofication will proceed.
	
2000-06-30  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-file-utilities.c:
	(nautilus_get_user_main_directory):
	use gnome_vfs_xfer instead of a 'cp' command to install the
	novice home directory.  This fixes bug 1285.
	
2000-06-30  Andy Hertzfeld  <andy@eazel.com>

	eliminated the separate toolbar icon theme; instead it's
	incorporated into the general theming mechanism
	
	* libnautilus-extensions/nautilus-global-preferences.h:
	got rid of NAUTILUS_PREFERENCES_TOOLBAR_ICON_THEME
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog),
	(global_preferences_register_for_ui):
	got rid of the toolbar_icon preference and the associated widgetry
	* libnautilus-extensions/nautilus-preferences-item.c,h:
	(preferences_item_construct), (preferences_item_create_theme):
	got rid of the preference item for the toolbar icon theme
	* src/nautilus-window-toolbars.c: (setup_button),
	(setup_toolbar_images), (nautilus_window_initialize_toolbars),
	(nautilus_window_toolbar_remove_theme_callback):
	use the general theming framework to determine the toolbar icons
	to use
	* icons/vector/vector.xml:
	made the vector theme use Susan's toolbar icons
	* libnautilus-extensions/nautilus-background.c:
	(nautilus_background_draw):
	a little bit of clean-up
		
2000-06-30  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/bonobo-stream-vfs.c:
	(create_bonobo_stream_vfs):
	A fix to make the setting of the vepv work.  The extern
	vepv is gone, so we now use the allocator functions.

2000-06-30  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-background.c:
	(nautilus_background_draw):
	fixed bug where the combine mode implemented last night wasn't
	working for normal drawables by setting the fake CanvasBuf flags
	properly.  Now the sidebar in the arlo theme is working.
	
2000-06-30  Fatih Demir	<kabalak@gmx.net>
	
	* acconfig.h: Added masses of undefs for the wrapping
		function ( as mentioned down ).

	* configure.in: If a Bzip2 is found, define the Bzip2
		wrapping functions vie AC_DEFINE to get it into
		 config.h, so the rpm-component and the other
		  Bzip2-based components should now compile with
		   the new Bzip2 versions without problems.
	
2000-06-30  Andy Hertzfeld  <andy@eazel.com>

	* configure.in:
	* data/backgrounds/Makefile.am:
	* icons/Makefile.am:
	* icons/arlo/.cvsignore:
	* icons/arlo/Makefile.am:
	* icons/arlo/arlo.xml:
	added a new theme for Arlo
	* libnautilus-extensions/nautilus-background.c,h:
	(nautilus_background_get_combine_mode),
	(nautilus_background_set_combine_mode), (nautilus_background_draw),
	(nautilus_background_draw_aa):
	added "combine" mode where it draws a background overlayed with a
	semi-transparent image.
	* libnautilus-extensions/nautilus-directory-background.c:
	(directory_changed_callback), (background_reset_callback):
	set up combine_mode if necessary
	* src/nautilus-property-browser.c:
	(make_properties_from_directory_path):
	don't display images whose name starts with "."
	* src/nautilus-sidebar.c: (background_reset_callback),
	(nautilus_sidebar_update_info):
	set up combine mode if necessary

2000-06-29  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/command-line/Makefile.am:
	* components/services/install/command-line/eazel-uninstall.c:
	(set_parameters_from_command_line), (progress_signal),
	(uninstall_failed), (dep_check), (create_package), (done), (main):
	* components/services/install/lib/Makefile.am:
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_uninstall_packages):
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(uninstall_packages), (uninstall_a_package), (do_rpm_uninstall),
	(eazel_install_prepare_rpm_system), (eazel_install_add_to_rpm_set),
	(eazel_install_add_to_set), (eazel_install_fetch_rpm_dependencies),
	(eazel_install_do_dependency_check), (eazel_install_ensure_deps),
	(eazel_uninstall_upward_traverse),
	(eazel_uninstall_downward_traverse), (eazel_uninstall_globber):
	Doing a lot of slashing in the uninstall part.
	
	* nautilus-installer/src/Makefile:
	This is still checked in, as the installer isn't part of the build
	tree.
	
2000-06-29  Pavel Cisler  <pavel@eazel.com>

	Fixed some memory leaks.
	
	* libnautilus-extensions/nautilus-mime-actions.c:
	(nautilus_mime_get_short_list_components_for_uri):
	Fix a leaked string.

	* src/nautilus-zoom-control.c:
	(nautilus_zoom_control_set_preferred_zoom_levels):
	Fix a leaky setter call.

	* test/Makefile.am:
	Add a make target for a leak checker tester.
	
	* test/nautilus-leak-checker.c:
	(nautilus_leak_allocation_record_init),
	(nautilus_leak_record_malloc), (nautilus_leak_record_realloc),
	(nautilus_leak_record_free), (print_one_leak),
	(nautilus_leak_print_leaks), (allocate_lots), (leak_mem2),
	(leak_mem), (main):
	* test/nautilus-leak-symbol-lookup.c:
	(nautilus_leak_print_symbol_address):
	Tweak the leak checker output a bit to make it more nicer and
	indicate the level of stack frame grouping.

	* src/nautilus-main.c: (print_leaks):
	Tweak the parameters a bit to print more leaks.

2000-06-29  Maciej Stachowiak  <mjs@eazel.com>

	* components/tree/Makefile.am: Add VFS_CFLAGS

	* components/tree/main.c (main): Initialize more libraries.
	
	* components/tree/nautilus-tree-view.h,
	components/tree/nautilus-tree-view.c: Many changes. The upshot is
	that basic tree loading now works, but many details remain to be
	fleshed out (individual bugs were filed on these).

	* libnautilus-extensions/nautilus-directory-async.c:
	(dequeue_pending_idle_callback), (directory_load_done): Try to
	emit done signal exactly once when a monitor load is complete. But
	I think this might be questionable, see below.

	* libnautilus-extensions/nautilus-directory-private.h,
	libnautilus-extensions/nautilus-directory.h,
	libnautilus-extensions/nautilus-directory.c: Add the
	"done_loading" signal for when a load initiated by monitoring is
	done. I just realized this does the wrong thing when more than one
	thing is monitoring at the same time (both get the signal), so
	maybe it should be changed to a callback function passed to
	nautilus_file_monitor_add, but that would be harder to implement.

	(nautilus_directory_emit_done_loading): Function so the async code
	can emit it.

2000-06-29  Ramiro Estrugo  <ramiro@eazel.com>

	* components/mozilla/Makefile.am:
	* components/mozilla/mozilla-preferences.cpp:
	* components/mozilla/mozilla-preferences.h:
	Add a small C wrapper for poking mozilla preferences.

	* components/mozilla/nautilus-mozilla-content-view.c:
	(nautilus_mozilla_content_view_initialize):
	Poke some interesting preferences.
	
	* configure.in:
	If the mozilla component is being built, add a check for the c++
	compiler which is needed by the mozilla preferences C wrapper.
	
2000-06-29  Ali Abdin <aliabdin@aucegypt.edu

	* components/help/Makefile.am: Install the libvfs-help.so module
	in the right place. Closes Bug #919. (will not work though
	if Nautilus prefix != gnome-vfs prefix (unless a fix goes into
	gnome-vfs))

	* components/websearch/ntl-web-search.c:
	(web_search_populate_engines): Fix to make it look in the right
	place (WEB_SEARCH_DATADIR "/standard.eng" instead of
	WEB SEARCH_DATADIR "/ntl-web-search/standard.eng")

2000-06-29  Ramiro Estrugo  <ramiro@eazel.com>

	* components/mozilla/nautilus-mozilla-content-view.oafinfo:
	Expose the fact that this component can grok file: and ftp: uris.
	
2000-06-29  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-directory-background.c,h:
	(directory_changed_callback),
	(nautilus_directory_background_is_set),
	(nautilus_connect_background_to_directory_metadata):
	added nautilus_directory_background_is_set, and some cleanups
	* src/file-manager/fm-directory-view.c: (compute_menu_item_info),
	(fm_directory_view_real_update_menus):
	used nautilus_directory_background_is_set to enable/disable item
	
2000-06-29  Pavel Cisler <pavel@eazel.com>

	* libnautilus-extensions/nautilus-icon-dnd.h:
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(nautilus_icon_dnd_init),
	(nautilus_icon_dnd_begin_drag), (drag_motion_callback),
	(drag_drop_callback):
	* libnautilus-extensions/nautilus-icon-container.c:
	(motion_notify_event), (key_press_event):
	Got rid of the crufty old way drag&drop motion used to handle
	updating the drop action.

	* libnautilus-extensions/nautilus-drag.h:
	* libnautilus-extensions/nautilus-icon-dnd.c:
	* libnautilus-extensions/nautilus-drag.c:
	(nautilus_drag_modifier_based_action):
	Moved to the common drag&drop file so I can share it
	between the list and icon view.
	
	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_initialize), (nautilus_list_motion),
	(nautilus_list_drag_motion):

	* libnautilus-extensions/nautilus-icon-dnd.c:
	(confirm_switch_to_manual_layout):
	Reformatted a bit.

2000-06-29  Rebecca Schulman  <rebecka@eazel.com>

	* src/nautilus-complex-search-bar.c:
	(nautilus_complex_search_bar_initialize_class),
	(nautilus_complex_search_bar_set_search_controls):
	Fixed assertion problem by adding set_search_controls
	method

2000-06-28  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-directory-background.c:
	(local_data_file_to_uri), (directory_changed_callback),
	(nautilus_directory_background_theme_changed),
	(background_reset_callback), (background_destroyed_callback),
	(nautilus_connect_background_to_directory_metadata):
	made directory backgrounds use the current theme to determine their
	default background.  Made reset restore the default background. Receive
	notification when the theme changes, and change the background if necessary.
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_real_merge_menus):
	removed the "reset background" menu item.
	* src/nautilus-sidebar.c: (map_local_data_file),
	(nautilus_sidebar_read_theme), (nautilus_sidebar_update_info):
	cleaned up dealing with local filenames
	* icons/vector/vector.xml:
	changed the main background of the vector theme

2000-06-28  Andy Hertzfeld  <andy@eazel.com>

	* components/music/mp3head.c,h: (get_bitrate), (get_mpgver),
	(get_stereo):
	integrated Erik Gustavsson's patches to make the slider
	work correctly at arbitrary bit-rates
	* components/music/nautilus-music-view.c:
	(nautilus_music_view_initialize), (strip_trailing_blanks),
	(fetch_song_info), (play_status_display), (play_current_file),
	(slider_moved_callback), (slider_release_callback),
	(nautilus_music_view_update_from_uri):
	more of Erik's patchs, plus made the music view use
	nautilus_directory_background to save code and to use the same
	background as the other views.
	* libnautilus-extensions/nautilus-directory-background.c:
	(background_destroyed_callback), (dummy_callback),
	(nautilus_connect_background_to_directory_metadata),
	(nautilus_connect_background_to_directory_metadata_by_uri):
	arranged for users of nautilus-directory-background to receive
	metadata, by call nautilus_directory_file_monitor_add and remove
	* src/file-manager/fm-list-view.c:
	removed an unused define for DEFAULT_BACKGROUND_COLOR

2000-06-28  Rebecca Schulman  <rebecka@eazel.com>

	* libnautilus-extensions/nautilus-search-uri.c:
	(nautilus_simple_search_criteria_to_search_uri):
	(add facility to make search uri's from simple
	search queries )
	* src/nautilus-complex-search-bar.c:
	(nautilus_complex_search_bar_initialize_class),
	(nautilus_complex_search_bar_initialize), (more_options_callback),
	(add_file_type_search_criterion_callback),
	(add_file_name_search_criterion_callback),
	(add_file_location_search_criterion_callback),
	(add_content_search_criterion_callback),
	(add_size_search_criterion_callback),
	(add_date_modified_search_criterion_callback),
	(add_notes_search_criterion_callback),
	(nautilus_complex_search_bar_get_location):
	added ability to add more criterion (still incomplete)
	* src/nautilus-complex-search-bar.h:
	* src/nautilus-search-bar-criterion.c:
	(nautilus_search_bar_criterion_file_type_new),
	(nautilus_search_bar_criterion_file_name_new),
	(nautilus_search_bar_criterion_location_new),
	(nautilus_search_bar_criterion_content_new),
	(nautilus_search_bar_criterion_size_new),
	(nautilus_search_bar_criterion_add_to_search_bar),
	(nautilus_search_bar_criterion_show):
	added code to actually create various search
	button criterion sets.
	* src/nautilus-search-bar-criterion.h:
	* src/nautilus-simple-search-bar.c:
	(nautilus_simple_search_bar_initialize_class),
	(nautilus_simple_search_bar_get_location),
	(editable_activated_callback):
	* src/nautilus-simple-search-bar.h:
	Updated so that the search location 
	is done correctly.  Adjustments to
	the nautilus-directory should
	be all that is needed to make all of
	this stuff work.
	* src/nautilus-switchable-search-bar.c:
	(nautilus_switchable_search_bar_initialize),
	(nautilus_switchable_search_bar_get_location),
	(nautilus_switchable_search_bar_set_search_controls):
	Some widget changes, and search get_location
	calls respective simple or complex search bar 
	get_location functions

2000-06-28  Michael Engber  <engber@eazel.com>

	* libnautilus/nautilus-zoomable.c:
	(nautilus_g_list_from_ZoomLevelList),
	(nautilus_ZoomLevelListBuffer_from_zoom_levels),
	(impl_Nautilus_Zoomable__get_preferred_zoom_level_list),
	(nautilus_zoomable_initialize_class), (nautilus_zoomable_set_arg),
	(nautilus_zoomable_get_arg),
	(nautilus_zoomable_new_from_bonobo_control):
	* src/nautilus-view-frame.c:
	(nautilus_view_frame_get_preferred_zoom_levels):
	* src/nautilus-zoom-control.c:
	(nautilus_zoom_control_class_initialize),
	(nautilus_zoom_control_destroy),
	(nautilus_zoom_control_initialize), (create_zoom_menu_item):
	Fixed 1497 - problems with freeing the CORBA returned preferred
	zoom level lists. Finally done with 1425 - decoupling the zoom
	control from insider knowledge of the icon/list views.

2000-06-28  Darin Adler  <darin@eazel.com>

	* components/music/nautilus-music-view.c:
	(nautilus_music_view_drag_data_received):
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(receive_dropped_tile_image):
	* src/nautilus-sidebar.c: (receive_dropped_uri_list):
	Changed to use new call that's for receiving dropped images.
	
	* src/nautilus-sidebar.c: (background_settings_changed_callback),
	(background_appearance_changed_callback),
	(background_reset_callback), (nautilus_sidebar_update_info):
	Changed signal handlers to use the normal form instead of
	connect_object. Changed the reset callback to stop the reset
	signal from going any further now that there's a default handler
	for reset.

	* libnautilus-extensions/nautilus-directory-background.c:
	(background_reset_callback): Add a call to stop the reset signal
	from going any further now that there's a default handler for
	reset.

	* libnautilus-extensions/nautilus-background.h:
	* libnautilus-extensions/nautilus-background.c:
	(nautilus_background_initialize_class),
	(nautilus_background_receive_dropped_background_image),
	(nautilus_background_set_tile_image_uri),
	(nautilus_background_reset), (nautilus_background_real_reset):
	Made nautilus_background_reset set the color and image to NULL by
	default instead of doing nothing. Also added a new call to receive
	a dropped background image and only pay attention to the special
	"reset" image name there instead of hacking it into
	_set_tile_image_uri itself.
	
	* libnautilus-extensions/nautilus-stock-dialogs.h:
	* libnautilus-extensions/nautilus-stock-dialogs.c:
	(find_message_label), (find_message_label_callback),
	(show_message_box), (show_ok_box), (nautilus_info_dialog),
	(nautilus_warning_dialog), (nautilus_error_dialog),
	(clicked_callback), (nautilus_error_dialog_with_details),
	(nautilus_yes_no_dialog): Change the API for stock dialogs
	to be a little simpler, getting rid of the separate parented
	variant. Also added a new dialog for errors that have a second
	more detailed error message.
	
	* libnautilus-extensions/nautilus-program-chooser.c:
	(nautilus_program_chooser_show_no_choices_message):
	* libnautilus-extensions/nautilus-program-choosing.c:
	(nautilus_launch_application_parented):
	* src/file-manager/fm-error-reporting.c:
	(fm_report_error_renaming_file), (fm_report_error_setting_group),
	(fm_report_error_setting_owner),
	(fm_report_error_setting_permissions):
	* src/nautilus-property-browser.c: (emblem_image_file_changed),
	(add_background_to_browser):
	* src/nautilus-window-manage-views.c:
	(handle_unreadable_location),
	(nautilus_window_end_location_change_callback),
	(report_content_view_failure_to_user),
	(report_sidebar_panel_failure_to_user):
	* src/nautilus-window-menus.c: (show_bogus_bookmark_window):
	Change to use new API for stock dialogs.
	
	* src/nautilus-application.c: (create_factory),
	(nautilus_application_initialize),
	(nautilus_application_check_user_directories),
	(nautilus_application_startup):
	Moved OAF registration to application_startup and added some
	error handling for the case where we have two copies of Nautilus.
	
	* libnautilus-extensions/nautilus-file.h: Move get_mapped_uri
	out of the "good part" of the header and add a FIXME.
	
	* components/services/install/lib/.cvsignore:
	Ignore some new generated files. Maybe some day I can get Eskil to
	make these himself as he adds new things.
	
2000-06-28  John Sullivan  <sullivan@eazel.com>

	* libnautilus-extensions/nautilus-file.c:
	(get_user_and_real_name_from_id):
	* src/file-manager/fm-properties-window.c:
	(create_owner_menu_item):
	Changed format of reporting username/real name
	to match Arlo's design.

2000-06-28  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-properties-window.c: (create_basic_page),
	(add_special_execution_flags), (create_permissions_page):
	Changed some layout and wording to match Arlo's design. More
	layout changes to come later.

	* src/nautilus-window-manage-views.c:
	(report_sidebar_panel_failure_to_user),
	(nautilus_window_update_state): Added this function as
	placeholder for potentially useful error message.

2000-06-28  John Sullivan  <sullivan@eazel.com>

	* src/nautilus-window-manage-views.c:
	(report_content_view_failure_to_user),
	(nautilus_window_update_state): Put up a dialog box
	when the content view fails. The dialog box tells the
	user they can switch to another view or go to another
	location.

2000-06-28  Andy Hertzfeld <andy@eazel.com>

	* icons/eazel/i-regular-12.png:
	* icons/eazel/i-regular-24.png:
	* icons/eazel/i-regular-36.png:
	* icons/eazel/i-regular.png:
	* icons/eazel/i-regular-72.png:
	* icons/eazel/i-regular-96.png:
	new document icons from Susan
	
2000-06-28  John Sullivan  <sullivan@eazel.com>

	Made the view-failure-handling code only execute
	when a view fails, instead of also executing during
	a normal quit. This is a starting point for putting
	some UI at the failure.

	* src/nautilus-window.c: 
	(nautilus_window_disconnect_view): New function to disconnect
	the signal handlers on a view that were established in
	nautilus_window_connect_view.
	(view_disconnect): foreach-style wrapper for _disconnect_view.
	(nautilus_window_destroy): Call _disconnect_view on each
	sidebar panel, and on the content view.
	(nautilus_window_connect_view): Added comment and updated
	for a name change.
	(nautilus_window_connect_content_view): Removed this wrapper
	for _connect_view, which no longer did anything other than
	call through.
	* src/nautilus-window-manage-views.c:
	(nautilus_window_view_failed): Renamed from
	"nautilus_window_view_destroyed" since it's (now) only
	called in the case of a failure.
	(nautilus_window_has_really_changed): Call _disconnect_view.
	(nautilus_window_load_content_view): Replaced 
	_connect_content_view with _connect_view.
	* src/nautilus-window-private.h: updated prototypes to match
	previously-mentioned changes.

2000-06-28  John Sullivan  <sullivan@eazel.com>

	* src/nautilus-sidebar-title.c: (nautilus_sidebar_title_set_uri),
	* src/nautilus-sidebar.c: (nautilus_sidebar_update_info): Added
	a couple of NULL uri checks to get us cleanly past the case where
	the URI is temporarily null at startup time when the theme is set.

2000-06-28  Maciej Stachowiak  <mjs@eazel.com>

	* libnautilus-extensions/nautilus-mime-actions.c:
	(nautilus_mime_get_default_component_for_uri_internal): Fixed FIXME
	number.

2000-06-28  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/Makefile.am:
	added nautilus-theme.c and nautilus-theme.h
	* libnautilus-extensions/nautilus-theme.c,h:
	(nautilus_theme_get_theme), (nautilus_theme_set_theme),
	(load_theme_document), (nautilus_theme_get_theme_data):
	added theme framework that allows clients to access theme information
	without knowing the underlying implementation
	* src/nautilus-sidebar.c: (nautilus_sidebar_read_theme):
	made the sidebar use the new theme framework	
	* icons/default.xml:
	* icons/eazel/eazel.xml:
	* icons/vector/vector.xml:
	changed the icon container keyword for new framework

2000-06-27  Eskil Heyn Olsen  <eskil@eazel.com>

	* src/nautilus-view-frame.c:
	(nautilus_view_frame_get_preferred_zoom_levels):
	Commented out a CORBA_free that causes sigsegv (noted by
	Carbamide). Filed a bug report (1497) on it. 
	
2000-06-27  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/lib/eazel-install-public.h:
	Eeek, evil.h is no longer there.
	
2000-06-27  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/rpmview/nautilus-rpm-view-install.c:
	(nautilus_rpm_view_install_done),
	(nautilus_rpm_view_install_package_callback),
	(nautilus_rpm_view_uninstall_package_callback):
	* components/rpmview/nautilus-rpm-view-install.h:
	* components/rpmview/nautilus-rpm-view.c:
	(nautilus_rpm_view_initialize),
	(nautilus_rpm_view_update_from_uri):
	* components/rpmview/nautilus-rpm-view.h:
	Hooked up the uninstall button, and made the install's done
	callback signal update the view.
	
	* components/services/install/lib/eazel-install-corba-callback.c:
	(eazel_install_callback_uninstall_packages):
	* components/services/install/lib/eazel-install-corba-callback.h:
	* components/services/install/lib/eazel-install-corba-types.c:
	(categorydata_list_from_corba_categorystructlist):
	* components/services/install/lib/eazel-install-corba-types.h:
	* components/services/install/lib/eazel-install-corba.c:
	(impl_Eazel_Install_install_packages),
	(impl_Eazel_Install_uninstall_packages):
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_uninstall_packages):
	* components/services/install/lib/eazel-install-public.h:
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(uninstall_packages), (uninstall_a_package):
	* components/services/install/lib/eazel-install-rpm-glue.h:
	Made the uninstall work, still missing all the dep stuff
	(bugzilla.eazel.com 1478)	
	
	* components/services/install/lib/Makefile.am:
	* components/services/install/lib/makefile.staticlib.in:
	I decided the other makefile.am I had made was too evil, so now I
	just have a standard makefile to generate the static lib for the
	nautilus bootstrapper.
	
	* configure.in:
	Generate the components/services/install/lib/makefile.staticlib
	
	* nautilus-installer/src/HACKING:
	* nautilus-installer/src/Makefile:
	* nautilus-installer/src/Makefile.am:
	* nautilus-installer/src/installer.c: (installer):
	* nautilus-installer/src/interface.c: (create_window):
	* nautilus-installer/src/link.sh:
	* nautilus-installer/src/main.c: (main):
	Preparing for Bud's request about being able to install a "stable"
	nautilus and a set of rpm's from HEAD.
	Also made link.sh recompile libeazelinstall_minimal using the
	makefile.staticlib.

2000-06-27  Robin * Slomkowski <rslomkow@eazel.com>

	* nautilus-clean.sh: nautilus-tree=voew changed to
	nautilus-tree-view

2000-06-27  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-file-utilities.c,h:
	(nautilus_is_remote_uri):
	added a utility routine to determine if a string represents
	a remote uri.
	* libnautilus-extensions/nautilus-link.c:
	(nautilus_link_get_image_uri):
	made it use nautilus_is_remote_uri
	* src/nautilus-sidebar.c: (uri_is_local_image),
	(add_command_buttons):
	fixed bug 1494, can't set up custom icon to directories with
	blanks in their name, by escaping and unescaping when we translate
	between paths and uris.  Also, fixed bug 607 by using is_remote_uri.
	
2000-06-27  Michael Engber  <engber@eazel.com>

	* libnautilus/nautilus-view-component.idl:
	* libnautilus/nautilus-zoomable.c:
	(nautilus_g_list_from_ZoomLevelList),
	(nautilus_ZoomLevelList_from_zoom_levels),
	(impl_Nautilus_Zoomable__get_is_continuous),
	(impl_Nautilus_Zoomable__get_preferred_zoom_level_list),
	(nautilus_zoomable_initialize_class), (nautilus_zoomable_set_arg),
	(nautilus_zoomable_get_arg), (nautilus_zoomable_new),
	(nautilus_zoomable_new_from_bonobo_control),
	(nautilus_zoomable_destroy):
	* libnautilus/nautilus-zoomable.h:
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize):
	* src/nautilus-view-frame.c:
	(nautilus_view_frame_get_max_zoom_level),
	(nautilus_view_frame_get_preferred_zoom_levels):
	* src/nautilus-view-frame.h:
	* src/nautilus-window.c:
	(nautilus_window_zoom_level_changed_callback):
	* src/nautilus-zoom-control.c: (nautilus_zoom_control_initialize),
	(create_zoom_menu_item), (create_zoom_menu),
	(nautilus_zoom_control_set_max_zoom_level),
	(nautilus_zoom_control_set_preferred_zoom_levels):
	* src/nautilus-zoom-control.h:
	Added get_preferred_zoom_levels. Fixed zoom-control to
	use this info to generate it's right click menu.

2000-06-27  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c:
	(make_thumbnail_path), (nautilus_icon_factory_make_thumbnails):
	fixed bug 1491, can't make thumbnails if enclosing directory has
	a blank, by escaping and unescaping properly when we translate
	between paths and uris.
	
2000-06-27  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-directory-background.c:
	(background_reset_callback),
	(nautilus_connect_background_to_directory_metadata):
	made the background reset command work in directory views again,
	by attaching to the background reset signal.  It's still not
	respecting the theme, but will soon.
	
2000-06-27  Andy Hertzfeld  <andy@eazel.com>

	made the sidebar draw the background determined by the current
	theme when reset. 
	
	* libnautilus-extensions/nautilus-background.c,h:
	(nautilus_background_initialize_class),
	(nautilus_background_set_tile_image_uri),
	(nautilus_background_reset):
	added a "reset" signal to nautilus_background, which fires when
	the background is reset.
	* libnautilus-extensions/nautilus-background.h:
	* src/nautilus-sidebar.c: (nautilus_sidebar_background_is_default),
	(nautilus_sidebar_create_context_menu),
	(nautilus_sidebar_appearance_changed),
	(nautilus_sidebar_background_reset),
	(nautilus_sidebar_update_info):
	attach to the background reset signal and handle it properly
	
2000-06-27  Michael Engber  <engber@eazel.com>

	* libnautilus/nautilus-view-component.idl:
	* libnautilus/nautilus-zoomable.c:
	(impl_Nautilus_Zoomable__get_is_continuous),
	(nautilus_zoomable_initialize_class), (nautilus_zoomable_get_arg),
	(nautilus_zoomable_ensure_zoomable_frame):
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize), (zoomable_zoom_to_fit_callback),
	(fm_directory_view_set_zoom_level):
	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-icon-view.c: (fm_icon_view_begin_loading),
	(fm_icon_view_set_zoom_level), (fm_icon_view_bump_zoom_level),
	(fm_icon_view_zoom_to_level),
	(fm_icon_view_restore_default_zoom_level):
	* src/file-manager/fm-list-view.c: (fm_list_view_bump_zoom_level),
	(fm_list_view_zoom_to_level),
	(fm_list_view_restore_default_zoom_level),
	(fm_list_view_begin_loading), (fm_list_view_set_zoom_level):
	* src/nautilus-view-frame.c:
	(nautilus_view_frame_initialize_class),
	(nautilus_view_frame_zoom_level_changed):
	* src/nautilus-view-frame.h:
	* src/nautilus-window.c: (zoom_to_fit_callback),
	(nautilus_window_constructed),
	(nautilus_window_zoom_level_changed_callback),
	(nautilus_window_connect_view):
	* src/nautilus-zoom-control.c:
	(nautilus_zoom_control_class_initialize),
	(nautilus_zoom_control_initialize),
	(nautilus_zoom_control_button_press_event):
	* src/nautilus-zoom-control.h:
	* src/nautilus-zoomable-frame-corba.c:
	(impl_Nautilus_ZoomableFrame_report_zoom_level_changed):
	Removed zoom_to_default and zoom_parameters_changed.
	The nautilus-window now queries the zoomable for max
	and min before showing the zoom control.

2000-06-27  J Shane Culpepper  <pepper@eazel.com>

	* components/rpmview/Makefile.am:
	Added components/services/trilobite to the includes in order for a
	clean build to find some header files.

2000-06-27  John Sullivan  <sullivan@eazel.com>

	Finished task 461 (bookmarks to "Bad URI" should have
	an icon). I picked arbitrary existing icons (gnome foot
	for "generic bookmark", gnome-foot-question-mark for
	"bookmark with known-bad URI"); Arlo and/or Susan will
	have to come up with real ones. I'll write a separate
	bug report about that.

	* icons/i-bookmark.png:
	* icons/i-bookmark-20.png:
	* icons/i-bookmark-missing.png:
	* icons/i-bookmark-missing-20.png: New icons to use
	for bookmarks. I supplied the base size and the 20
	pixel size because that's the one used in menus, where
	bookmarks usually appear. These need to be replaced with
	better images.
	
	* icons/Makefile.am: Add new icons to installed set.
	
	* libnautilus-extensions/nautilus-bookmark.h,
	* libnautilus-extensions/nautilus-bookmark.c:
	(nautilus_bookmark_uri_known_not_to_exist): New public
	function, moved some code from elsewhere to encapsulate this.
	(nautilus_bookmark_set_icon_to_default): Choose between the
	generic and bad-URI icon if there's no better icon.

	* src/nautilus-window-menus.c: (activate_bookmark_in_menu_item):
	Now calls nautilus_bookmark_uri_known_not_to_exist instead
	of doing the work here.

2000-06-27  J Shane Culpepper  <pepper@eazel.com>

	* components/services/startup/nautilus-view/Makefile.am:
	Fixing gnome-vfs header bustage.

2000-06-26  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/lib/Makefile.am:
	automake, beautifull and yet so nasty. Orbit-idl fix again.

2000-06-26  Eskil Heyn Olsen  <eskil@eazel.com>

	* helper-utilities/authenticate/Makefile.am:
	Seems that libnautilus-extensions dep on libnautilus that dep on
	bonobo, thus this needed BONOBO_LIBS as well.

2000-06-26  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/time/service/Makefile.am:
	* components/services/install/command-line/Makefile.am:
	* components/services/install/server/Makefile.am:
	* components/services/trilobite/sample/service/Makefile.am:
	And suddenly the bonobo libs went *poof*

2000-06-26  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/lib/libeazelinstall.h:
	Missed a file.
	
2000-06-26  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/Makefile.am:
	Rearranged so libeazelinstall is built before rpmview

	* components/help/Makefile.am:
	Added a missing .h file so make dist works
	
	* components/rpmview/Makefile.am:
	* components/rpmview/nautilus-rpm-view-install.c:
	(nautilus_rpm_view_download_progress_signal),
	(nautilus_rpm_view_install_progress_signal),
	(nautilus_rpm_view_download_failed),
	(nautilus_rpm_view_install_failed_helper),
	(nautilus_rpm_view_install_failed),
	(nautilus_rpm_view_dependency_check),
	(nautilus_rpm_view_install_done),
	(nautilus_rpm_view_install_package_callback):
	* components/rpmview/nautilus-rpm-view-install.h:
	* components/rpmview/nautilus-rpm-view.c:
	(nautilus_rpm_view_initialize):
	Added a callback and some skeleton code to the install
	button. So it now does rpm installs.
	
	* components/services/install/lib/Makefile.am:
	* components/services/install/command-line/Makefile.am:
	Changed the libnames.
	*
	components/services/install/command-line/eazel-alt-install-corba.c:
	(done), (main):
	* components/services/install/lib/eazel-install-corba-callback.c:
	(eazel_install_callback_destroy),
	(eazel_install_callback_initialize), (eazel_install_callback_new),
	(eazel_install_callback_corba_objref),
	(eazel_install_callback_install_packages),
	(eazel_install_callback_query):
	* components/services/install/lib/eazel-install-corba-callback.h:
	* components/services/install/lib/eazel-install-corba-types.h:
	* components/services/install/lib/eazel-install-protocols.c:
	(get_search_url_for_package):
	* components/services/install/server/Makefile.am:
	* components/services/install/server/main.c:
	Changed the object destroction scheme, so eazel_install_callback
	now unrefs and destroys the bonobo object.
	
	* components/services/trilobite/sample/lib/Makefile.am:
	Fixed to pass make dist
		
	* nautilus-installer/src/Makefile:
	* nautilus-installer/src/Makefile.am:
	Patching so it works with the new installer libs (and still some
	stroking because of the static stuff)
	
	* nautilus.spec.in:
	* po/POTFILES.in:
	* test/Makefile.am:
	Slice and dice so make dist and rpm -ta works again.

2000-06-26  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-sidebar.c: (nautilus_sidebar_update_info):
	fixed sidebar background theming by adding a gtk_signal_block_by_func
	call (and the corresponding unblock) when we set up the background
	in update_info, so the new background data isn't written out to the
	metafile, since no explicit change was made.

2000-06-26  Michael Engber  <engber@eazel.com>

	* libnautilus-extensions/nautilus-gtk-extensions.c:
	(nautilus_gtk_marshal_NONE__DOUBLE_DOUBLE_DOUBLE):
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	* libnautilus/nautilus-view-component.idl:
	* libnautilus/nautilus-zoomable.c:
	(nautilus_zoomable_set_parameters),
	(nautilus_zoomable_set_zoom_level):
	* libnautilus/nautilus-zoomable.h:
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_set_zoom_level),
	(fm_directory_view_set_zoom_parameters):
	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-icon-view.c: (fm_icon_view_begin_loading),
	(fm_icon_view_set_zoom_level), (fm_icon_view_init_zoom_params),
	(fm_icon_view_bump_zoom_level), (fm_icon_view_zoom_to_level),
	(fm_icon_view_restore_default_zoom_level):
	* src/file-manager/fm-list-view.c: (fm_list_view_bump_zoom_level),
	(fm_list_view_zoom_to_level),
	(fm_list_view_restore_default_zoom_level),
	(fm_list_view_begin_loading), (fm_list_view_set_zoom_level),
	(fm_list_view_init_zoom_params):
	* src/nautilus-view-frame-private.h:
	* src/nautilus-view-frame.c:
	(nautilus_view_frame_initialize_class),
	(nautilus_view_frame_zoom_parameters_changed):
	* src/nautilus-view-frame.h:
	* src/nautilus-window.c:
	(nautilus_window_zoom_level_changed_callback),
	(nautilus_window_zoom_parameters_changed_callback),
	(nautilus_window_connect_view):
	* src/nautilus-zoom-control.c: (nautilus_zoom_control_initialize),
	(draw_number_and_disable_arrows), (zoom_menu_callback),
	(create_zoom_menu_item),
	(nautilus_zoom_control_button_press_event),
	(nautilus_zoom_control_set_zoom_level),
	(nautilus_zoom_control_set_min_zoom_level),
	(nautilus_zoom_control_set_max_zoom_level),
	(nautilus_zoom_control_get_zoom_level),
	(nautilus_zoom_control_get_min_zoom_level),
	(nautilus_zoom_control_get_max_zoom_level):
	* src/nautilus-zoom-control.h:
	* src/nautilus-zoomable-frame-corba.c:
	(impl_Nautilus_ZoomableFrame_report_zoom_level_changed),
	(impl_Nautilus_ZoomableFrame_report_zoom_parameters_changed):
	Added report_zoom_parameters_changed to the zoomable
	interface. This allows the zoom control to get min/max
	from the zoomable (as opposed to hard coding in values)
	Also fixed the zoom control to now use just doubles.
	Renamed the zoom_level_changed message to be report_zoom_level_changed
	in accordance with convention.

2000-06-26  John Sullivan  <sullivan@eazel.com>

	Finished task 876 (owner and group should be changeable
	in Properties window). The only part I didn't get done was
	using asynch gnome-vfs calls. I made that part of bug 845.

	* libnautilus-extensions/nautilus-string.h,
	* libnautilus-extensions/nautilus-string.c: 
	(nautilus_strcasecmp): New NULL-handling form of
	strcasecmp.

	* libnautilus-extensions/nautilus-glib-extensions.h,
	* libnautilus-extensions/nautilus-glib-extensions.c:
	(nautilus_g_str_list_sort),	
	(nautilus_g_str_list_sort_case_insensitive): New functions
	to sort a list of strings.
	(compare_strings), (compare_strings_case_insensitive):
	New helper routines used by the new _sort calls.

	* src/nautilus-window-manage-views.c:
	(nautilus_window_report_selection_change): Use 
	nautilus_g_str_list_sort.

	* libnautilus-extensions/nautilus-file.h,
	* libnautilus-extensions/nautilus-file.c: 
	(user_has_real_name): New helper function, returns TRUE
	if a password-file-entry user has a real name distinguishable
	from the username.

	(get_user_name_from_id), (get_user_and_real_name_from_id),
	(get_group_id_from_group_name), (get_ids_from_user_name),
	(get_user_id_from_user_name), (get_group_id_from_user_name):
	New helper functions for converting between user & group 
	names & ids.
	
	(get_id_from_digit_string): New helper function for converting 
	between	an integer as text and an integer.

	(nautilus_get_user_names): New public function for getting the
	list of all user names, with the real name (if distinguishable)
	thrown in for good measure.

	(nautilus_get_group_names): New public function for getting the
	list of all group names.
	
	(nautilus_file_can_get_owner), (nautilus_file_get_owner_name), 
	(nautilus_file_can_set_owner), (nautilus_file_set_owner), 
	(nautilus_file_can_get_group), (nautilus_file_get_group_name),
	(nautilus_file_can_set_group), (nautilus_file_set_group): 
	New public functions for reading and setting the group and owner.
	The setters define an asynch API though currently they're
	using non-asynch calls internally.

	(nautilus_file_get_settable_group_names): New public function
	returning a list of all group names that the current user can
	set this file's group to.

	(group_includes_user), (nautilus_get_group_names_including):
	New helper functions used by _get_settable_group_names.
	
	(nautilus_file_get_owner_as_string): Now optionally includes
	real name in result.
	
	(nautilus_file_get_string_attribute): Changed to call
	_get_owner_as_string with the real name included.

	* src/file-manager/fm-error-reporting.h:
	* src/file-manager/fm-error-reporting.c:
	(fm_report_error_setting_group), (fm_report_error_setting_owner):
	Error messages for when our predictions fail for whether a
	group or owner-setting operation will succeed.
	
	* src/file-manager/fm-properties-window.c: 
	(file_name_pair_new), (file_name_pair_free): New helper functions
	for passing around a file and string together (used in callbacks).

	(group_change_callback), (activate_group_callback), 
	(create_group_menu_item), (synch_groups_menu), 
	(attach_group_menu), (owner_change_callback),
	(activate_owner_callback), (create_owner_menu_item),
	(synch_user_menu), (attach_owner_menu): New functions for setting
	up widgets for display and control of owner and group.

	(add_special_execution_flags): Use attach_title_field instead of
	add_permissions_row_label.

	(permissions_label_update), (add_permissions_row_label): Removed
	these no-longer-needed functions.
	
	(add_permissions_column_label): Change row number constants to 
	match new layout.

	(create_permissions_page): Use static text for owner & group if
	non-editable, option menu if editable.

	(get_property_names): Now calls nautilus_g_str_list_sort.
	
2000-06-26  Darin Adler  <darin@eazel.com>

	* components/hardware/nautilus-hardware-view.c:
	(nautilus_hardware_view_destroy):
	* components/loser/content/nautilus-content-loser.c:
	(nautilus_content_loser_destroy):
	* components/loser/sidebar/nautilus-sidebar-loser.c:
	(nautilus_sidebar_loser_destroy):
	* components/mozilla/nautilus-mozilla-content-view.c:
	(nautilus_mozilla_content_view_destroy):
	* components/music/nautilus-music-view.c:
	(nautilus_music_view_destroy):
	* components/rpmview/nautilus-rpm-view.c:
	(nautilus_rpm_view_destroy):
	* components/sample/nautilus-sample-content-view.c:
	(nautilus_sample_content_view_destroy):
	* components/services/time/nautilus-view/trilobite-eazel-time-view.c:
	(trilobite_eazel_time_view_destroy):
	* components/tree/nautilus-tree-view.c:
	(nautilus_tree_view_destroy):
	Removed a bunch of incorrect calls to bonobo_object_unref.
	An error in the sample can be an insidious thing.
	
	* components/tree/main.c: (tree_object_destroyed),
	(tree_make_object), (main): Removed some stray debugging stuff.
	
	* libnautilus-extensions/Makefile.am: Got rid of the grid
	* libnautilus-extensions/nautilus-icon-private.h: Got rid of the
	grid.
	* libnautilus-extensions/nautilus-icon-container.c:
	(keyboard_icon_reveal_timeout_callback): Took out unneeded use of
	thread locking macros. Maybe someday I'll regret this, but we can
	add them back then.
	(get_all_icon_bounds): Added shared function.
	(update_scroll_region): Renamed set_scroll_region and made it use
	the shared function. Also got rid of grid code.
	(resort): Got rid of grid code.
	(lay_down_icons): Got rid of grid code.
	(relayout): Made it lay down new icons before doing any layout
	work. Also made sure it doesn't do the resort while stretching.
	(reload_icon_positions): Got rid of grid code.
	(rubberband_select): Got rid of grid code. This was the one place
	that it might have made things a little faster but probably not
	due to the complexity of what it was doing.
	(rubberband_timeout_callback): Took out unneeded use of thread
	locking macros. Maybe someday I'll regret this, but we can add
	them back then.
	(destroy): Got rid of grid code.
	(world_width_changed): Got rid of grid code.
	(nautilus_icon_container_initialize): Got rid of grid code and
	an extra idle cycle that wasn't needed.
	(nautilus_icon_container_clear): Got rid of grid code and added
	code to update the scroll region on clear.
	(icon_destroy): Got rid of grid code.
	(assign_icon_position), (finish_adding_icon),
	(finish_adding_new_icons), (finish_adding_new_icons_callback),
	(nautilus_icon_container_add): Replaced old idle code with
	something specific to adding new icons. This does the proper
	layout for manual as well as automatic layout cases.
	
	* libnautilus-extensions/nautilus-background.h:
	* libnautilus-extensions/nautilus-background.c:
	(nautilus_background_initialize_class): Made two signals instead
	of one. One for when the background's settings change and another
	for when the appearance changes.
	(nautilus_background_set_color): Emit both signals.
	(load_image_callback): Emit only the appearance change signal.
	(nautilus_background_set_tile_image_uri): Emit both signals.
	(nautilus_get_widget_background): Connect to the
	appearance_changed signal.
	* libnautilus-extensions/nautilus-directory-background.c:
	(nautilus_connect_background_to_directory_metadata):
	Connect to the settings_changed signal.
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_real_merge_menus): Connect to the
	settings_changed signal.
	* src/nautilus-sidebar.c: (nautilus_sidebar_update_info): Connect
	to the appearance_changed signal.
	* components/music/nautilus-music-view.c:
	(nautilus_music_view_set_up_background): Connect to the
	settings_changed signal.
	
	* HACKING: Gratuitious reformatting.
	* RENAMING: Added notes about how we do renaming, at the request
	of one of the hackers.
	
	* nautilus-clean.sh: Added nautilus-tree-view to the things that
	are killed, and made gratuitous changes to the script.

Mon Jun 26 15:50:57 2000  George Lebl <jirka@5z.com>

	* components/hardware/Makefile.am, components/help/Makefile.am,
	  components/history/Makefile.am, components/html/Makefile.am,
	  components/music/Makefile.am, components/notes/Makefile.am,
	  components/rpmview/Makefile.am, src/file-manager/Makefile.am: 
	Add $(VFS_CFLAGS) to the includes as it is necessary for
	gnome-vfs

2000-06-26  Andy Hertzfeld  <andy@eazel.com>

	* icons/eazel/Makefile.am:
	* icons/eazel/i-regular-12.png
	* icons/eazel/i-regular-24.png
	* icons/eazel/i-regular-36.png
	* icons/eazel/i-regular.png
	* icons/eazel/i-regular-72.png
	* icons/eazel/i-regular-96.png
	* icons/vector/i-directory-accept.svg:
	* icons/vector/i-directory.svg:
	newer icons from Susan
	
2000-06-26  Andy Hertzfeld  <andy@eazel.com>

	* components/music/Makefile.am:
	* components/music/mp3head.c,h: (extractI4), (is_mphead), (is_xhead),
	(get_bitrate), (get_samprate), (get_mpgver):
	* components/music/mp3head.h:
	integrated Erik Gustavsson's patch to support variable bit rate
	file properly in the music view.
	* components/music/nautilus-music-view.c: (is_mp3_file),
	(strip_trailing_blanks), (read_id_tag), (extract_number),
	(fetch_song_info):
	fixed bug 1281, music view should use mime types instead of
	extensions, by using the mime type in is_mp3_file.  Also, cleaned
	up Erik's patch for removing trailing blanks and integrated it.
	
2000-06-26  Kjartan Maraas  <kmaraas@gnome.org>

	* HACKING: Move bonobo after gnome-vfs since it now
	depends on it for bonobo-storage-vfs.c to build.
	
2000-06-26  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-metafile.c:
	(set_metadata_eat_value): Fixed use of hash table in here. The
	old code would destroy the wrong key. (Thanks to Ian for pointing
	that when you insert a value into GHashTable it keeps the old key
	instead of overwriting with the new one.)
	
	* libnautilus-extensions/nautilus-gtk-extensions.c:
	(nautilus_gtk_signal_connect_free_data):
	* src/file-manager/fm-properties-window.c: (attach_value_field),
	(create_emblems_page), (add_permissions_row_label):
	* src/nautilus-link-set-window.c: (make_link_set_check_box):
	* src/nautilus-property-browser.c:
	(make_properties_from_directory_path),
	(make_properties_from_xml_node), (make_category_link):
	* src/nautilus-sidebar.c: (nautilus_sidebar_add_panel_items):
	Got rid of unnecessary casts to (GtkDestroyNotify).

2000-06-26  Darin Adler  <darin@eazel.com>

	* components/services/install/command-line/.cvsignore:
	* components/services/install/lib/.cvsignore:
	Ignore some additional generated files.
	
	* libnautilus-extensions/nautilus-gnome-extensions.h:
	* libnautilus-extensions/nautilus-gnome-extensions.c:
	Moved stock dialog functions to nautilus-stock-dialogs.[ch].
	(nautilus_gnome_canvas_item_request_update_deep),
	(nautilus_gnome_canvas_request_update_all),
	(nautilus_gnome_canvas_set_scroll_region),
	(nautilus_gnome_canvas_set_scroll_region_left_justify):
	Added a bunch of functions that were previously private inside
	NautilusIconContainer.
	
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	* libnautilus-extensions/nautilus-gtk-extensions.c:
	(nautilus_gtk_adjustment_set_value),
	(nautilus_gtk_adjustment_clamp_value):
	Added functions that treat the value range in a GtkAdjustment the
	same way scroll bars do, taking the page size into account.
	
	* libnautilus-extensions/nautilus-horizontal-splitter.h:
	* libnautilus-extensions/nautilus-horizontal-splitter.c:
	(nautilus_horizontal_splitter_initialize),
	(toggle_splitter_position),
	(nautilus_horizontal_splitter_button_press),
	(nautilus_horizontal_splitter_button_release):
	Fixed logic so that splitter will only open or close if you both
	click and release within the splitter itself.
	
	* libnautilus-extensions/nautilus-icon-private.h:
	* libnautilus-extensions/nautilus-icon-container.c:
	(icon_toggle_selected): Move icons to front when they are selected.
	(set_scroll_region): Moved workaround that sets scroll region to
	be large enough to fill the widget allocation into a function in
	nautilus-gnome-extensions.h. In the process, I fixed the problem
	where it would do the job wrong when the view was zoomed.
	(lay_down_icons), (relayout), (reload_icon_positions):
	Started work on sharing code between automatic layout of the entire
	container and layout of new icons as the arrive.
	(nautilus_icon_container_clear), (nautilus_icon_container_add):
	Got started on the mechanism for laying out new icons as they arrive
	in bunches instead of one at a time.
	
	* libnautilus-extensions/nautilus-icon-dnd.c:
	* libnautilus-extensions/nautilus-program-chooser.c:
	* libnautilus-extensions/nautilus-program-choosing.c:
	* src/file-manager/dfos-xfer.c:
	* src/file-manager/fm-directory-view.c:
	* src/file-manager/fm-error-reporting.c:
	* src/nautilus-application.c:
	* src/nautilus-location-bar.c:
	* src/nautilus-property-browser.c:
	* src/nautilus-window-manage-views.c:
	* src/nautilus-window-menus.c:
	Added includes to source files that use the stock dialogs.
	
	* libnautilus-extensions/nautilus-stock-dialogs.h:
	* libnautilus-extensions/nautilus-stock-dialogs.c:
	(nautilus_timed_wait_stop), (convert_varargs_to_name_array),
	(nautilus_simple_dialog), (turn_on_line_wrap_flag),
	(turn_on_line_wrap_flag_callback), (show_ok_box),
	(show_yes_no_box), (nautilus_info_dialog),
	(nautilus_info_dialog_parented), (nautilus_warning_dialog),
	(nautilus_warning_dialog_parented), (nautilus_error_dialog),
	(nautilus_error_dialog_parented), (nautilus_yes_no_dialog),
	(nautilus_yes_no_dialog_parented):
	Moved all the stock dialog code in here.
	
	* src/nautilus-sidebar-title.c: (update_icon): Only display the
	icon when it's ready, instead of showing generic document icon
	before that time.
	(update_title), (update_more_info), (update_emblems),
	(update_notes): Added FIXMEs about doing the same with other info.
	(nautilus_sidebar_title_button_press_event): Added a FIXME to the
	half-baked code in here.

2000-06-26  Fatih Demir	<kabalak@gmx.net>

	* Makefile.am: Added the previous ChangeLogs to
	the EXTRA_DIST target.
	
	* configure.in: Cosmetics and a configuration summary at the end
	of the ./configure process.
	
	* helper-utilities/authenticate/nautilus-authenticate.h:
	Include <stdlib.h> for compiling with -Werror without error.
	
2000-06-26  Pavel Cisler <pavel@eazel.com>

	* acconfig.h:
	* configure.in:
	Fix build breakage caused recent changes to make GnomeVFS compile
	without OAF support. Some GnomeVFS headers now require USING_OAF
	to be defined and when included from Nautilus, this define was
	missing. Not sure this is the 100% correct way to do this but
	this should at least prevent people from being stuck with a broken
	build.

2000-06-26  Andy Hertzfeld  <andy@eazel.com>

	Added XML-based theme mechanism and used it for the sidebar
	background, which isn't entirely working yet.
	
	* icons/Makefile.am:
	* icons/default.xml:
	* icons/eazel/Makefile.am:
	* icons/eazel/eazel.xml:
	* icons/vector/Makefile.am:
	* icons/vector/vector.xml:
	New XML-based theme files.
	* libnautilus-extensions/nautilus-global-preferences.c,h:
	(global_preferences_create_dialog),
	(global_preferences_register_for_ui):
	Changed "icon_theme" preference to general "theme".
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_get_current_icon_factory),
	(nautilus_icon_factory_destroy), (icon_theme_changed_callback):
	Changed from "icon_theme" to "theme".
	* libnautilus-extensions/nautilus-preferences-item.c,h:
	(preferences_item_construct), (preferences_item_create_theme):
	Changed from "icon_theme" to "theme".
	* libnautilus-extensions/nautilus-xml-extensions.c,h:
	(nautilus_xml_get_child_by_name):
	Added a routine to access child nodes.
	* src/nautilus-sidebar.c: (nautilus_sidebar_initialize),
	(nautilus_sidebar_destroy), (nautilus_sidebar_read_theme),
	(nautilus_sidebar_theme_changed),
	(nautilus_sidebar_background_changed),
	(nautilus_sidebar_update_info):
	Made the sidebar get its default values from an XML-based theme
	file, and reload them when the theme changes.

2000-06-25  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-link.c:
	(free_icon_notification_info), (icon_read_done_callback),
	(is_remote_uri), (nautilus_link_get_image_uri):
	Linksets now use gnome-vfs to load load icons over http instead of
	ghttp, using Darin's new utility routines.  Also, made it load
	them asynchronously.
	
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_pixbuf_for_icon):
	Made get_pixbuf_for_icon set the custom boolean when it calls
	get_icon_from_cache if necessary.
	
2000-06-25  Fatih Demir	<kabalak@gmx.net>
	
	* ChangeLog: This is the fresh one.
	* ChangeLog-20000625: Split up the ChangeLog.
