# Makefile.in generated automatically by automake 1.4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AS = @AS@
AWK = @AWK@
CC = @CC@
DLLTOOL = @DLLTOOL@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_CONFIG = @GLIB_CONFIG@
GLIB_LIBS = @GLIB_LIBS@
GMODULE_CFLAGS = @GMODULE_CFLAGS@
GMODULE_LIBS = @GMODULE_LIBS@
HAVE_LIMITED_WRITEV = @HAVE_LIMITED_WRITEV@
LEX = @LEX@
LIBTOOL = @LIBTOOL@
LIBWRAP_PATH = @LIBWRAP_PATH@
LIB_WRAP = @LIB_WRAP@
LN_S = @LN_S@
LT_AGE = @LT_AGE@
LT_CURRENT = @LT_CURRENT@
LT_RELEASE = @LT_RELEASE@
LT_REVISION = @LT_REVISION@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
OBJDUMP = @OBJDUMP@
ORBIT_HAVE_ALLOCA_H = @ORBIT_HAVE_ALLOCA_H@
ORBIT_MAJOR_VERSION = @ORBIT_MAJOR_VERSION@
ORBIT_MICRO_VERSION = @ORBIT_MICRO_VERSION@
ORBIT_MINOR_VERSION = @ORBIT_MINOR_VERSION@
ORBIT_SERIAL = @ORBIT_SERIAL@
ORBIT_VERSION = @ORBIT_VERSION@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
VERSION = @VERSION@
YACC = @YACC@
pkglibdir = @pkglibdir@

noinst_PROGRAMS = client server

EVERYTHING_BUILT = everything.h everything-stubs.c everything-skels.c everything-common.c
BUILT_SOURCES = ${EVERYTHING_BUILT}

INCLUDES = -I$(top_builddir)/src/orb               -I$(top_builddir)/src               -I$(top_builddir)/src/ORBitutil               -I$(top_srcdir)/src/orb               -I$(top_srcdir)/src               ${GLIB_CFLAGS}


LDADDS = $(top_builddir)/src/orb/libORBit.la              $(top_builddir)/src/IIOP/libIIOP.la              $(top_builddir)/src/ORBitutil/libORBitutil.la              ${GLIB_LIBS}


client_SOURCES = client.c ${EVERYTHING_BUILT} everything.idl constants.h
client_DEPENDENCES = ${EVERYTHING_BUILT}
client_LDFLAGS = -static
client_LDADD = ${LDADDS}

server_SOURCES = server.c ${EVERYTHING_BUILT} everything.idl constants.h
server_DEPENDENCES = ${EVERYTHING_BUILT}
server_LDFLAGS = -static
server_LDADD = ${LDADDS}

ORBIT_IDL = $(top_builddir)/src/orbit-idl-compiler/orbit-idl

CLEANFILES = ${EVERYTHING_BUILT} iorfile

TESTS = $(srcdir)/test.sh
EXTRA_DIST = test.sh basicServer.c structServer.c sequenceServer.c unionServer.c arrayServer.c anyServer.c
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../../config.h
CONFIG_CLEAN_FILES = 
PROGRAMS =  $(noinst_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I../..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
client_OBJECTS =  client.o everything-stubs.o everything-skels.o \
everything-common.o
client_DEPENDENCIES =  $(top_builddir)/src/orb/libORBit.la \
$(top_builddir)/src/IIOP/libIIOP.la \
$(top_builddir)/src/ORBitutil/libORBitutil.la
server_OBJECTS =  server.o everything-stubs.o everything-skels.o \
everything-common.o
server_DEPENDENCIES =  $(top_builddir)/src/orb/libORBit.la \
$(top_builddir)/src/IIOP/libIIOP.la \
$(top_builddir)/src/ORBitutil/libORBitutil.la
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  README Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(client_SOURCES) $(server_SOURCES)
OBJECTS = $(client_OBJECTS) $(server_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps test/everything/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-noinstPROGRAMS:

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

distclean-noinstPROGRAMS:

maintainer-clean-noinstPROGRAMS:

.c.o:
	$(COMPILE) -c $<

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

client: $(client_OBJECTS) $(client_DEPENDENCIES)
	@rm -f client
	$(LINK) $(client_LDFLAGS) $(client_OBJECTS) $(client_LDADD) $(LIBS)

server: $(server_OBJECTS) $(server_DEPENDENCIES)
	@rm -f server
	$(LINK) $(server_LDFLAGS) $(server_OBJECTS) $(server_LDADD) $(LIBS)

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = test/everything

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
client.o: client.c everything.h ../../src/orb/orbit.h \
	../../src/IIOP/IIOP.h ../../src/ORBitutil/util.h \
	../../src/ORBitutil/thread-safety.h ../../src/ORBitutil/trace.h \
	../../src/ORBitutil/compat.h ../../src/ORBitutil/os-specifics.h \
	../../src/ORBitutil/orbit-os-config.h \
	../../src/ORBitutil/os-feature-alloca.h \
	../../src/IIOP/IIOP-config.h ../../src/IIOP/IIOP-types.h \
	../../src/ORBitutil/basic_types.h \
	../../src/IIOP/giop-msg-buffer.h ../../src/orb/iop.h \
	../../src/orb/corba_basic_sequences_type.h \
	../../src/orb/corba_sequences.h ../../src/IIOP/iiop-encoders.h \
	../../src/IIOP/iiop-endian.h ../../src/orb/orbit_config.h \
	../../src/orb/orbit_types.h ../../src/orb/corba_orb.h \
	../../src/orb/corba_any.h ../../src/orb/corba_typecode.h \
	../../src/orb/corba_context.h ../../src/orb/orbit_object_type.h \
	../../src/orb/orbit_object.h ../../src/orb/corba_object.h \
	../../src/orb/corba_env.h ../../src/orb/corba_portableserver.h \
	../../src/orb/corba_sequences_type.h \
	../../src/orb/corba_object_type.h \
	../../src/orb/corba_orb_type.h \
	../../src/orb/corba_typecode_type.h \
	../../src/orb/corba_any_type.h ../../src/orb/corba_any_proto.h \
	../../src/orb/corba_env_type.h \
	../../src/orb/corba_portableserver_type.h \
	../../src/orb/allocators.h ../../src/orb/allocator-defs.h \
	../../src/orb/cdr.h ../../src/orb/dii.h \
	../../src/orb/interface_repository.h ../../src/orb/dynany.h \
	../../src/orb/env.h ../../src/orb/ir.h ../../src/orb/options.h \
	../../src/orb/orb.h ../../src/orb/poa.h \
	../../src/orb/orbit_poa_type.h ../../src/orb/sequences.h \
	../../src/orb/orbit_typecode.h ../../src/orb/typecode.h \
	constants.h
everything-common.o: everything-common.c everything.h \
	../../src/orb/orbit.h ../../src/IIOP/IIOP.h \
	../../src/ORBitutil/util.h ../../src/ORBitutil/thread-safety.h \
	../../src/ORBitutil/trace.h ../../src/ORBitutil/compat.h \
	../../src/ORBitutil/os-specifics.h \
	../../src/ORBitutil/orbit-os-config.h \
	../../src/ORBitutil/os-feature-alloca.h \
	../../src/IIOP/IIOP-config.h ../../src/IIOP/IIOP-types.h \
	../../src/ORBitutil/basic_types.h \
	../../src/IIOP/giop-msg-buffer.h ../../src/orb/iop.h \
	../../src/orb/corba_basic_sequences_type.h \
	../../src/orb/corba_sequences.h ../../src/IIOP/iiop-encoders.h \
	../../src/IIOP/iiop-endian.h ../../src/orb/orbit_config.h \
	../../src/orb/orbit_types.h ../../src/orb/corba_orb.h \
	../../src/orb/corba_any.h ../../src/orb/corba_typecode.h \
	../../src/orb/corba_context.h ../../src/orb/orbit_object_type.h \
	../../src/orb/orbit_object.h ../../src/orb/corba_object.h \
	../../src/orb/corba_env.h ../../src/orb/corba_portableserver.h \
	../../src/orb/corba_sequences_type.h \
	../../src/orb/corba_object_type.h \
	../../src/orb/corba_orb_type.h \
	../../src/orb/corba_typecode_type.h \
	../../src/orb/corba_any_type.h ../../src/orb/corba_any_proto.h \
	../../src/orb/corba_env_type.h \
	../../src/orb/corba_portableserver_type.h \
	../../src/orb/allocators.h ../../src/orb/allocator-defs.h \
	../../src/orb/cdr.h ../../src/orb/dii.h \
	../../src/orb/interface_repository.h ../../src/orb/dynany.h \
	../../src/orb/env.h ../../src/orb/ir.h ../../src/orb/options.h \
	../../src/orb/orb.h ../../src/orb/poa.h \
	../../src/orb/orbit_poa_type.h ../../src/orb/sequences.h \
	../../src/orb/orbit_typecode.h ../../src/orb/typecode.h
everything-skels.o: everything-skels.c everything.h \
	../../src/orb/orbit.h ../../src/IIOP/IIOP.h \
	../../src/ORBitutil/util.h ../../src/ORBitutil/thread-safety.h \
	../../src/ORBitutil/trace.h ../../src/ORBitutil/compat.h \
	../../src/ORBitutil/os-specifics.h \
	../../src/ORBitutil/orbit-os-config.h \
	../../src/ORBitutil/os-feature-alloca.h \
	../../src/IIOP/IIOP-config.h ../../src/IIOP/IIOP-types.h \
	../../src/ORBitutil/basic_types.h \
	../../src/IIOP/giop-msg-buffer.h ../../src/orb/iop.h \
	../../src/orb/corba_basic_sequences_type.h \
	../../src/orb/corba_sequences.h ../../src/IIOP/iiop-encoders.h \
	../../src/IIOP/iiop-endian.h ../../src/orb/orbit_config.h \
	../../src/orb/orbit_types.h ../../src/orb/corba_orb.h \
	../../src/orb/corba_any.h ../../src/orb/corba_typecode.h \
	../../src/orb/corba_context.h ../../src/orb/orbit_object_type.h \
	../../src/orb/orbit_object.h ../../src/orb/corba_object.h \
	../../src/orb/corba_env.h ../../src/orb/corba_portableserver.h \
	../../src/orb/corba_sequences_type.h \
	../../src/orb/corba_object_type.h \
	../../src/orb/corba_orb_type.h \
	../../src/orb/corba_typecode_type.h \
	../../src/orb/corba_any_type.h ../../src/orb/corba_any_proto.h \
	../../src/orb/corba_env_type.h \
	../../src/orb/corba_portableserver_type.h \
	../../src/orb/allocators.h ../../src/orb/allocator-defs.h \
	../../src/orb/cdr.h ../../src/orb/dii.h \
	../../src/orb/interface_repository.h ../../src/orb/dynany.h \
	../../src/orb/env.h ../../src/orb/ir.h ../../src/orb/options.h \
	../../src/orb/orb.h ../../src/orb/poa.h \
	../../src/orb/orbit_poa_type.h ../../src/orb/sequences.h \
	../../src/orb/orbit_typecode.h ../../src/orb/typecode.h
everything-stubs.o: everything-stubs.c everything.h \
	../../src/orb/orbit.h ../../src/IIOP/IIOP.h \
	../../src/ORBitutil/util.h ../../src/ORBitutil/thread-safety.h \
	../../src/ORBitutil/trace.h ../../src/ORBitutil/compat.h \
	../../src/ORBitutil/os-specifics.h \
	../../src/ORBitutil/orbit-os-config.h \
	../../src/ORBitutil/os-feature-alloca.h \
	../../src/IIOP/IIOP-config.h ../../src/IIOP/IIOP-types.h \
	../../src/ORBitutil/basic_types.h \
	../../src/IIOP/giop-msg-buffer.h ../../src/orb/iop.h \
	../../src/orb/corba_basic_sequences_type.h \
	../../src/orb/corba_sequences.h ../../src/IIOP/iiop-encoders.h \
	../../src/IIOP/iiop-endian.h ../../src/orb/orbit_config.h \
	../../src/orb/orbit_types.h ../../src/orb/corba_orb.h \
	../../src/orb/corba_any.h ../../src/orb/corba_typecode.h \
	../../src/orb/corba_context.h ../../src/orb/orbit_object_type.h \
	../../src/orb/orbit_object.h ../../src/orb/corba_object.h \
	../../src/orb/corba_env.h ../../src/orb/corba_portableserver.h \
	../../src/orb/corba_sequences_type.h \
	../../src/orb/corba_object_type.h \
	../../src/orb/corba_orb_type.h \
	../../src/orb/corba_typecode_type.h \
	../../src/orb/corba_any_type.h ../../src/orb/corba_any_proto.h \
	../../src/orb/corba_env_type.h \
	../../src/orb/corba_portableserver_type.h \
	../../src/orb/allocators.h ../../src/orb/allocator-defs.h \
	../../src/orb/cdr.h ../../src/orb/dii.h \
	../../src/orb/interface_repository.h ../../src/orb/dynany.h \
	../../src/orb/env.h ../../src/orb/ir.h ../../src/orb/options.h \
	../../src/orb/orb.h ../../src/orb/poa.h \
	../../src/orb/orbit_poa_type.h ../../src/orb/sequences.h \
	../../src/orb/orbit_typecode.h ../../src/orb/typecode.h
server.o: server.c everything.h ../../src/orb/orbit.h \
	../../src/IIOP/IIOP.h ../../src/ORBitutil/util.h \
	../../src/ORBitutil/thread-safety.h ../../src/ORBitutil/trace.h \
	../../src/ORBitutil/compat.h ../../src/ORBitutil/os-specifics.h \
	../../src/ORBitutil/orbit-os-config.h \
	../../src/ORBitutil/os-feature-alloca.h \
	../../src/IIOP/IIOP-config.h ../../src/IIOP/IIOP-types.h \
	../../src/ORBitutil/basic_types.h \
	../../src/IIOP/giop-msg-buffer.h ../../src/orb/iop.h \
	../../src/orb/corba_basic_sequences_type.h \
	../../src/orb/corba_sequences.h ../../src/IIOP/iiop-encoders.h \
	../../src/IIOP/iiop-endian.h ../../src/orb/orbit_config.h \
	../../src/orb/orbit_types.h ../../src/orb/corba_orb.h \
	../../src/orb/corba_any.h ../../src/orb/corba_typecode.h \
	../../src/orb/corba_context.h ../../src/orb/orbit_object_type.h \
	../../src/orb/orbit_object.h ../../src/orb/corba_object.h \
	../../src/orb/corba_env.h ../../src/orb/corba_portableserver.h \
	../../src/orb/corba_sequences_type.h \
	../../src/orb/corba_object_type.h \
	../../src/orb/corba_orb_type.h \
	../../src/orb/corba_typecode_type.h \
	../../src/orb/corba_any_type.h ../../src/orb/corba_any_proto.h \
	../../src/orb/corba_env_type.h \
	../../src/orb/corba_portableserver_type.h \
	../../src/orb/allocators.h ../../src/orb/allocator-defs.h \
	../../src/orb/cdr.h ../../src/orb/dii.h \
	../../src/orb/interface_repository.h ../../src/orb/dynany.h \
	../../src/orb/env.h ../../src/orb/ir.h ../../src/orb/options.h \
	../../src/orb/orb.h ../../src/orb/poa.h \
	../../src/orb/orbit_poa_type.h ../../src/orb/sequences.h \
	../../src/orb/orbit_typecode.h ../../src/orb/typecode.h \
	basicServer.c constants.h structServer.c sequenceServer.c \
	unionServer.c arrayServer.c anyServer.c

check-TESTS: $(TESTS)
	@failed=0; all=0; \
	srcdir=$(srcdir); export srcdir; \
	for tst in $(TESTS); do \
	  if test -f $$tst; then dir=.; \
	  else dir="$(srcdir)"; fi; \
	  if $(TESTS_ENVIRONMENT) $$dir/$$tst; then \
	    all=`expr $$all + 1`; \
	    echo "PASS: $$tst"; \
	  elif test $$? -ne 77; then \
	    all=`expr $$all + 1`; \
	    failed=`expr $$failed + 1`; \
	    echo "FAIL: $$tst"; \
	  fi; \
	done; \
	if test "$$failed" -eq 0; then \
	  banner="All $$all tests passed"; \
	else \
	  banner="$$failed of $$all tests failed"; \
	fi; \
	dashes=`echo "$$banner" | sed s/./=/g`; \
	echo "$$dashes"; \
	echo "$$banner"; \
	echo "$$dashes"; \
	test "$$failed" -eq 0
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am:
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am:
uninstall: uninstall-am
all-am: Makefile $(PROGRAMS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean-am:  mostlyclean-noinstPROGRAMS mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-noinstPROGRAMS clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-noinstPROGRAMS distclean-compile \
		distclean-libtool distclean-tags distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-noinstPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-noinstPROGRAMS distclean-noinstPROGRAMS \
clean-noinstPROGRAMS maintainer-clean-noinstPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir check-TESTS \
info-am info dvi-am dvi check check-am installcheck-am installcheck \
install-exec-am install-exec install-data-am install-data install-am \
install uninstall-am uninstall all-redirect all-am all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


${EVERYTHING_BUILT}: everything.idl $(ORBIT_IDL)
	$(ORBIT_IDL) $(srcdir)/everything.idl

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
