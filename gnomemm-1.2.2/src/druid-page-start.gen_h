/* $Id: druid-page-start.gen_h,v 1.7 2001/04/24 14:39:35 murrayc Exp $ */


/* druid-page-start.gen_h
 * 
 * Copyright (C) 1999 The Gtk-- Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gnome--/druid-page.h>
#include <libgnomeui/gnome-druid-page-start.h>
#include <gnome--/imlib.h>

CLASS_START(Gnome);
class DruidPageStart : public DruidPage
{
  WRAP_CLASS(DruidPageStart, GnomeDruidPageStart,
             GNOME_DRUID_PAGE_START, GNOME_IS_DRUID_PAGE_START,
             druid_page_start,
             DruidPage, GnomeDruidPage, GNOME_DRUID_PAGE);
public:
  DruidPageStart();
  DruidPageStart(const Gtk::string &title,
           const Gtk::string &text,
		       const Gdk_Imlib::Image &logo_image,
		       const Gdk_Imlib::Image &watermark);
  WRAP_CTOR_CAST;
  WRAP_DTOR;


  WRAP_METHOD(void gnome_druid_page_start_set_bg_color (GnomeDruidPageStart*, GdkColor*),
	      void set_bg_color (const Gdk_Color &color));

  WRAP_METHOD(void gnome_druid_page_start_set_textbox_color (GnomeDruidPageStart*, GdkColor*),
	      void set_textbox_color (const Gdk_Color &color));

  WRAP_METHOD(void gnome_druid_page_start_set_logo_bg_color (GnomeDruidPageStart*, GdkColor*),
	      void set_logo_bg_color (const Gdk_Color &color));

  WRAP_METHOD(void gnome_druid_page_start_set_title_color (GnomeDruidPageStart*, GdkColor*),
	      void set_title_color (const Gdk_Color &color));

  WRAP_METHOD(void gnome_druid_page_start_set_text_color (GnomeDruidPageStart*, GdkColor*),
	      void set_text_color (const Gdk_Color &color));

  WRAP_METHOD(void gnome_druid_page_start_set_text (GnomeDruidPageStart*, const gchar*),
	      void set_text (const Gtk::string &text));

  WRAP_METHOD(void gnome_druid_page_start_set_title (GnomeDruidPageStart*, const gchar*),
	      void set_title (const Gtk::string &title));

  WRAP_METHOD(void gnome_druid_page_start_set_logo (GnomeDruidPageStart*, GdkImlibImage*),
	      void set_logo (const Gdk_Imlib::Image &logo_image));

  WRAP_METHOD(void gnome_druid_page_start_set_watermark (GnomeDruidPageStart*, GdkImlibImage*),
	      void set_watermark (const Gdk_Imlib::Image &watermark));

};



PRIVATE_START;
#include <gnome--/private/druid-page_p.h>
IMPL_START;
#include <gnome--/private/druid-page-start_p.h>
#include <gnome--/construct_copies.h>

Gnome::DruidPageStart::DruidPageStart()
  : DruidPage(GNOME_DRUID_PAGE(gtk_object_new(get_type(),0)))
{
  //Duplicated code from _new function:
  gtkobj()->title = g_strdup ("");
	gtkobj()->text = g_strdup ("");
	gtkobj()->logo_image = 0;
  gtkobj()->watermark_image = 0;
  gnome_druid_page_start_construct(gtkobj());
}

Gnome::DruidPageStart::DruidPageStart(const Gtk::string &title,
             const Gtk::string &text,
					   const Gdk_Imlib::Image &logo_image,
					   const Gdk_Imlib::Image &watermark)
  : DruidPage(GNOME_DRUID_PAGE(gtk_object_new(get_type(),0)))
{
  //Duplicated code from _new function:
  gtkobj()->title = g_strdup ("");
	gtkobj()->text = g_strdup ("");
	gtkobj()->logo_image = 0;
  gtkobj()->watermark_image = 0;
	gnome_druid_page_start_construct(gtkobj());
	
  set_title(title);
  set_text(text);
  set_logo(logo_image);
  set_watermark(watermark);
}




DOCUMENTATION_START;

