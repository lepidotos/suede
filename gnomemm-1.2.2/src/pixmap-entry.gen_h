/* $Id: pixmap-entry.gen_h,v 1.8 2000/09/01 15:51:40 kenelson Exp $ */


/* pixmap-entry.gen_h
 * 
 * Copyright (C) 1999 The Gtk-- Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gtk--/box.h>
#include <gnome--/file-entry.h>
#include <gnome--/entry.h>
#include <gtk--/entry.h>
#include <libgnomeui/gnome-pixmap-entry.h>

CLASS_START(Gnome);
class PixmapEntry : public Gtk::VBox
{
  WRAP_CLASS(PixmapEntry, GnomePixmapEntry,
             GNOME_PIXMAP_ENTRY, GNOME_IS_PIXMAP_ENTRY,
             pixmap_entry,
             Gtk::VBox, GtkVBox, GTK_VBOX);
public:
  WRAP_CTOR_DEFAULT;
  WRAP_CTOR_CAST;
  WRAP_DTOR;

  PixmapEntry(const Gtk::string &history_id,
		    const Gtk::string &browse_dialog_title,
		    bool do_preview);

  Gnome::FileEntry* gnome_file_entry();
  Gnome::Entry* gnome_entry();
  Gtk::Entry* gtk_entry();

  Gtk::string get_filename() const;

  WRAP_METHOD(void gnome_pixmap_entry_set_pixmap_subdir(GnomePixmapEntry*, const gchar*),
	      void set_pixmap_subdir(const Gtk::string &subdir));

  WRAP_METHOD(void gnome_pixmap_entry_set_preview (GnomePixmapEntry*, gboolean),
	      void set_preview (bool do_preview));

  WRAP_METHOD(void gnome_pixmap_entry_set_preview_size(GnomePixmapEntry*, gint , gint),
	      void set_preview_size(gint preview_w, gint preview_h));

};



PRIVATE_START;
#include <gtk--/private/box_p.h>
IMPL_START;
#include <gnome--/private/pixmap-entry_p.h>

namespace Gnome {

PixmapEntry::PixmapEntry(const Gtk::string &history_id,
				     const Gtk::string &browse_dialog_title,
				     bool do_preview)
  : Gtk::VBox(GTK_VBOX(gtk_object_new(get_type(),0)))  
{
  initialize_class();
  gnome_pixmap_entry_construct(gtkobj(), 
			       history_id.c_str(),
			       browse_dialog_title.c_str(),
			       do_preview);
}

Gnome::FileEntry*
PixmapEntry::gnome_file_entry()
{
  return Gtk::wrap(GNOME_FILE_ENTRY(gnome_pixmap_entry_gnome_file_entry(gtkobj())));
}

Gnome::Entry*
PixmapEntry::gnome_entry()
{
  return Gtk::wrap(GNOME_ENTRY(gnome_pixmap_entry_gnome_entry(gtkobj())));
}

Gtk::Entry*
PixmapEntry::gtk_entry()
{
  return Gtk::wrap(GTK_ENTRY(gnome_pixmap_entry_gtk_entry(gtkobj())));
}

Gtk::string
PixmapEntry::get_filename() const
{
  gchar *tmp = gnome_pixmap_entry_get_filename(const_cast<GnomePixmapEntry*>(gtkobj()));

  if(!tmp) tmp = "";
  
  Gtk::string s(tmp);

  g_free(tmp);
  
  return s;
}

} /* namespace Gnome */


DOCUMENTATION_START;

