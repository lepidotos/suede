/* $Id: less.gen_h,v 1.5 2000/08/29 18:09:02 kenelson Exp $ */


/* less.gen_h
 * 
 * Copyright (C) 1999 The Gtk-- Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gtk--/box.h>
#include <libgnomeui/gnome-less.h>

CLASS_START(Gnome);
class Less : public Gtk::VBox
{
  WRAP_CLASS(Less, GnomeLess,
             GNOME_LESS, GNOME_IS_LESS,
             less,
             Gtk::VBox, GtkVBox, GTK_VBOX);
public:
  WRAP_CTOR_DEFAULT;
  WRAP_CTOR_CAST;
  WRAP_DTOR;

  WRAP_METHOD(void gnome_less_clear (GnomeLess*),
	      void clear ());

  WRAP_METHOD(gboolean gnome_less_show_file (GnomeLess* , const gchar*),
	      gboolean show_file (const Gtk::string &path));

  WRAP_METHOD(gboolean gnome_less_show_command (GnomeLess* , const gchar*),
	      gboolean show_command (const Gtk::string &command_line));

  WRAP_METHOD(void gnome_less_show_string (GnomeLess* , const gchar*),
	      void show_string (const Gtk::string &s));

  WRAP_METHOD(gboolean gnome_less_show_filestream (GnomeLess* , FILE*),
	      gboolean show_filestream (FILE * f));

  WRAP_METHOD(gboolean gnome_less_show_fd (GnomeLess* , int),
	      gboolean show_fd (int file_descriptor));

  WRAP_METHOD(gboolean gnome_less_write_file (GnomeLess* , const gchar*),
	      gboolean write_file (const Gtk::string &path));

  WRAP_METHOD(gboolean gnome_less_write_fd (GnomeLess* , int),
	      gboolean write_fd (int fd));

  WRAP_METHOD(void gnome_less_set_fixed_font (GnomeLess* , gboolean),
	      void set_fixed_font (bool fixed));

  WRAP_METHOD(void gnome_less_reshow (GnomeLess*),
	      void reshow ());

  WRAP_METHOD(void gnome_less_fixed_font (GnomeLess*),
	      void fixed_font ());

  void set_font (const Gdk_Font &font);

};



PRIVATE_START;
#include <gtk--/private/box_p.h>
IMPL_START;
#include <gnome--/private/less_p.h>

void
Gnome::Less::set_font (const Gdk_Font &font)
{
  gnome_less_set_font (gtkobj(), const_cast<GdkFont*>(font.gdkobj()));
}



DOCUMENTATION_START;

