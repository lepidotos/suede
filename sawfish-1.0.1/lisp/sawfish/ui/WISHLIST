
IMPORTANT:

This file is probably now out of date. Use bugzilla.eazel.com instead.

--

  + reversed dependences? i.e. `:depends (not foo)'

  + more widgets:

	(table ("NAME" ...) (WIDGET ...))	[doable]

	(directory-name),

  + maybe use CORBA for wm communication instead of client program? (or
    perhaps support both somehow?)

  + do i18n on choices from `:type symbol' options

    also, strings embedded in types, e.g. list titles

  + split theme menu by first letter, if many themes to show

  + another idea: textual search for options/commands

--

Items that have been committed:

  + refresh groups after committing changes

    (since this may cause slots to be added)

  + decide whether to use GNOME widgets or not

    [ all GNOME-specific code must either be in nokogiri-gnome or in
      separate files in nokogiri-widgets, with Gtk+ equivalents in
      nokogiri-no-gnome ]

  + support arguments to commands in keymaps

  + support for loading groups on demand

    only fetch the current group's information
    (which may have been cached from the previous time)

  + method of autoloading group details when demanded

  + more widgets:

	(alist ("KEY" WIDGET)
	       ("VALUE" WIDGET))

	(list "NAME" WIDGET)

	(file)
	(progam)

  + proper revert

  + choice of `apply/revert/cancel/ok', `revert/cancel/ok', or just `ok'

  + autoload widget definitions (e.g. if requesting widget type `foo'
    that is unavailable, look for a module nokogiri-widget-foo)

  + nautilus-like ``user levels'' controlling when options get enabled

  + rewrite sawmill-ui to use ``items'' as in sawmill-themer (complex
    widgets represented by functional data types). This would allow
    more complex custom types, i.e. `(or number string)' etc...

  + also, add provisions for extensibility (i.e. adding new item types
    at run-time)

  + also, add simple dependences (i.e. widgets can be activated by a
    separate boolean option)

