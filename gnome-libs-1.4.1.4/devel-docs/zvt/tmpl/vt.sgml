<refentry id="zvt-vt">
<refmeta>
<refentrytitle>vt</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>ZVT Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>vt</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



#define     <link linkend="UPDATE-CHANGES-CAPS">UPDATE_CHANGES</link>
#define     <link linkend="UPDATE-REFRESH-CAPS">UPDATE_REFRESH</link>
#define     <link linkend="UPDATE-SCROLLBACK-CAPS">UPDATE_SCROLLBACK</link>
typedef     <link linkend="uint32">uint32</link>;
#define     <link linkend="VTPARAM-MAXARGS-CAPS">VTPARAM_MAXARGS</link>
#define     <link linkend="VTPARAM-ARGMAX-CAPS">VTPARAM_ARGMAX</link>
#define     <link linkend="VT-LINE-SIZE-CAPS">VT_LINE_SIZE</link>                    (width)
enum        <link linkend="VTTITLE-TYPE-CAPS">VTTITLE_TYPE</link>;
#define     <link linkend="VTATTR-BOLD-CAPS">VTATTR_BOLD</link>
#define     <link linkend="VTATTR-UNDERLINE-CAPS">VTATTR_UNDERLINE</link>
#define     <link linkend="VTATTR-BLINK-CAPS">VTATTR_BLINK</link>
#define     <link linkend="VTATTR-REVERSE-CAPS">VTATTR_REVERSE</link>
#define     <link linkend="VTATTR-CONCEALED-CAPS">VTATTR_CONCEALED</link>
#define     <link linkend="VTATTR-MASK-CAPS">VTATTR_MASK</link>
#define     <link linkend="VTATTR-DATAMASK-CAPS">VTATTR_DATAMASK</link>
#define     <link linkend="VTATTR-CLEARMASK-CAPS">VTATTR_CLEARMASK</link>
#define     <link linkend="VTATTR-FORECOLOURM-CAPS">VTATTR_FORECOLOURM</link>
#define     <link linkend="VTATTR-BACKCOLOURM-CAPS">VTATTR_BACKCOLOURM</link>
#define     <link linkend="VTATTR-FORECOLOURB-CAPS">VTATTR_FORECOLOURB</link>
#define     <link linkend="VTATTR-BACKCOLOURB-CAPS">VTATTR_BACKCOLOURB</link>
#define     <link linkend="VTATTR-CLEAR-CAPS">VTATTR_CLEAR</link>
#define     <link linkend="VTMODE-INSERT-CAPS">VTMODE_INSERT</link>
#define     <link linkend="VTMODE-SEND-MOUSE-CAPS">VTMODE_SEND_MOUSE</link>
#define     <link linkend="VTMODE-WRAPOFF-CAPS">VTMODE_WRAPOFF</link>
#define     <link linkend="VTMODE-APP-CURSOR-CAPS">VTMODE_APP_CURSOR</link>
#define     <link linkend="VTMODE-RELATIVE-CAPS">VTMODE_RELATIVE</link>
#define     <link linkend="VTMODE-ALTSCREEN-CAPS">VTMODE_ALTSCREEN</link>
void        <link linkend="vt-destroy">vt_destroy</link>                      (struct <link linkend="vt-em">vt_em</link> *vt);
void        <link linkend="vt-resize">vt_resize</link>                       (struct <link linkend="vt-em">vt_em</link> *vt,
                                             int width,
                                             int height,
                                             int pixwidth,
                                             int pixheight);
void        <link linkend="vt-parse-vt">vt_parse_vt</link>                     (struct <link linkend="vt-em">vt_em</link> *vt,
                                             char *ptr,
                                             int length);
void        <link linkend="vt-swap-buffers">vt_swap_buffers</link>                 (struct <link linkend="vt-em">vt_em</link> *vt);
<link linkend="pid-t">pid_t</link>       <link linkend="vt-forkpty">vt_forkpty</link>                      (struct <link linkend="vt-em">vt_em</link> *vt,
                                             int do_uwtmp_log);
int         <link linkend="vt-readchild">vt_readchild</link>                    (struct <link linkend="vt-em">vt_em</link> *vt,
                                             char *buffer,
                                             int len);
int         <link linkend="vt-writechild">vt_writechild</link>                   (struct <link linkend="vt-em">vt_em</link> *vt,
                                             char *buffer,
                                             int len);
int         <link linkend="vt-report-button">vt_report_button</link>                (struct <link linkend="vt-em">vt_em</link> *vt,
                                             int button,
                                             int qual,
                                             int x,
                                             int y);
void        <link linkend="vt-scrollback-set">vt_scrollback_set</link>               (struct <link linkend="vt-em">vt_em</link> *vt,
                                             int lines);
int         <link linkend="vt-killchild">vt_killchild</link>                    (struct <link linkend="vt-em">vt_em</link> *vt,
                                             int signal);
int         <link linkend="vt-closepty">vt_closepty</link>                     (struct <link linkend="vt-em">vt_em</link> *vt);
</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>
A longer description goes here.
</para>

</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="UPDATE-CHANGES-CAPS">UPDATE_CHANGES</title>
<programlisting>#define     UPDATE_CHANGES</programlisting>
</refsect2>
<refsect2>
<title><anchor id="UPDATE-REFRESH-CAPS">UPDATE_REFRESH</title>
<programlisting>#define     UPDATE_REFRESH</programlisting>
</refsect2>
<refsect2>
<title><anchor id="UPDATE-SCROLLBACK-CAPS">UPDATE_SCROLLBACK</title>
<programlisting>#define     UPDATE_SCROLLBACK</programlisting>
</refsect2>
<refsect2>
<title><anchor id="uint32">uint32</title>
<programlisting>typedef unsigned int uint32;
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTPARAM-MAXARGS-CAPS">VTPARAM_MAXARGS</title>
<programlisting>#define VTPARAM_MAXARGS   5	/* maximum number of arguments */
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTPARAM-ARGMAX-CAPS">VTPARAM_ARGMAX</title>
<programlisting>#define VTPARAM_ARGMAX   20	/* number of characters in each arg maximum */
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VT-LINE-SIZE-CAPS">VT_LINE_SIZE()</title>
<programlisting>#define VT_LINE_SIZE(width) (sizeof(struct vt_line) + (sizeof(uint32) * (width)))
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTTITLE-TYPE-CAPS">enum VTTITLE_TYPE</title>
<programlisting>typedef enum {
  VTTITLE_WINDOWICON=0,
  VTTITLE_ICON,
  VTTITLE_WINDOW
} VTTITLE_TYPE;
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTATTR-BOLD-CAPS">VTATTR_BOLD</title>
<programlisting>#define VTATTR_BOLD       0x40000000
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTATTR-UNDERLINE-CAPS">VTATTR_UNDERLINE</title>
<programlisting>#define VTATTR_UNDERLINE  0x20000000
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTATTR-BLINK-CAPS">VTATTR_BLINK</title>
<programlisting>#define VTATTR_BLINK      0x10000000
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTATTR-REVERSE-CAPS">VTATTR_REVERSE</title>
<programlisting>#define VTATTR_REVERSE    0x08000000
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTATTR-CONCEALED-CAPS">VTATTR_CONCEALED</title>
<programlisting>#define VTATTR_CONCEALED  0x04000000
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTATTR-MASK-CAPS">VTATTR_MASK</title>
<programlisting>#define VTATTR_MASK	  0xffff0000
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTATTR-DATAMASK-CAPS">VTATTR_DATAMASK</title>
<programlisting>#define VTATTR_DATAMASK	  (~VTATTR_MASK)
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTATTR-CLEARMASK-CAPS">VTATTR_CLEARMASK</title>
<programlisting>#define VTATTR_CLEARMASK  (~(VTATTR_BOLD|VTATTR_UNDERLINE|VTATTR_BLINK|VTATTR_REVERSE))
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTATTR-FORECOLOURM-CAPS">VTATTR_FORECOLOURM</title>
<programlisting>#define VTATTR_FORECOLOURM 0x03e00000
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTATTR-BACKCOLOURM-CAPS">VTATTR_BACKCOLOURM</title>
<programlisting>#define VTATTR_BACKCOLOURM 0x001f0000
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTATTR-FORECOLOURB-CAPS">VTATTR_FORECOLOURB</title>
<programlisting>#define VTATTR_FORECOLOURB 21
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTATTR-BACKCOLOURB-CAPS">VTATTR_BACKCOLOURB</title>
<programlisting>#define VTATTR_BACKCOLOURB 16
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTATTR-CLEAR-CAPS">VTATTR_CLEAR</title>
<programlisting>#define VTATTR_CLEAR (16&lt;&lt;VTATTR_FORECOLOURB)|(17&lt;&lt;VTATTR_BACKCOLOURB)|0x0000
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTMODE-INSERT-CAPS">VTMODE_INSERT</title>
<programlisting>#define VTMODE_INSERT 0x00000001 /* insert mode active */
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTMODE-SEND-MOUSE-CAPS">VTMODE_SEND_MOUSE</title>
<programlisting>#define VTMODE_SEND_MOUSE 0x00000002 /* send mouse clicks */
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTMODE-WRAPOFF-CAPS">VTMODE_WRAPOFF</title>
<programlisting>#define VTMODE_WRAPOFF 0x04	/* wrap screenmode? (default = on) */
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTMODE-APP-CURSOR-CAPS">VTMODE_APP_CURSOR</title>
<programlisting>#define VTMODE_APP_CURSOR 0x00000008 /* application cursor keys */
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTMODE-RELATIVE-CAPS">VTMODE_RELATIVE</title>
<programlisting>#define VTMODE_RELATIVE 0x10	/* relative origin mode */
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="VTMODE-ALTSCREEN-CAPS">VTMODE_ALTSCREEN</title>
<programlisting>#define VTMODE_ALTSCREEN 0x80000000 /* on alternate screen? */
</programlisting>
</refsect2>
<refsect2>
<title><anchor id="vt-destroy">vt_destroy ()</title>
<programlisting>void        vt_destroy                      (struct <link linkend="vt-em">vt_em</link> *vt);</programlisting>
</refsect2>
<refsect2>
<title><anchor id="vt-resize">vt_resize ()</title>
<programlisting>void        vt_resize                       (struct <link linkend="vt-em">vt_em</link> *vt,
                                             int width,
                                             int height,
                                             int pixwidth,
                                             int pixheight);</programlisting>
</refsect2>
<refsect2>
<title><anchor id="vt-parse-vt">vt_parse_vt ()</title>
<programlisting>void        vt_parse_vt                     (struct <link linkend="vt-em">vt_em</link> *vt,
                                             char *ptr,
                                             int length);</programlisting>
</refsect2>
<refsect2>
<title><anchor id="vt-swap-buffers">vt_swap_buffers ()</title>
<programlisting>void        vt_swap_buffers                 (struct <link linkend="vt-em">vt_em</link> *vt);</programlisting>
</refsect2>
<refsect2>
<title><anchor id="vt-forkpty">vt_forkpty ()</title>
<programlisting><link linkend="pid-t">pid_t</link>       vt_forkpty                      (struct <link linkend="vt-em">vt_em</link> *vt,
                                             int do_uwtmp_log);</programlisting>
</refsect2>
<refsect2>
<title><anchor id="vt-readchild">vt_readchild ()</title>
<programlisting>int         vt_readchild                    (struct <link linkend="vt-em">vt_em</link> *vt,
                                             char *buffer,
                                             int len);</programlisting>
</refsect2>
<refsect2>
<title><anchor id="vt-writechild">vt_writechild ()</title>
<programlisting>int         vt_writechild                   (struct <link linkend="vt-em">vt_em</link> *vt,
                                             char *buffer,
                                             int len);</programlisting>
</refsect2>
<refsect2>
<title><anchor id="vt-report-button">vt_report_button ()</title>
<programlisting>int         vt_report_button                (struct <link linkend="vt-em">vt_em</link> *vt,
                                             int button,
                                             int qual,
                                             int x,
                                             int y);</programlisting>
</refsect2>
<refsect2>
<title><anchor id="vt-scrollback-set">vt_scrollback_set ()</title>
<programlisting>void        vt_scrollback_set               (struct <link linkend="vt-em">vt_em</link> *vt,
                                             int lines);</programlisting>
</refsect2>
<refsect2>
<title><anchor id="vt-killchild">vt_killchild ()</title>
<programlisting>int         vt_killchild                    (struct <link linkend="vt-em">vt_em</link> *vt,
                                             int signal);</programlisting>
</refsect2>
<refsect2>
<title><anchor id="vt-closepty">vt_closepty ()</title>
<programlisting>int         vt_closepty                     (struct <link linkend="vt-em">vt_em</link> *vt);</programlisting>
</refsect2>

</refsect1>




</refentry>
