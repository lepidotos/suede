<refentry id="zvt-gnome-login-support">
<refmeta>
<refentrytitle>gnome-login-support</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>ZVT Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gnome-login-support</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



void        <link linkend="login">login</link>                           (struct <link linkend="utmp">utmp</link> *ut);
int         <link linkend="login-tty">login_tty</link>                       (int fd);
int         <link linkend="logout">logout</link>                          (char *line);
void        <link linkend="logwtmp">logwtmp</link>                         (const char *line,
                                             const char *name,
                                             const char *host);
int         <link linkend="openpty">openpty</link>                         (int *amaster,
                                             int *aslave,
                                             char *name,
                                             struct <link linkend="termios">termios</link> *termp,
                                             struct <link linkend="winsize">winsize</link> *winp);
int         <link linkend="forkpty">forkpty</link>                         (int *amaster,
                                             char *name,
                                             struct <link linkend="termios">termios</link> *termp,
                                             struct <link linkend="winsize">winsize</link> *winp);
int         <link linkend="n-read">n_read</link>                          (int fd,
                                             void *buffer,
                                             int size);
</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>
A longer description goes here.
</para>

</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="login">login ()</title>
<programlisting>void        login                           (struct <link linkend="utmp">utmp</link> *ut);</programlisting>
</refsect2>
<refsect2>
<title><anchor id="login-tty">login_tty ()</title>
<programlisting>int         login_tty                       (int fd);</programlisting>
</refsect2>
<refsect2>
<title><anchor id="logout">logout ()</title>
<programlisting>int         logout                          (char *line);</programlisting>
</refsect2>
<refsect2>
<title><anchor id="logwtmp">logwtmp ()</title>
<programlisting>void        logwtmp                         (const char *line,
                                             const char *name,
                                             const char *host);</programlisting>
</refsect2>
<refsect2>
<title><anchor id="openpty">openpty ()</title>
<programlisting>int         openpty                         (int *amaster,
                                             int *aslave,
                                             char *name,
                                             struct <link linkend="termios">termios</link> *termp,
                                             struct <link linkend="winsize">winsize</link> *winp);</programlisting>
</refsect2>
<refsect2>
<title><anchor id="forkpty">forkpty ()</title>
<programlisting>int         forkpty                         (int *amaster,
                                             char *name,
                                             struct <link linkend="termios">termios</link> *termp,
                                             struct <link linkend="winsize">winsize</link> *winp);</programlisting>
</refsect2>
<refsect2>
<title><anchor id="n-read">n_read ()</title>
<programlisting>int         n_read                          (int fd,
                                             void *buffer,
                                             int size);</programlisting>
</refsect2>

</refsect1>




</refentry>
