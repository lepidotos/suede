<refentry id="GnomePixmap">
<refmeta>
<refentrytitle>GnomePixmap</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GNOMEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GnomePixmap</refname><refpurpose>A widget to display and load images (pixmaps)</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>

#include &lt;gnome.h&gt;


struct      <link linkend="GnomePixmap-struct">GnomePixmap</link>;
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-pixmap-new-from-file">gnome_pixmap_new_from_file</link>      (const char *filename);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-pixmap-new-from-file-at-size">gnome_pixmap_new_from_file_at_size</link>
                                            (const char *filename,
                                             int width,
                                             int height);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-pixmap-new-from-xpm-d">gnome_pixmap_new_from_xpm_d</link>     (char **xpm_data);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-pixmap-new-from-xpm-d-at-size">gnome_pixmap_new_from_xpm_d_at_size</link>
                                            (char **xpm_data,
                                             int width,
                                             int height);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-pixmap-new-from-rgb-d">gnome_pixmap_new_from_rgb_d</link>     (unsigned char *data,
                                             unsigned char *alpha,
                                             int rgb_width,
                                             int rgb_height);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-pixmap-new-from-rgb-d-shaped">gnome_pixmap_new_from_rgb_d_shaped</link>
                                            (unsigned char *data,
                                             unsigned char *alpha,
                                             int rgb_width,
                                             int rgb_height,
                                             <link linkend="GdkImlibColor">GdkImlibColor</link> *shape_color);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-pixmap-new-from-rgb-d-shaped-at-size">gnome_pixmap_new_from_rgb_d_shaped_at_size</link>
                                            (unsigned char *data,
                                             unsigned char *alpha,
                                             int rgb_width,
                                             int rgb_height,
                                             int width,
                                             int height,
                                             <link linkend="GdkImlibColor">GdkImlibColor</link> *shape_color);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-pixmap-new-from-rgb-d-at-size">gnome_pixmap_new_from_rgb_d_at_size</link>
                                            (unsigned char *data,
                                             unsigned char *alpha,
                                             int rgb_width,
                                             int rgb_height,
                                             int width,
                                             int height);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-pixmap-new-from-gnome-pixmap">gnome_pixmap_new_from_gnome_pixmap</link>
                                            (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-pixmap-new-from-imlib">gnome_pixmap_new_from_imlib</link>     (<link linkend="GdkImlibImage">GdkImlibImage</link> *im);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-pixmap-new-from-imlib-at-size">gnome_pixmap_new_from_imlib_at_size</link>
                                            (<link linkend="GdkImlibImage">GdkImlibImage</link> *im,
                                             int width,
                                             int height);
void        <link linkend="gnome-pixmap-load-file">gnome_pixmap_load_file</link>          (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             const char *filename);
void        <link linkend="gnome-pixmap-load-file-at-size">gnome_pixmap_load_file_at_size</link>  (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             const char *filename,
                                             int width,
                                             int height);
void        <link linkend="gnome-pixmap-load-xpm-d">gnome_pixmap_load_xpm_d</link>         (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             char **xpm_data);
void        <link linkend="gnome-pixmap-load-xpm-d-at-size">gnome_pixmap_load_xpm_d_at_size</link> (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             char **xpm_data,
                                             int width,
                                             int height);
void        <link linkend="gnome-pixmap-load-rgb-d">gnome_pixmap_load_rgb_d</link>         (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             unsigned char *data,
                                             unsigned char *alpha,
                                             int rgb_width,
                                             int rgb_height);
void        <link linkend="gnome-pixmap-load-rgb-d-shaped">gnome_pixmap_load_rgb_d_shaped</link>  (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             unsigned char *data,
                                             unsigned char *alpha,
                                             int rgb_width,
                                             int rgb_height,
                                             <link linkend="GdkImlibColor">GdkImlibColor</link> *shape_color);
void        <link linkend="gnome-pixmap-load-rgb-d-shaped-at-size">gnome_pixmap_load_rgb_d_shaped_at_size</link>
                                            (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             unsigned char *data,
                                             unsigned char *alpha,
                                             int rgb_width,
                                             int rgb_height,
                                             int width,
                                             int height,
                                             <link linkend="GdkImlibColor">GdkImlibColor</link> *shape_color);
void        <link linkend="gnome-pixmap-load-rgb-d-at-size">gnome_pixmap_load_rgb_d_at_size</link> (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             unsigned char *data,
                                             unsigned char *alpha,
                                             int rgb_width,
                                             int rgb_height,
                                             int width,
                                             int height);
void        <link linkend="gnome-pixmap-load-imlib">gnome_pixmap_load_imlib</link>         (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             <link linkend="GdkImlibImage">GdkImlibImage</link> *im);
void        <link linkend="gnome-pixmap-load-imlib-at-size">gnome_pixmap_load_imlib_at_size</link> (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             <link linkend="GdkImlibImage">GdkImlibImage</link> *im,
                                             int width,
                                             int height);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GtkObject">GtkObject</link>
   +----<link linkend="GtkWidget">GtkWidget</link>
         +----GnomePixmap
</synopsis>

</refsect1>




<refsect1>
<title>Description</title>
  <para>
    This widget can display an image created or provided by a number
    of sources (a file from various supported file formats, memory,
    in-memory-xpm, Imlib handle, RGB buffer) and it can scale the
    image during the load process.
  </para>

  <para>
    The <link linkend="GnomePixmap">GnomePixmap</link> widget is particularly useful, as it load an
    image and provides it as a <link linkend="GtkWidget">GtkWidget</link>.  While doing this, it does
    also make sure that the visuals and colormaps are correctly set so
    that the application will work properly on multi-depth display
    machines. 
  </para>

  <para>
    You should use this widget instead of the less powerful and more
    error-prone GtkPixmap widget.
  </para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GnomePixmap-struct">struct GnomePixmap</title>
<programlisting>struct GnomePixmap;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-new-from-file">gnome_pixmap_new_from_file ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_pixmap_new_from_file      (const char *filename);</programlisting>
<para>
Returns a widget that contains the image, or <literal>NULL</literal>
if it fails to load the image.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>filename</parameter>&nbsp;:</entry>
<entry> The name of a file containing a graphics image
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> A new <link linkend="GnomePixmap">GnomePixmap</link> widget or <literal>NULL</literal>
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-new-from-file-at-size">gnome_pixmap_new_from_file_at_size ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_pixmap_new_from_file_at_size
                                            (const char *filename,
                                             int width,
                                             int height);</programlisting>
<para>
Returns a widget that contains the image scaled to
<parameter>width</parameter> by <parameter>height</parameter> pixels, or <literal>NULL</literal> if it fails to load the image.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>filename</parameter>&nbsp;:</entry>
<entry> The name of a file containing a graphics image
</entry></row>
<row><entry align="right"><parameter>width</parameter>&nbsp;:</entry>
<entry> desired width
</entry></row>
<row><entry align="right"><parameter>height</parameter>&nbsp;:</entry>
<entry> desired height.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> A new <link linkend="GnomePixmap">GnomePixmap</link> widget or <literal>NULL</literal>
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-new-from-xpm-d">gnome_pixmap_new_from_xpm_d ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_pixmap_new_from_xpm_d     (char **xpm_data);</programlisting>
<para>
Returns a widget that contains the image, or <literal>NULL</literal>
if it fails to load the image.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>xpm_data</parameter>&nbsp;:</entry>
<entry> A pointer to an inlined xpm image.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> A new <link linkend="GnomePixmap">GnomePixmap</link> widget or <literal>NULL</literal>
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-new-from-xpm-d-at-size">gnome_pixmap_new_from_xpm_d_at_size ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_pixmap_new_from_xpm_d_at_size
                                            (char **xpm_data,
                                             int width,
                                             int height);</programlisting>
<para>
Returns a widget that contains the image scaled to
<parameter>width</parameter> by <parameter>height</parameter> pixels, or <literal>NULL</literal> if it fails to load the image.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>xpm_data</parameter>&nbsp;:</entry>
<entry> A pointer to an inlined xpm image.
</entry></row>
<row><entry align="right"><parameter>width</parameter>&nbsp;:</entry>
<entry> desired widht
</entry></row>
<row><entry align="right"><parameter>height</parameter>&nbsp;:</entry>
<entry> desired height.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> A new <link linkend="GnomePixmap">GnomePixmap</link> widget or <literal>NULL</literal>
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-new-from-rgb-d">gnome_pixmap_new_from_rgb_d ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_pixmap_new_from_rgb_d     (unsigned char *data,
                                             unsigned char *alpha,
                                             int rgb_width,
                                             int rgb_height);</programlisting>
<para>
Returns a widget that contains the image, or <literal>NULL</literal>
if it fails to load the image.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>data</parameter>&nbsp;:</entry>
<entry> A pointer to an inlined rgb image.
</entry></row>
<row><entry align="right"><parameter>alpha</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>rgb_width</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>rgb_height</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> A new <link linkend="GnomePixmap">GnomePixmap</link> widget or <literal>NULL</literal>
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-new-from-rgb-d-shaped">gnome_pixmap_new_from_rgb_d_shaped ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_pixmap_new_from_rgb_d_shaped
                                            (unsigned char *data,
                                             unsigned char *alpha,
                                             int rgb_width,
                                             int rgb_height,
                                             <link linkend="GdkImlibColor">GdkImlibColor</link> *shape_color);</programlisting>
<para>
Returns a widget that contains the image, or <literal>NULL</literal>
if it fails to load the image.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>data</parameter>&nbsp;:</entry>
<entry> A pointer to an inlined rgb image
</entry></row>
<row><entry align="right"><parameter>alpha</parameter>&nbsp;:</entry>
<entry> pointer to the alpha channel.
</entry></row>
<row><entry align="right"><parameter>rgb_width</parameter>&nbsp;:</entry>
<entry> width of the rgb data
</entry></row>
<row><entry align="right"><parameter>rgb_height</parameter>&nbsp;:</entry>
<entry> height of the rgb data.
</entry></row>
<row><entry align="right"><parameter>shape_color</parameter>&nbsp;:</entry>
<entry> which color encodes the transparency
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> A new <link linkend="GnomePixmap">GnomePixmap</link> widget or <literal>NULL</literal>
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-new-from-rgb-d-shaped-at-size">gnome_pixmap_new_from_rgb_d_shaped_at_size ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_pixmap_new_from_rgb_d_shaped_at_size
                                            (unsigned char *data,
                                             unsigned char *alpha,
                                             int rgb_width,
                                             int rgb_height,
                                             int width,
                                             int height,
                                             <link linkend="GdkImlibColor">GdkImlibColor</link> *shape_color);</programlisting>
<para>
Returns a widget that contains the image scaled to
<parameter>width</parameter> by <parameter>height</parameter> pixels, or <literal>NULL</literal> if it fails to load the image.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>data</parameter>&nbsp;:</entry>
<entry> A pointer to an inlined rgb image
</entry></row>
<row><entry align="right"><parameter>alpha</parameter>&nbsp;:</entry>
<entry> pointer to the alpha channel.
</entry></row>
<row><entry align="right"><parameter>rgb_width</parameter>&nbsp;:</entry>
<entry> width of the rgb data
</entry></row>
<row><entry align="right"><parameter>rgb_height</parameter>&nbsp;:</entry>
<entry> height of the rgb data.
</entry></row>
<row><entry align="right"><parameter>width</parameter>&nbsp;:</entry>
<entry> desired width.
</entry></row>
<row><entry align="right"><parameter>height</parameter>&nbsp;:</entry>
<entry> desired height.
</entry></row>
<row><entry align="right"><parameter>shape_color</parameter>&nbsp;:</entry>
<entry> which color encodes the transparency
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> A new <link linkend="GnomePixmap">GnomePixmap</link> widget or <literal>NULL</literal>
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-new-from-rgb-d-at-size">gnome_pixmap_new_from_rgb_d_at_size ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_pixmap_new_from_rgb_d_at_size
                                            (unsigned char *data,
                                             unsigned char *alpha,
                                             int rgb_width,
                                             int rgb_height,
                                             int width,
                                             int height);</programlisting>
<para>
Returns a widget that contains the image scaled to
<parameter>width</parameter> by <parameter>height</parameter> pixels, or <literal>NULL</literal> if it fails to load the image.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>data</parameter>&nbsp;:</entry>
<entry> A pointer to an inlined rgb image.
</entry></row>
<row><entry align="right"><parameter>alpha</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>rgb_width</parameter>&nbsp;:</entry>
<entry> the width of the rgb image.
</entry></row>
<row><entry align="right"><parameter>rgb_height</parameter>&nbsp;:</entry>
<entry> the height of the rgb image.
</entry></row>
<row><entry align="right"><parameter>width</parameter>&nbsp;:</entry>
<entry> desired width.
</entry></row>
<row><entry align="right"><parameter>height</parameter>&nbsp;:</entry>
<entry> desired height.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> A new <link linkend="GnomePixmap">GnomePixmap</link> widget or <literal>NULL</literal>
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-new-from-gnome-pixmap">gnome_pixmap_new_from_gnome_pixmap ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_pixmap_new_from_gnome_pixmap
                                            (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap);</programlisting>
<para>
Returns a widget that contains a copy of <parameter>gpixmap_old</parameter></para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gpixmap</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> A new <link linkend="GnomePixmap">GnomePixmap</link> widget
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-new-from-imlib">gnome_pixmap_new_from_imlib ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_pixmap_new_from_imlib     (<link linkend="GdkImlibImage">GdkImlibImage</link> *im);</programlisting>
<para>
Returns a widget that contains the image, or <literal>NULL</literal>
if it fails to load the image. Note that <parameter>im</parameter> will not be
rendered after this call.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>im</parameter>&nbsp;:</entry>
<entry> A pointer to GdkImlibImage data
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> A new <link linkend="GnomePixmap">GnomePixmap</link> widget or <literal>NULL</literal>
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-new-from-imlib-at-size">gnome_pixmap_new_from_imlib_at_size ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_pixmap_new_from_imlib_at_size
                                            (<link linkend="GdkImlibImage">GdkImlibImage</link> *im,
                                             int width,
                                             int height);</programlisting>
<para>
Returns a widget that contains the image scaled to
<parameter>width</parameter> by <parameter>height</parameter> pixels, or <literal>NULL</literal> if it fails to load the image.
Note that <parameter>im</parameter> will not be * rendered after this call.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>im</parameter>&nbsp;:</entry>
<entry> A pointer to GdkImlibImage data
</entry></row>
<row><entry align="right"><parameter>width</parameter>&nbsp;:</entry>
<entry> desired width.
</entry></row>
<row><entry align="right"><parameter>height</parameter>&nbsp;:</entry>
<entry> desired height.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> A new <link linkend="GnomePixmap">GnomePixmap</link> widget or <literal>NULL</literal>
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-load-file">gnome_pixmap_load_file ()</title>
<programlisting>void        gnome_pixmap_load_file          (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             const char *filename);</programlisting>
<para>
Sets the gnome pixmap to image stored
in <parameter>filename</parameter>.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gpixmap</parameter>&nbsp;:</entry>
<entry> the <link linkend="GnomePixmap">GnomePixmap</link> widget
</entry></row>
<row><entry align="right"><parameter>filename</parameter>&nbsp;:</entry>
<entry> a new filename
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-load-file-at-size">gnome_pixmap_load_file_at_size ()</title>
<programlisting>void        gnome_pixmap_load_file_at_size  (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             const char *filename,
                                             int width,
                                             int height);</programlisting>
<para>
Sets the gnome pixmap to image stored in
<parameter>filename</parameter> scaled to <parameter>width</parameter> and <parameter>height</parameter> pixels.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gpixmap</parameter>&nbsp;:</entry>
<entry> the <link linkend="GnomePixmap">GnomePixmap</link> widget
</entry></row>
<row><entry align="right"><parameter>filename</parameter>&nbsp;:</entry>
<entry> a new filename
</entry></row>
<row><entry align="right"><parameter>width</parameter>&nbsp;:</entry>
<entry> desired width.
</entry></row>
<row><entry align="right"><parameter>height</parameter>&nbsp;:</entry>
<entry> desired height.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-load-xpm-d">gnome_pixmap_load_xpm_d ()</title>
<programlisting>void        gnome_pixmap_load_xpm_d         (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             char **xpm_data);</programlisting>
<para>
Sets the gnome pixmap to image stored in <parameter>xpm_data</parameter>.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gpixmap</parameter>&nbsp;:</entry>
<entry> the <link linkend="GnomePixmap">GnomePixmap</link> widget
</entry></row>
<row><entry align="right"><parameter>xpm_data</parameter>&nbsp;:</entry>
<entry> xpm image data
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-load-xpm-d-at-size">gnome_pixmap_load_xpm_d_at_size ()</title>
<programlisting>void        gnome_pixmap_load_xpm_d_at_size (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             char **xpm_data,
                                             int width,
                                             int height);</programlisting>
<para>
Sets the gnome pixmap to image stored in
<parameter>xpm_data</parameter> scaled to <parameter>width</parameter> and <parameter>height</parameter> pixels.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gpixmap</parameter>&nbsp;:</entry>
<entry> the <link linkend="GnomePixmap">GnomePixmap</link> widget
</entry></row>
<row><entry align="right"><parameter>xpm_data</parameter>&nbsp;:</entry>
<entry> xpm image data
</entry></row>
<row><entry align="right"><parameter>width</parameter>&nbsp;:</entry>
<entry> desired width.
</entry></row>
<row><entry align="right"><parameter>height</parameter>&nbsp;:</entry>
<entry> desired height.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-load-rgb-d">gnome_pixmap_load_rgb_d ()</title>
<programlisting>void        gnome_pixmap_load_rgb_d         (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             unsigned char *data,
                                             unsigned char *alpha,
                                             int rgb_width,
                                             int rgb_height);</programlisting>
<para>
Sets the gnome pixmap to the image.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gpixmap</parameter>&nbsp;:</entry>
<entry> the <link linkend="GnomePixmap">GnomePixmap</link> widget
</entry></row>
<row><entry align="right"><parameter>data</parameter>&nbsp;:</entry>
<entry> A pointer to an inlined rgb image.
</entry></row>
<row><entry align="right"><parameter>alpha</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>rgb_width</parameter>&nbsp;:</entry>
<entry> the width of the rgb image.
</entry></row>
<row><entry align="right"><parameter>rgb_height</parameter>&nbsp;:</entry>
<entry> the height of the rgb image.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-load-rgb-d-shaped">gnome_pixmap_load_rgb_d_shaped ()</title>
<programlisting>void        gnome_pixmap_load_rgb_d_shaped  (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             unsigned char *data,
                                             unsigned char *alpha,
                                             int rgb_width,
                                             int rgb_height,
                                             <link linkend="GdkImlibColor">GdkImlibColor</link> *shape_color);</programlisting>
<para>
Sets the gnome pixmap to the image.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gpixmap</parameter>&nbsp;:</entry>
<entry> the <link linkend="GnomePixmap">GnomePixmap</link> widget
</entry></row>
<row><entry align="right"><parameter>data</parameter>&nbsp;:</entry>
<entry> A pointer to an inlined rgb image.
</entry></row>
<row><entry align="right"><parameter>alpha</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>rgb_width</parameter>&nbsp;:</entry>
<entry> the width of the rgb image.
</entry></row>
<row><entry align="right"><parameter>rgb_height</parameter>&nbsp;:</entry>
<entry> the height of the rgb image.
</entry></row>
<row><entry align="right"><parameter>shape_color</parameter>&nbsp;:</entry>
<entry> which color encodes the transparency
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-load-rgb-d-shaped-at-size">gnome_pixmap_load_rgb_d_shaped_at_size ()</title>
<programlisting>void        gnome_pixmap_load_rgb_d_shaped_at_size
                                            (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             unsigned char *data,
                                             unsigned char *alpha,
                                             int rgb_width,
                                             int rgb_height,
                                             int width,
                                             int height,
                                             <link linkend="GdkImlibColor">GdkImlibColor</link> *shape_color);</programlisting>
<para>
Sets the gnome pixmap to the image scaled to
<parameter>width</parameter> and <parameter>height</parameter> pixels.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gpixmap</parameter>&nbsp;:</entry>
<entry> the <link linkend="GnomePixmap">GnomePixmap</link> widget
</entry></row>
<row><entry align="right"><parameter>data</parameter>&nbsp;:</entry>
<entry> A pointer to an inlined rgb image.
</entry></row>
<row><entry align="right"><parameter>alpha</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>rgb_width</parameter>&nbsp;:</entry>
<entry> the width of the rgb image.
</entry></row>
<row><entry align="right"><parameter>rgb_height</parameter>&nbsp;:</entry>
<entry> the height of the rgb image.
</entry></row>
<row><entry align="right"><parameter>width</parameter>&nbsp;:</entry>
<entry> desired width.
</entry></row>
<row><entry align="right"><parameter>height</parameter>&nbsp;:</entry>
<entry> desired height.
</entry></row>
<row><entry align="right"><parameter>shape_color</parameter>&nbsp;:</entry>
<entry> which color encodes the transparency
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-load-rgb-d-at-size">gnome_pixmap_load_rgb_d_at_size ()</title>
<programlisting>void        gnome_pixmap_load_rgb_d_at_size (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             unsigned char *data,
                                             unsigned char *alpha,
                                             int rgb_width,
                                             int rgb_height,
                                             int width,
                                             int height);</programlisting>
<para>
Sets the gnome pixmap to the image scaled to
<parameter>width</parameter> and <parameter>height</parameter> pixels.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gpixmap</parameter>&nbsp;:</entry>
<entry> the <link linkend="GnomePixmap">GnomePixmap</link> widget
</entry></row>
<row><entry align="right"><parameter>data</parameter>&nbsp;:</entry>
<entry> A pointer to an inlined rgb image.
</entry></row>
<row><entry align="right"><parameter>alpha</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>rgb_width</parameter>&nbsp;:</entry>
<entry> the width of the rgb image.
</entry></row>
<row><entry align="right"><parameter>rgb_height</parameter>&nbsp;:</entry>
<entry> the height of the rgb image.
</entry></row>
<row><entry align="right"><parameter>width</parameter>&nbsp;:</entry>
<entry> desired width.
</entry></row>
<row><entry align="right"><parameter>height</parameter>&nbsp;:</entry>
<entry> desired height.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-load-imlib">gnome_pixmap_load_imlib ()</title>
<programlisting>void        gnome_pixmap_load_imlib         (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             <link linkend="GdkImlibImage">GdkImlibImage</link> *im);</programlisting>
<para>
Sets the gnome pixmap to image stored in <parameter>im</parameter>. Note
that <parameter>im</parameter> will not be rendered after this call.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gpixmap</parameter>&nbsp;:</entry>
<entry> the <link linkend="GnomePixmap">GnomePixmap</link> widget
</entry></row>
<row><entry align="right"><parameter>im</parameter>&nbsp;:</entry>
<entry> A pointer to GdkImlibImage data
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-pixmap-load-imlib-at-size">gnome_pixmap_load_imlib_at_size ()</title>
<programlisting>void        gnome_pixmap_load_imlib_at_size (<link linkend="GnomePixmap">GnomePixmap</link> *gpixmap,
                                             <link linkend="GdkImlibImage">GdkImlibImage</link> *im,
                                             int width,
                                             int height);</programlisting>
<para>
Sets the gnome pixmap to image stored in <parameter>im</parameter>
scaled to <parameter>width</parameter> and <parameter>height</parameter> pixels. Note that <parameter>im</parameter> will not
be rendered after this call.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gpixmap</parameter>&nbsp;:</entry>
<entry> the <link linkend="GnomePixmap">GnomePixmap</link> widget
</entry></row>
<row><entry align="right"><parameter>im</parameter>&nbsp;:</entry>
<entry> A pointer to GdkImlibImage data
</entry></row>
<row><entry align="right"><parameter>width</parameter>&nbsp;:</entry>
<entry> desired width.
</entry></row>
<row><entry align="right"><parameter>height</parameter>&nbsp;:</entry>
<entry> desired height.
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>



<refsect1>
<title>See Also</title>
<para>
    GdkImlib
</para>
</refsect1>

</refentry>
