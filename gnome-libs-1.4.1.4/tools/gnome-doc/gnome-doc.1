.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "GNOME-DOC" "1" "09 januar 2002" "" ""
.SH NAME
gnome-doc \- Documentation tool for GNOME
.SH SYNOPSIS

\fBgnome-doc\fR [ \fB -docbook | -html | -text | -man \fR ] [ \fB -function funcname [ -function funcname ...] \fR ] [ \fB c files \fR ]

.SH "DESCRIPTION"
.PP
\fBgnome-doc\fR This will read a 'c' file and scan
for embedded comments in the style of gnome comments (+minor
extensions - see below).
.PP
All output goes to stdout, with errors to stderr.
.SH "OPTIONS"
.TP
\fB-docbook -html -text -man \fR
Set output format using one of -docbook -html -text or -man.
Default is man.
.TP
\fB-function \fR
If set, then only generate documentation for the given
function(s). All other functions are ignored.
.TP
\fBc files \fR
list of 'c' files to process
.SH "FORMAT OF COMMENTS"

.nf
In the following table,

		(...)? signifies optional structure.
		(...)* signifies 0 or more structure elements.

        /**
	 * function_name(:)? (- short description)?
	 * @parameterx: (description of parameter x)?)*
	(* a blank line)?
	 * (Description:)? (Description of function)?
	 * (section header: (section description)? )*
	(*)?*/

      So .. the trivial example would be:
      /**
       * my_function
       **/

      If the Description: header tag is omitted, then there must be a blank
      line after the last parameter specification.
       e.g.
	/**
	 * my_function - does my stuff
	 * @my_arg: its mine damnit
	 *
	 * Does my stuff explained. 
	 */

	or, could also use:
	/**
	 * my_function - does my stuff
	 * @my_arg: its mine damnit
	 * Description: Does my stuff explained. 
	 */
	etc.

	All descriptions can be multiline, apart from the short function
	description.

	All descriptive text is further processed, scanning for the
	following special patterns, which are highlighted appropriately.

	funcname()  - function
	$ENVVAR     - environmental variable
	struct_name - name of a structure
	@parameter  - name of a parameter
	%CONST      - name of a constant.
.fi
.SH "AUTHOR"
.PP
This manual page was written by Christian Marillat <marillat@debian.org> for
the Debian GNU/Linux system (but may be used by others).
