/*
 * This file was generated by orbit-idl - DO NOT EDIT!
 */

#include <glib.h>
#define ORBIT_IDL_SERIAL 9
#include <orb/orbit.h>

#ifndef gnome_factory_H
#define gnome_factory_H 1
#ifdef __cplusplus
extern "C"
{
#endif				/* __cplusplus */

/** typedefs **/
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string) && !defined(_CORBA_sequence_CORBA_string_defined)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define _CORBA_sequence_CORBA_string_defined 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'g'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'm'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_6 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_7 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_8 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_9 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_10 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_11 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_12 'y'
   typedef struct
   {
      CORBA_unsigned_long _maximum,
       _length;
      CORBA_char **_buffer;
      CORBA_boolean _release;
   }
   CORBA_sequence_CORBA_string;
   CORBA_char **CORBA_sequence_CORBA_string_allocbuf(CORBA_unsigned_long len);
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'g'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'm'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_6 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_7 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_8 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_9 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_10 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_11 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_12 'y'
   extern const struct CORBA_TypeCode_struct
      TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
   extern CORBA_sequence_CORBA_string
      *CORBA_sequence_CORBA_string__alloc(void);
   extern gpointer CORBA_sequence_CORBA_string__free(gpointer mem, gpointer dat, CORBA_boolean free_strings);	/* ORBit internal use */
#if !defined(_GNOME_stringlist_defined)
#define _GNOME_stringlist_defined 1
   typedef CORBA_sequence_CORBA_string GNOME_stringlist;
#if !defined(TC_IMPL_TC_GNOME_stringlist_0)
#define TC_IMPL_TC_GNOME_stringlist_0 'g'
#define TC_IMPL_TC_GNOME_stringlist_1 'n'
#define TC_IMPL_TC_GNOME_stringlist_2 'o'
#define TC_IMPL_TC_GNOME_stringlist_3 'm'
#define TC_IMPL_TC_GNOME_stringlist_4 'e'
#define TC_IMPL_TC_GNOME_stringlist_5 '_'
#define TC_IMPL_TC_GNOME_stringlist_6 'f'
#define TC_IMPL_TC_GNOME_stringlist_7 'a'
#define TC_IMPL_TC_GNOME_stringlist_8 'c'
#define TC_IMPL_TC_GNOME_stringlist_9 't'
#define TC_IMPL_TC_GNOME_stringlist_10 'o'
#define TC_IMPL_TC_GNOME_stringlist_11 'r'
#define TC_IMPL_TC_GNOME_stringlist_12 'y'
   extern const struct CORBA_TypeCode_struct TC_GNOME_stringlist_struct;
#define TC_GNOME_stringlist ((CORBA_TypeCode)&TC_GNOME_stringlist_struct)
#endif
   extern GNOME_stringlist *GNOME_stringlist__alloc(void);
   extern gpointer GNOME_stringlist__free(gpointer mem, gpointer dat, CORBA_boolean free_strings);	/* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_GNOME_GenericFactory) && !defined(_GNOME_GenericFactory_defined)
#define ORBIT_DECL_GNOME_GenericFactory 1
#define _GNOME_GenericFactory_defined 1
#define GNOME_GenericFactory__free CORBA_Object__free
   typedef CORBA_Object GNOME_GenericFactory;
   extern CORBA_unsigned_long GNOME_GenericFactory__classid;
#if !defined(TC_IMPL_TC_GNOME_GenericFactory_0)
#define TC_IMPL_TC_GNOME_GenericFactory_0 'g'
#define TC_IMPL_TC_GNOME_GenericFactory_1 'n'
#define TC_IMPL_TC_GNOME_GenericFactory_2 'o'
#define TC_IMPL_TC_GNOME_GenericFactory_3 'm'
#define TC_IMPL_TC_GNOME_GenericFactory_4 'e'
#define TC_IMPL_TC_GNOME_GenericFactory_5 '_'
#define TC_IMPL_TC_GNOME_GenericFactory_6 'f'
#define TC_IMPL_TC_GNOME_GenericFactory_7 'a'
#define TC_IMPL_TC_GNOME_GenericFactory_8 'c'
#define TC_IMPL_TC_GNOME_GenericFactory_9 't'
#define TC_IMPL_TC_GNOME_GenericFactory_10 'o'
#define TC_IMPL_TC_GNOME_GenericFactory_11 'r'
#define TC_IMPL_TC_GNOME_GenericFactory_12 'y'
   extern const struct CORBA_TypeCode_struct TC_GNOME_GenericFactory_struct;
#define TC_GNOME_GenericFactory ((CORBA_TypeCode)&TC_GNOME_GenericFactory_struct)
#endif
#endif
#define ex_GNOME_GenericFactory_CannotActivate "IDL:GNOME/GenericFactory/CannotActivate:1.0"
   void _ORBIT_GNOME_GenericFactory_CannotActivate_demarshal(GIOPRecvBuffer *
							     _ORBIT_recv_buffer,
							     CORBA_Environment
							     * ev);
   void _ORBIT_GNOME_GenericFactory_CannotActivate_marshal(GIOPSendBuffer *
							   _ORBIT_send_buffer,
							   CORBA_Environment *
							   ev);
#if !defined(_GNOME_GenericFactory_CannotActivate_defined)
#define _GNOME_GenericFactory_CannotActivate_defined 1
   typedef struct
   {
      int dummy;
   }
   GNOME_GenericFactory_CannotActivate;

#if !defined(TC_IMPL_TC_GNOME_GenericFactory_CannotActivate_0)
#define TC_IMPL_TC_GNOME_GenericFactory_CannotActivate_0 'g'
#define TC_IMPL_TC_GNOME_GenericFactory_CannotActivate_1 'n'
#define TC_IMPL_TC_GNOME_GenericFactory_CannotActivate_2 'o'
#define TC_IMPL_TC_GNOME_GenericFactory_CannotActivate_3 'm'
#define TC_IMPL_TC_GNOME_GenericFactory_CannotActivate_4 'e'
#define TC_IMPL_TC_GNOME_GenericFactory_CannotActivate_5 '_'
#define TC_IMPL_TC_GNOME_GenericFactory_CannotActivate_6 'f'
#define TC_IMPL_TC_GNOME_GenericFactory_CannotActivate_7 'a'
#define TC_IMPL_TC_GNOME_GenericFactory_CannotActivate_8 'c'
#define TC_IMPL_TC_GNOME_GenericFactory_CannotActivate_9 't'
#define TC_IMPL_TC_GNOME_GenericFactory_CannotActivate_10 'o'
#define TC_IMPL_TC_GNOME_GenericFactory_CannotActivate_11 'r'
#define TC_IMPL_TC_GNOME_GenericFactory_CannotActivate_12 'y'
   extern const struct CORBA_TypeCode_struct
      TC_GNOME_GenericFactory_CannotActivate_struct;
#define TC_GNOME_GenericFactory_CannotActivate ((CORBA_TypeCode)&TC_GNOME_GenericFactory_CannotActivate_struct)
#endif
#define GNOME_GenericFactory_CannotActivate__alloc() NULL
   extern gpointer GNOME_GenericFactory_CannotActivate__free(gpointer mem, gpointer dat, CORBA_boolean free_strings);	/* ORBit internal use */
#endif

/** POA structures **/
   typedef struct
   {
      void *_private;
       CORBA_boolean(*supports) (PortableServer_Servant _servant,
				 const CORBA_char * obj_goad_id,
				 CORBA_Environment * ev);
       CORBA_Object(*create_object) (PortableServer_Servant _servant,
				     const CORBA_char * goad_id,
				     const GNOME_stringlist * params,
				     CORBA_Environment * ev);
   }
   POA_GNOME_GenericFactory__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_GNOME_GenericFactory__epv *GNOME_GenericFactory_epv;
   }
   POA_GNOME_GenericFactory__vepv;
   typedef struct
   {
      void *_private;
      POA_GNOME_GenericFactory__vepv *vepv;
   }
   POA_GNOME_GenericFactory;
   extern void POA_GNOME_GenericFactory__init(PortableServer_Servant servant,
					      CORBA_Environment * ev);
   extern void POA_GNOME_GenericFactory__fini(PortableServer_Servant servant,
					      CORBA_Environment * ev);

/** prototypes **/
   CORBA_boolean GNOME_GenericFactory_supports(GNOME_GenericFactory _obj,
					       const CORBA_char * obj_goad_id,
					       CORBA_Environment * ev);
   CORBA_Object GNOME_GenericFactory_create_object(GNOME_GenericFactory _obj,
						   const CORBA_char * goad_id,
						   const GNOME_stringlist *
						   params,
						   CORBA_Environment * ev);

   void _ORBIT_skel_GNOME_GenericFactory_supports(POA_GNOME_GenericFactory *
						  _ORBIT_servant,
						  GIOPRecvBuffer *
						  _ORBIT_recv_buffer,
						  CORBA_Environment * ev,
						  CORBA_boolean
						  (*_impl_supports)
						  (PortableServer_Servant
						   _servant,
						   const CORBA_char *
						   obj_goad_id,
						   CORBA_Environment * ev));
   void
      _ORBIT_skel_GNOME_GenericFactory_create_object(POA_GNOME_GenericFactory
						     * _ORBIT_servant,
						     GIOPRecvBuffer *
						     _ORBIT_recv_buffer,
						     CORBA_Environment * ev,
						     CORBA_Object
						     (*_impl_create_object)
						     (PortableServer_Servant
						      _servant,
						      const CORBA_char *
						      goad_id,
						      const GNOME_stringlist *
						      params,
						      CORBA_Environment *
						      ev));
#ifdef __cplusplus
}
#endif				/* __cplusplus */

#endif
#undef ORBIT_IDL_SERIAL
