# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AS = @AS@
BONOBOX_LIBS = @BONOBOX_LIBS@
BONOBOX_PRINT_LIBS = @BONOBOX_PRINT_LIBS@
BONOBOX_TEST_CFLAGS = @BONOBOX_TEST_CFLAGS@
BONOBOX_TEST_LIBS = @BONOBOX_TEST_LIBS@
BONOBO_AGE = @BONOBO_AGE@
BONOBO_CURRENT = @BONOBO_CURRENT@
BONOBO_IDL_CFLAGS = @BONOBO_IDL_CFLAGS@
BONOBO_IDL_LIBS = @BONOBO_IDL_LIBS@
BONOBO_INCLUDEDIR = @BONOBO_INCLUDEDIR@
BONOBO_LIBDIR = @BONOBO_LIBDIR@
BONOBO_LIBS = @BONOBO_LIBS@
BONOBO_REVISION = @BONOBO_REVISION@
BONOBO_TEST_CFLAGS = @BONOBO_TEST_CFLAGS@
BONOBO_TEST_LIBS = @BONOBO_TEST_LIBS@
BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
DATADIRNAME = @DATADIRNAME@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EXEEXT = @EXEEXT@
GDK_PIXBUF_CFLAGS = @GDK_PIXBUF_CFLAGS@
GDK_PIXBUF_CONFIG = @GDK_PIXBUF_CONFIG@
GDK_PIXBUF_LIBS = @GDK_PIXBUF_LIBS@
GENCAT = @GENCAT@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GNOMEGNORBA_LIBS = @GNOMEGNORBA_LIBS@
GNOMEUI_LIBS = @GNOMEUI_LIBS@
GNOME_APPLETS_LIBS = @GNOME_APPLETS_LIBS@
GNOME_CAPPLET_LIBS = @GNOME_CAPPLET_LIBS@
GNOME_CONFIG = @GNOME_CONFIG@
GNOME_DOCKLETS_LIBS = @GNOME_DOCKLETS_LIBS@
GNOME_INCLUDEDIR = @GNOME_INCLUDEDIR@
GNOME_LIBDIR = @GNOME_LIBDIR@
GNOME_LIBS = @GNOME_LIBS@
GNOME_PRINT_LIBS = @GNOME_PRINT_LIBS@
GNORBA_CFLAGS = @GNORBA_CFLAGS@
GNORBA_LIBS = @GNORBA_LIBS@
GTKDOC = @GTKDOC@
GTKXMHTML_LIBS = @GTKXMHTML_LIBS@
GTK_CFLAGS = @GTK_CFLAGS@
GTK_CONFIG = @GTK_CONFIG@
GTK_LIBS = @GTK_LIBS@
GT_NO = @GT_NO@
GT_YES = @GT_YES@
HAVE_GTK_DOC = @HAVE_GTK_DOC@
HTML_DIR = @HTML_DIR@
INCLUDE_LOCALE_H = @INCLUDE_LOCALE_H@
INSTOBJEXT = @INSTOBJEXT@
INTLDEPS = @INTLDEPS@
INTLLIBS = @INTLLIBS@
INTLOBJS = @INTLOBJS@
INTLTOOL_PERL = @INTLTOOL_PERL@
LDFLAGS = @LDFLAGS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKINSTALLDIRS = @MKINSTALLDIRS@
OAF_CFLAGS = @OAF_CFLAGS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ORBIT_CFLAGS = @ORBIT_CFLAGS@
ORBIT_CONFIG = @ORBIT_CONFIG@
ORBIT_IDL = @ORBIT_IDL@
ORBIT_LIBS = @ORBIT_LIBS@
PACKAGE = @PACKAGE@
POFILES = @POFILES@
POSUB = @POSUB@
PROF_CFLAGS = @PROF_CFLAGS@
PROF_LDFLAGS = @PROF_LDFLAGS@
PTHREAD_LIB = @PTHREAD_LIB@
RANLIB = @RANLIB@
STRIP = @STRIP@
USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
VFS_CFLAGS = @VFS_CFLAGS@
VFS_LIBS = @VFS_LIBS@
XML_I18N_EXTRACT = @XML_I18N_EXTRACT@
XML_I18N_MERGE = @XML_I18N_MERGE@
XML_I18N_MERGE_DESKTOP_RULE = @XML_I18N_MERGE_DESKTOP_RULE@
XML_I18N_MERGE_DIRECTORY_RULE = @XML_I18N_MERGE_DIRECTORY_RULE@
XML_I18N_MERGE_KEYS_RULE = @XML_I18N_MERGE_KEYS_RULE@
XML_I18N_MERGE_OAF_RULE = @XML_I18N_MERGE_OAF_RULE@
XML_I18N_MERGE_PONG_RULE = @XML_I18N_MERGE_PONG_RULE@
XML_I18N_MERGE_SERVER_RULE = @XML_I18N_MERGE_SERVER_RULE@
XML_I18N_MERGE_SHEET_RULE = @XML_I18N_MERGE_SHEET_RULE@
XML_I18N_MERGE_SOUNDLIST_RULE = @XML_I18N_MERGE_SOUNDLIST_RULE@
XML_I18N_MERGE_XML_RULE = @XML_I18N_MERGE_XML_RULE@
XML_I18N_UPDATE = @XML_I18N_UPDATE@
XML_LIBS = @XML_LIBS@
XPM_LIBS = @XPM_LIBS@
YACC = @YACC@
ZVT_LIBS = @ZVT_LIBS@
bonobolocaledir = @bonobolocaledir@
cflags_set = @cflags_set@
cxxflags_set = @cxxflags_set@
l = @l@

PLUGIN_DIR = $(libdir)/bonobo/plugin

INCLUDES =          -DGNOMELOCALEDIR=\""$(datadir)/locale"\"        	-I$(srcdir) -I$(top_srcdir) 				-I$(top_builddir)					-DPLUGIN_DIR=\""$(PLUGIN_DIR)"\"			-I$(top_srcdir)/libefs/src			        -I$(includedir)                                 	$(BONOBO_INCLUDEDIR)					$(VFS_CFLAGS)					        $(GNOME_INCLUDEDIR)


common_ldflags = -avoid-version

bonobo_plugindir = $(PLUGIN_DIR)
bonobo_plugin_LTLIBRARIES = libstorage_efs.la libstorage_fs.la 

#
# EFS storage module
#
libstorage_efs_la_SOURCES =  	bonobo-storage-efs.c		bonobo-storage-efs.h		bonobo-stream-efs.c		bonobo-stream-efs.h


libstorage_efs_la_LDFLAGS =  	$(common_ldflags) 				-L$(top_builddir)/libefs/src			-lefs


#
# File-system based storage
#
libstorage_fs_la_SOURCES =  	bonobo-storage-fs.c		bonobo-storage-fs.h		bonobo-stream-fs.c		bonobo-stream-fs.h


libstorage_fs_la_LDFLAGS =  	$(common_ldflags)


#
# VFS storage module - disabled for now.
#
@HAVE_VFS_TRUE@libstoragedir = $(PLUGIN_DIR)
@HAVE_VFS_TRUE@libstorage_LTLIBRARIES = 	libstorage_vfs.la

@HAVE_VFS_TRUE@libstorage_vfs_la_SOURCES = 	bonobo-storage-vfs.c		bonobo-storage-vfs.h		bonobo-stream-vfs.c		bonobo-stream-vfs.h

@HAVE_VFS_TRUE@libstorage_vfs_la_LIBADD = 	$(VFS_LIBS)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
LTLIBRARIES =  $(bonobo_plugin_LTLIBRARIES) $(libstorage_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
LIBS = @LIBS@
libstorage_efs_la_LIBADD = 
libstorage_efs_la_OBJECTS =  bonobo-storage-efs.lo bonobo-stream-efs.lo
libstorage_fs_la_LIBADD = 
libstorage_fs_la_OBJECTS =  bonobo-storage-fs.lo bonobo-stream-fs.lo
libstorage_vfs_la_LDFLAGS = 
@HAVE_VFS_TRUE@libstorage_vfs_la_DEPENDENCIES = 
@HAVE_VFS_TRUE@libstorage_vfs_la_OBJECTS =  bonobo-storage-vfs.lo \
@HAVE_VFS_TRUE@bonobo-stream-vfs.lo
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(libstorage_efs_la_SOURCES) $(libstorage_fs_la_SOURCES) $(libstorage_vfs_la_SOURCES)
OBJECTS = $(libstorage_efs_la_OBJECTS) $(libstorage_fs_la_OBJECTS) $(libstorage_vfs_la_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps storage-modules/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-bonobo_pluginLTLIBRARIES:

clean-bonobo_pluginLTLIBRARIES:
	-test -z "$(bonobo_plugin_LTLIBRARIES)" || rm -f $(bonobo_plugin_LTLIBRARIES)

distclean-bonobo_pluginLTLIBRARIES:

maintainer-clean-bonobo_pluginLTLIBRARIES:

install-bonobo_pluginLTLIBRARIES: $(bonobo_plugin_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bonobo_plugindir)
	@list='$(bonobo_plugin_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(bonobo_plugindir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(bonobo_plugindir)/$$p; \
	  else :; fi; \
	done

uninstall-bonobo_pluginLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(bonobo_plugin_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(bonobo_plugindir)/$$p; \
	done

mostlyclean-libstorageLTLIBRARIES:

clean-libstorageLTLIBRARIES:
	-test -z "$(libstorage_LTLIBRARIES)" || rm -f $(libstorage_LTLIBRARIES)

distclean-libstorageLTLIBRARIES:

maintainer-clean-libstorageLTLIBRARIES:

install-libstorageLTLIBRARIES: $(libstorage_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libstoragedir)
	@list='$(libstorage_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libstoragedir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libstoragedir)/$$p; \
	  else :; fi; \
	done

uninstall-libstorageLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(libstorage_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libstoragedir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libstorage_efs.la: $(libstorage_efs_la_OBJECTS) $(libstorage_efs_la_DEPENDENCIES)
	$(LINK) -rpath $(bonobo_plugindir) $(libstorage_efs_la_LDFLAGS) $(libstorage_efs_la_OBJECTS) $(libstorage_efs_la_LIBADD) $(LIBS)

libstorage_fs.la: $(libstorage_fs_la_OBJECTS) $(libstorage_fs_la_DEPENDENCIES)
	$(LINK) -rpath $(bonobo_plugindir) $(libstorage_fs_la_LDFLAGS) $(libstorage_fs_la_OBJECTS) $(libstorage_fs_la_LIBADD) $(LIBS)

libstorage_vfs.la: $(libstorage_vfs_la_OBJECTS) $(libstorage_vfs_la_DEPENDENCIES)
	$(LINK) -rpath $(libstoragedir) $(libstorage_vfs_la_LDFLAGS) $(libstorage_vfs_la_OBJECTS) $(libstorage_vfs_la_LIBADD) $(LIBS)

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = storage-modules

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
bonobo-storage-efs.lo bonobo-storage-efs.o : bonobo-storage-efs.c \
	../config.h ../libefs/src/efs.h ../libefs/src/efs_error.h \
	bonobo-storage-efs.h ../bonobo/bonobo-storage.h \
	../bonobo/bonobo-xobject.h ../bonobo/Bonobo.h \
	../bonobo/bonobo-object.h ../bonobo/bonobo-stream.h \
	bonobo-stream-efs.h ../bonobo/bonobo-storage-plugin.h
bonobo-storage-fs.lo bonobo-storage-fs.o : bonobo-storage-fs.c \
	../config.h bonobo-storage-fs.h ../bonobo/bonobo-storage.h \
	../bonobo/bonobo-xobject.h ../bonobo/Bonobo.h \
	../bonobo/bonobo-object.h ../bonobo/bonobo-stream.h \
	bonobo-stream-fs.h ../bonobo/bonobo-storage-plugin.h
bonobo-stream-efs.lo bonobo-stream-efs.o : bonobo-stream-efs.c \
	../config.h bonobo-stream-efs.h ../bonobo/bonobo-stream.h \
	../bonobo/bonobo-object.h ../bonobo/Bonobo.h \
	bonobo-storage-efs.h ../bonobo/bonobo-storage.h \
	../bonobo/bonobo-xobject.h ../libefs/src/efs.h \
	../libefs/src/efs_error.h
bonobo-stream-fs.lo bonobo-stream-fs.o : bonobo-stream-fs.c ../config.h \
	bonobo-stream-fs.h ../bonobo/bonobo-stream.h \
	../bonobo/bonobo-object.h ../bonobo/Bonobo.h

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am:
install-exec: install-exec-am

install-data-am: install-bonobo_pluginLTLIBRARIES \
		install-libstorageLTLIBRARIES
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-bonobo_pluginLTLIBRARIES \
		uninstall-libstorageLTLIBRARIES
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(bonobo_plugindir) \
		$(DESTDIR)$(libstoragedir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-bonobo_pluginLTLIBRARIES \
		mostlyclean-libstorageLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-bonobo_pluginLTLIBRARIES clean-libstorageLTLIBRARIES \
		clean-compile clean-libtool clean-tags clean-generic \
		mostlyclean-am

clean: clean-am

distclean-am:  distclean-bonobo_pluginLTLIBRARIES \
		distclean-libstorageLTLIBRARIES distclean-compile \
		distclean-libtool distclean-tags distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-bonobo_pluginLTLIBRARIES \
		maintainer-clean-libstorageLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-bonobo_pluginLTLIBRARIES \
distclean-bonobo_pluginLTLIBRARIES clean-bonobo_pluginLTLIBRARIES \
maintainer-clean-bonobo_pluginLTLIBRARIES \
uninstall-bonobo_pluginLTLIBRARIES install-bonobo_pluginLTLIBRARIES \
mostlyclean-libstorageLTLIBRARIES distclean-libstorageLTLIBRARIES \
clean-libstorageLTLIBRARIES maintainer-clean-libstorageLTLIBRARIES \
uninstall-libstorageLTLIBRARIES install-libstorageLTLIBRARIES \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
