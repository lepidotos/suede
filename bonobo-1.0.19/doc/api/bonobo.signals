<SIGNAL>
<NAME>BonoboCanvasComponent::set-bounds</NAME>
<RETURNS>void</RETURNS>
BonoboCanvasComponent *bonobocanvascomponent
gpointer  arg1
gpointer  arg2
</SIGNAL>

<SIGNAL>
<NAME>BonoboCanvasComponent::event</NAME>
<RETURNS>gboolean</RETURNS>
BonoboCanvasComponent *bonobocanvascomponent
gpointer  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboClientSite::show-window</NAME>
<RETURNS>void</RETURNS>
BonoboClientSite *bonoboclientsite
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboClientSite::save-object</NAME>
<RETURNS>void</RETURNS>
BonoboClientSite *bonoboclientsite
gpointer  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboControlFrame::activated</NAME>
<RETURNS>void</RETURNS>
BonoboControlFrame *bonobocontrolframe
gboolean  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboControlFrame::activate-uri</NAME>
<RETURNS>void</RETURNS>
BonoboControlFrame *bonobocontrolframe
gchar *arg1
gboolean  arg2
</SIGNAL>

<SIGNAL>
<NAME>BonoboControl::set-frame</NAME>
<RETURNS>void</RETURNS>
BonoboControl *bonobocontrol
</SIGNAL>

<SIGNAL>
<NAME>BonoboControl::activate</NAME>
<RETURNS>void</RETURNS>
BonoboControl *bonobocontrol
gboolean  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboEmbeddable::host-name-changed</NAME>
<RETURNS>void</RETURNS>
BonoboEmbeddable *bonoboembeddable
gchar *arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboEmbeddable::uri-changed</NAME>
<RETURNS>void</RETURNS>
BonoboEmbeddable *bonoboembeddable
gchar *arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboItemContainer::get-object</NAME>
<RETURNS>gpointer</RETURNS>
BonoboItemContainer *bonoboitemcontainer
gpointer  arg1
gboolean  arg2
gpointer  arg3
</SIGNAL>

<SIGNAL>
<NAME>BonoboObject::query-interface</NAME>
<RETURNS>void</RETURNS>
BonoboObject *bonoboobject
gpointer  arg1
gpointer  arg2
</SIGNAL>

<SIGNAL>
<NAME>BonoboObject::system-exception</NAME>
<RETURNS>void</RETURNS>
BonoboObject *bonoboobject
gpointer  arg1
gpointer  arg2
</SIGNAL>

<SIGNAL>
<NAME>BonoboSelector::ok</NAME>
<RETURNS>void</RETURNS>
BonoboSelector *bonoboselector
</SIGNAL>

<SIGNAL>
<NAME>BonoboSelector::cancel</NAME>
<RETURNS>void</RETURNS>
BonoboSelector *bonoboselector
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIComponent::exec-verb</NAME>
<RETURNS>void</RETURNS>
BonoboUIComponent *bonobouicomponent
gchar *arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIComponent::ui-event</NAME>
<RETURNS>void</RETURNS>
BonoboUIComponent *bonobouicomponent
gchar *arg1
gint  arg2
gchar *arg3
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIEngine::add-hint</NAME>
<RETURNS>void</RETURNS>
BonoboUIEngine *bonobouiengine
gchar *arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIEngine::remove-hint</NAME>
<RETURNS>void</RETURNS>
BonoboUIEngine *bonobouiengine
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIEngine::emit-verb-on</NAME>
<RETURNS>void</RETURNS>
BonoboUIEngine *bonobouiengine
gpointer  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIEngine::emit-event-on</NAME>
<RETURNS>void</RETURNS>
BonoboUIEngine *bonobouiengine
gpointer  arg1
gchar *arg2
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIToolbarButtonItem::clicked</NAME>
<RETURNS>void</RETURNS>
BonoboUIToolbarButtonItem *bonobouitoolbarbuttonitem
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIToolbarItem::set-orientation</NAME>
<RETURNS>void</RETURNS>
BonoboUIToolbarItem *bonobouitoolbaritem
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIToolbarItem::set-style</NAME>
<RETURNS>void</RETURNS>
BonoboUIToolbarItem *bonobouitoolbaritem
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIToolbarItem::set-want-label</NAME>
<RETURNS>void</RETURNS>
BonoboUIToolbarItem *bonobouitoolbaritem
gboolean  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIToolbarItem::activate</NAME>
<RETURNS>void</RETURNS>
BonoboUIToolbarItem *bonobouitoolbaritem
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIToolbarItem::state-altered</NAME>
<RETURNS>void</RETURNS>
BonoboUIToolbarItem *bonobouitoolbaritem
gchar *arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIToolbarToggleButtonItem::toggled</NAME>
<RETURNS>void</RETURNS>
BonoboUIToolbarToggleButtonItem *bonobouitoolbartogglebuttonitem
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIXml::override</NAME>
<RETURNS>void</RETURNS>
BonoboUIXml *bonobouixml
gpointer  arg1
gpointer  arg2
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIXml::replace-override</NAME>
<RETURNS>void</RETURNS>
BonoboUIXml *bonobouixml
gpointer  arg1
gpointer  arg2
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIXml::reinstate</NAME>
<RETURNS>void</RETURNS>
BonoboUIXml *bonobouixml
gpointer  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIXml::rename</NAME>
<RETURNS>void</RETURNS>
BonoboUIXml *bonobouixml
gpointer  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIXml::remove</NAME>
<RETURNS>void</RETURNS>
BonoboUIXml *bonobouixml
gpointer  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboViewFrame::user-activate</NAME>
<RETURNS>void</RETURNS>
BonoboViewFrame *bonoboviewframe
</SIGNAL>

<SIGNAL>
<NAME>BonoboViewFrame::user-context</NAME>
<RETURNS>void</RETURNS>
BonoboViewFrame *bonoboviewframe
</SIGNAL>

<SIGNAL>
<NAME>BonoboView::set-zoom-factor</NAME>
<RETURNS>void</RETURNS>
BonoboView *bonoboview
gdouble  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboZoomableFrame::zoom-level-changed</NAME>
<RETURNS>void</RETURNS>
BonoboZoomableFrame *bonobozoomableframe
gfloat  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboZoomableFrame::zoom-parameters-changed</NAME>
<RETURNS>void</RETURNS>
BonoboZoomableFrame *bonobozoomableframe
</SIGNAL>

<SIGNAL>
<NAME>BonoboZoomable::set-frame</NAME>
<RETURNS>void</RETURNS>
BonoboZoomable *bonobozoomable
</SIGNAL>

<SIGNAL>
<NAME>BonoboZoomable::set-zoom-level</NAME>
<RETURNS>void</RETURNS>
BonoboZoomable *bonobozoomable
gfloat  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboZoomable::zoom-in</NAME>
<RETURNS>void</RETURNS>
BonoboZoomable *bonobozoomable
</SIGNAL>

<SIGNAL>
<NAME>BonoboZoomable::zoom-out</NAME>
<RETURNS>void</RETURNS>
BonoboZoomable *bonobozoomable
</SIGNAL>

<SIGNAL>
<NAME>BonoboZoomable::zoom-to-fit</NAME>
<RETURNS>void</RETURNS>
BonoboZoomable *bonobozoomable
</SIGNAL>

<SIGNAL>
<NAME>BonoboZoomable::zoom-to-default</NAME>
<RETURNS>void</RETURNS>
BonoboZoomable *bonobozoomable
</SIGNAL>

<SIGNAL>
<NAME>BonoboListener::event-notify</NAME>
<RETURNS>void</RETURNS>
BonoboListener *bonobolistener
gpointer  arg1
gpointer  arg2
gpointer  arg3
</SIGNAL>

<SIGNAL>
<NAME>BonoboPropertyControl::action</NAME>
<RETURNS>void</RETURNS>
BonoboPropertyControl *bonobopropertycontrol
gint  arg1
gint  arg2
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIToolbar::set-orientation</NAME>
<RETURNS>void</RETURNS>
BonoboUIToolbar *bonobouitoolbar
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboUIToolbar::set-style</NAME>
<RETURNS>void</RETURNS>
BonoboUIToolbar *bonobouitoolbar
</SIGNAL>

<SIGNAL>
<NAME>BonoboZoomableFrame::zoom-level-changed</NAME>
<RETURNS>void</RETURNS>
BonoboZoomableFrame *bonobozoomableframe
gfloat  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboZoomableFrame::zoom-parameters-changed</NAME>
<RETURNS>void</RETURNS>
BonoboZoomableFrame *bonobozoomableframe
</SIGNAL>

<SIGNAL>
<NAME>BonoboZoomableFrame::zoom-level-changed</NAME>
<RETURNS>void</RETURNS>
BonoboZoomableFrame *bonobozoomableframe
gfloat  arg1
</SIGNAL>

<SIGNAL>
<NAME>BonoboZoomableFrame::zoom-parameters-changed</NAME>
<RETURNS>void</RETURNS>
BonoboZoomableFrame *bonobozoomableframe
</SIGNAL>

