<refentry id="bonobo-bonobo-persist">
<refmeta>
<refentrytitle>BonoboPersist</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>BONOBO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>BonoboPersist</refname><refpurpose>Interface for anything that can save / load itself.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



typedef     <link linkend="BonoboPersist">BonoboPersist</link>;
typedef     <link linkend="BonoboPersistClass">BonoboPersistClass</link>;
<link linkend="Bonobo-Persist-ContentTypeList">Bonobo_Persist_ContentTypeList</link>* <link linkend="bonobo-persist-generate-content-types">bonobo_persist_generate_content_types</link>
                                            (int num,
                                             ...);

</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>
BonoboPersist is an abstract base class that is useless by itself.
It implements some methods to handle content type querying for
use by the derived <link linkend="BonoboPersistStream">BonoboPersistStream</link> interface.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="BonoboPersist">BonoboPersist</title>
<programlisting>typedef struct {
	BonoboXObject object;

	BonoboPersistPrivate *priv;
} BonoboPersist;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboPersistClass">BonoboPersistClass</title>
<programlisting>typedef struct {
	BonoboXObjectClass      parent_class;

	POA_Bonobo_Persist__epv epv;

	Bonobo_Persist_ContentTypeList *
	                      (*get_content_types) (BonoboPersist     *persist,
						    CORBA_Environment *ev);
} BonoboPersistClass;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="bonobo-persist-generate-content-types">bonobo_persist_generate_content_types ()</title>
<programlisting><link linkend="Bonobo-Persist-ContentTypeList">Bonobo_Persist_ContentTypeList</link>* bonobo_persist_generate_content_types
                                            (int num,
                                             ...);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>num</parameter>&nbsp;:</entry>
<entry> the number of content types specified
</entry></row>
<row><entry align="right"><parameter>...</parameter>&nbsp;:</entry>
<entry> the content types (as strings)
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> a ContentTypeList containing the given ContentTypes
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>



<refsect1>
<title>See Also</title>
<para>
<link linkend="BonoboPersistStream">BonoboPersistStream</link>, <link linkend="BonoboPersistFile">BonoboPersistFile</link>
</para>
</refsect1>

</refentry>
