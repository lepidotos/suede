<refentry id="bonobo-bonobo-wrapper">
<refmeta>
<refentrytitle>BonoboWrapper</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>BONOBO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>BonoboWrapper</refname><refpurpose>Helper widget for controlling event delivery to embedded components</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



typedef     <link linkend="BonoboWrapper">BonoboWrapper</link>;
typedef     <link linkend="BonoboWrapperClass">BonoboWrapperClass</link>;
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="bonobo-wrapper-new">bonobo_wrapper_new</link>              (void);
void        <link linkend="bonobo-wrapper-set-covered">bonobo_wrapper_set_covered</link>      (<link linkend="BonoboWrapper">BonoboWrapper</link> *wrapper,
                                             <link linkend="gboolean">gboolean</link> covered);
<link linkend="gboolean">gboolean</link>    <link linkend="bonobo-wrapper-is-covered">bonobo_wrapper_is_covered</link>       (<link linkend="BonoboWrapper">BonoboWrapper</link> *wrapper);
<link linkend="gboolean">gboolean</link>    <link linkend="bonobo-wrapper-get-visibility">bonobo_wrapper_get_visibility</link>   (<link linkend="BonoboWrapper">BonoboWrapper</link> *wrapper);
void        <link linkend="bonobo-wrapper-set-visibility">bonobo_wrapper_set_visibility</link>   (<link linkend="BonoboWrapper">BonoboWrapper</link> *wrapper,
                                             <link linkend="gboolean">gboolean</link> visible);

</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>
   This is a GtkWidget that acts as a cover on top of another
   GtkWidget.  It enables you to control whether the containee can or
   can not receive events.
</para>

<para>
   It is used by the <link linkend="BonoboViewFrame">BonoboViewFrame</link> object initialization to cover the
   embedded component and provide control of event delivery on the
   containee.  You should not control this wrapper directly when
   manipulating Bonobo components.  You should use the
   <link linkend="bonobo-view-set-frame-set-covered">bonobo_view_set_frame_set_covered</link>() for <link linkend="BonoboView">BonoboView</link> objects.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="BonoboWrapper">BonoboWrapper</title>
<programlisting>typedef struct {
	GtkBin bin;

	/* Private data. */
	BonoboWrapperPrivate *priv;
} BonoboWrapper;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboWrapperClass">BonoboWrapperClass</title>
<programlisting>typedef struct {
	GtkBinClass parent_class;
} BonoboWrapperClass;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="bonobo-wrapper-new">bonobo_wrapper_new ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  bonobo_wrapper_new              (void);</programlisting>
<para>
Creates a new wrapper widget.  It starts covered by default.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> The newly-created wrapper widget.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-wrapper-set-covered">bonobo_wrapper_set_covered ()</title>
<programlisting>void        bonobo_wrapper_set_covered      (<link linkend="BonoboWrapper">BonoboWrapper</link> *wrapper,
                                             <link linkend="gboolean">gboolean</link> covered);</programlisting>
<para>
Sets the covered status of a wrapper widget by showing or hiding the cover
window as appropriate.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>wrapper</parameter>&nbsp;:</entry>
<entry> A wrapper widget
</entry></row>
<row><entry align="right"><parameter>covered</parameter>&nbsp;:</entry>
<entry> Whether it should be covered or not
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-wrapper-is-covered">bonobo_wrapper_is_covered ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    bonobo_wrapper_is_covered       (<link linkend="BonoboWrapper">BonoboWrapper</link> *wrapper);</programlisting>
<para>
Queries the covered status of a wrapper widget.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>wrapper</parameter>&nbsp;:</entry>
<entry> A wrapper widget.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> Whether the wrapper widget is covering its child or not.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-wrapper-get-visibility">bonobo_wrapper_get_visibility ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    bonobo_wrapper_get_visibility   (<link linkend="BonoboWrapper">BonoboWrapper</link> *wrapper);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>wrapper</parameter>&nbsp;:</entry>
<entry> A BonoboWrapper.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> Whether or not visual hints should be drawn on the cover
to indicate when it is covering <parameter>wrapper</parameter>'s contents.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-wrapper-set-visibility">bonobo_wrapper_set_visibility ()</title>
<programlisting>void        bonobo_wrapper_set_visibility   (<link linkend="BonoboWrapper">BonoboWrapper</link> *wrapper,
                                             <link linkend="gboolean">gboolean</link> visible);</programlisting>
<para>
Use this function to set the visibility of the wrapper's cover
window.  If the visibility flag is TRUE, then a stipple pattern
will be drawn on the cover window to indicate when the wrapper's
contents are covered.  Of course, this stipple pattern will only
be drawn when the cover is there; use <link linkend="bonobo-wrapper-set-covered">bonobo_wrapper_set_covered</link>()
to enable the cover.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>wrapper</parameter>&nbsp;:</entry>
<entry> A BonoboWrapper.
</entry></row>
<row><entry align="right"><parameter>visible</parameter>&nbsp;:</entry>
<entry> A flag to indicate whether <parameter>wrapper</parameter>'s cover should be
visible.
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>



<refsect1>
<title>See Also</title>
<para>
   <link linkend="GtkWidget">GtkWidget</link> <link linkend="BonoboView">BonoboView</link> <link linkend="BonoboViewFrame">BonoboViewFrame</link>
</para>
</refsect1>

</refentry>
