<!-- ##### SECTION Title ##### -->
BonoboProgressiveDataSink

<!-- ##### SECTION Short_Description ##### -->
an interface implementation that allows components to sink data slowly

<!-- ##### SECTION Long_Description ##### -->
<para>
This interface is very little used, few containers support it. It
is intended to allow asynchronous dumping of data to a sub-component
in such a fashion as to minimize blocking. It transpires that this
is not a good way to achieve this.
</para>

<para>
Deprecated - please use Stream / PersistStream instead.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>
#PersistStream, #PersistFile
</para>

<!-- ##### STRUCT BonoboProgressiveDataSink ##### -->
<para>

</para>


<!-- ##### USER_FUNCTION BonoboProgressiveDataSinkStartFn ##### -->
<para>

</para>

@psink: 
@closure: 
@Returns: 


<!-- ##### USER_FUNCTION BonoboProgressiveDataSinkEndFn ##### -->
<para>

</para>

@psink: 
@closure: 
@Returns: 


<!-- ##### USER_FUNCTION BonoboProgressiveDataSinkAddDataFn ##### -->
<para>

</para>

@psink: 
@buffer: 
@closure: 
@Returns: 


<!-- ##### USER_FUNCTION BonoboProgressiveDataSinkSetSizeFn ##### -->
<para>

</para>

@psink: 
@count: 
@closure: 
@Returns: 


<!-- ##### TYPEDEF BonoboProgressiveDataSinkClass ##### -->
<para>

</para>


<!-- ##### FUNCTION bonobo_progressive_data_sink_new ##### -->
<para>

</para>

@start_fn: 
@end_fn: 
@add_data_fn: 
@set_size_fn: 
@closure: 
@Returns: 


<!-- ##### FUNCTION bonobo_progressive_data_sink_construct ##### -->
<para>

</para>

@psink: 
@start_fn: 
@end_fn: 
@add_data_fn: 
@set_size_fn: 
@closure: 
@Returns: 
<!-- # Unused Parameters # -->
@corba_psink: 


