2002-01-03  James Henstridge  <james@daa.com.au>

	* libglademodule.c: fix up copyright year.

	* gtkglmodule.c: fix up copyright year.

	* gdkpixbufmodule.c: fix up copyright year.

	* gdkimlibmodule.c: fix up copyright year.

	* gtkmodule.c (init_gtk): get rid of the _private dictionary,
	which was not used anymore.  Also add pygtk_version and
	gtk_version vars to match the development branch.
	(copyright-comment): fix up year.

	* configure.in: put some m4 defines at the top to list version
	numbers.

	* gtkmodule.c (_wrap_gtk_set_locale): convert the return of
	gtk_set_locale() to a python string before the setlocale() call,
	in case that call invalidates it.

2001-12-24  James Henstridge  <james@daa.com.au>

	* generate/Makefile.am (distclean-local): add rule to remove
	generated files.

	* Makefile.am (distclean-local): add rule to remove generated
	files.

	* generate/Makefile.am: fix rules to put ignore files in builddir.

	* mkgtk.py: ignore files are generated, so go in builddir

	* Makefile.am (mkgtk): call mkgtk.py in the source directory.

	* mkgtk.py: take the source dir as an argument, so the script can
	be run from the build dir.

2001-12-23  James Henstridge  <james@daa.com.au>

	* NEWS: add news items.

	* README: update readme.

	* pygtk.spec (Version): increment version number.

	* configure.in: increment version number.

	* gtkmodule.c (PyGdkWindow_Clear): add method (from bug #66127).
	(PyGtkSelectionData_GetAttr): add an 's' to the format string for
	__members__.  (from bug #66128).
	(_wrap_gtk_signal_emitv_by_name): don't use query after it has
	been freed.  (from bug #66129).

	* gtk.py (GtkPaned.__getattr__): accessors.

	* generate/gtkcontainers.defs (GtkPaned): add fields (from bug
	#66119).

	* gtk.py (GtkCList.__getattr__): add accessors.

	* generate/gtklists.defs (GtkCList): add fields (from bug #66115).

	* gtkmodule.c (PyGdkWindow_SetCursor): allow passing None as
	argument (fixes bug #53089).

	* gtk.py (GtkNotebook.append_page):
	(GtkNotebook.append_page_menu):
	(GtkNotebook.prepend_page):
	(GtkNotebook.prepend_page_menu):
	(GtkNotebook.insert_page):
	(GtkNotebook.insert_page_menu): allow None to be passed for
	tab_label or menu_label.

	* generate/gtkcontainers.defs (gtk_notebook_append_page):
	(gtk_notebook_append_page_menu):
	(gtk_notebook_prepend_page):
	(gtk_notebook_prepend_page_menu):
	(gtk_notebook_insert_page):
	(gtk_notebook_insert_page_menu): allow NULL for tab_label or
	menu_label.  (fix from bug #66118).

	* gtk.py (GtkList.__getattr__): add accessors.

	* generate/gtklists.defs (GtkList): add fields (from bug #66116).

	* gtk.py (GtkMenuItem.get_submenu): add wrapper.

	* generate/gtkmenus.defs (GtkMenuItem): add access to submenu
	field (from bug #66113).

	* gtk.py (GtkWidget.drag_begin): fix typo (from bug #66111).

	* GTK.py: add more constants, but (partial apply from bug #66110).

	* GDK.py: add some more constants (from bug #66108).

	* gtkmodule.c (PyGdkWindow_GetAttr): s/origin/root_origin/ typo
	(from bug #62026).
	(_wrap_gdk_color_new): fix up short/int handling for color values.
	Also added a warning that people should be using
	GdkColormap.alloc() instead.  (fixes bug #62464).
	(_wrap_gdk_window_foreign_new): check for NULL return from
	gdk_window_foreign_new(). (fixes bug #65906).

	* gtk.py (GtkCList.__getattr__): add row_height handler here.

	* generate/gtklists.defs (GtkCList): add row_height field (from
	bug #60691).

2001-11-28  James Henstridge  <james@daa.com.au>

	* generate/generate.py (FunctionDefsParser.define_func): special
	case GdkAtom return values from functions.

	* gtkmodule.c (_wrap__disable_gdk_threading): add function for
	disabling GDK threading.
	(init_gtk): remove the environment variable check, in favour of
	the more convenient _disable_gdk_threading() function.

	* configure.in: update configure.in for 2.52.

2001-10-10  Johan Dahlin  <zilch.am@home.se>

	Patch from Christian Reis <kiko@async.com.br>
        * generate/gtkcontainers.defs, gtk.py: Add GtkWindow 
	members as attributes.
	* GTK.py: Add a few constants.
	
2001-10-10  Johan Dahlin  <zilch.am@home.se>

        * gtkmodule.c: add test for PYGTK_NO_THREADS environment variable
        and disable threading in runtime if set. Patch by 
        Christian Reis <kiko@async.com.br>

2001-08-26  James Henstridge  <james@daa.com.au>

	* gtkmodule.c, gdkimlibmodule.c, gdkpixbufmodule.c: fix up
	#ifdef's for including numpy header.

2001-08-14  James Henstridge  <james@daa.com.au>

	* generate/generate.py (FunctionDefsParser): various changes to
	check for NULL returns from functions that return strings, objects
	or boxed types.

2001-05-30  Johan Dahlin  <zilch.am@home.se>

	* pygdkpixbuf.h: in the init_macro: s/_gdkpixbuf/gdkpixbuf/

2001-04-23  James Henstridge  <james@daa.com.au>

	* Makefile.am (python_PYTHON): don't install Gtkinter anymore.
	The warning not to use this has been there long enough.

	* gtk.py: add support for functions added by Fabien's patch

	Patch from Fabien COUTANT <fcoutant@freesurf.fr>
	
	* gtkmodule.c: add {append,prepend,insert}_element methods for
	GtkToolbar.  This isn't implemented quite like in Fabien's patch.

	* generate/gtkranges.defs (GtkRuler): add field position.

	* generate/gtkmenus.defs (gtk_menu_ensure_uline_accel_group): add
	function wrapper.

	* generate/gtkcontainers.defs (GtkScrolledWindow): add fields
	hscrollbar and vscrollbar.


	
	* gtkmodule.c (PyGdkEvent_GetAttr): implement __members__
	attribute.

	* pygtk.spec: up version.

	* configure.in: up version number to 0.6.8

2001-04-22  James Henstridge  <james@daa.com.au>

	* gtk.py (GtkWidget): add here as well.

	* generate/gtkbase.defs: add missing queue_draw_area, queue_clear
	and queue_clear_area methods of GtkWidget.

	* gdkpixbufmodule.c: add GdkPixbufAnimation support.

	* gtkmodule.c (PyGdkGC_set_clip_rectangle): add function, using
	patch from Buzz Megg <buzmeg@hotmail.com>

2001-04-21  James Henstridge  <james@daa.com.au>

	* pygtk.spec: create devel subpackage to hold all the development
	files.

	* Makefile.am, pyglade/Makefile.am: use newer var names.

	* acinclude.m4: include updated macro.

	* configure.in: use my more useful AM_PATH_PYTHON_JH macro that
	does a python version check.

	* generate/Makefile.am: install code generator and defs files.
	Install pygtk-codegen-1.2 script.

	* configure.in (AC_OUTPUT): substitute vars in pygtk-codegen-1.2.

	* generate/pygtk-codegen-1.2.in: short script to call generate.py

	* generate/generate.py (__main__): make generate.py callable as a
	script.

2001-03-13  James Henstridge  <james@daa.com.au>

	* configure.in (BUILD_PIXBUF): add configure checks for the pixbuf
	library.

	* gdkpixbufmodule.c, pygdkpixbuf.h: start of a GdkPixbuf module.
	Only covers the basics the GdkPixbuf type right now -- no
	animations or progressive loading.

	* gtk.py (GtkNotebook.set_tab_vborder): call the correct function
	here.

	* gtkmodule.c (_wrap_gtk_clist_get_pixmap): fix format string for
	reading args here.

2001-02-16  James Henstridge  <james@daa.com.au>

	* NEWS: added news items.

	* configure.in: increment version number.

2001-02-15  James Henstridge  <james@daa.com.au>

	* acconfig.h: add ENABLE_PYGTK_THREADING constant here.

	* configure.in (enable_thread): add support for a --disable-thread
	configure option, so you can disable pygtk threading when
	compiling with a threaded pygtk.

	* gtkmodule.c: change define from WITH_THREAD to
	ENABLE_PYGTK_THREADING.

	* examples/glade/glade.py: replace with the glade example from the
	extension-class-branch, which uses libglade -- don't want examples
	of using the deprecated pyglade module.

	* gtkmodule.c (GtkStyle_...): guard against NULL values in some
	parts.
	(PyGdkWindow_GetAttr): make some attributes inaccessible for
	GDK_WINDOW_PIXMAP GdkWindows.
	(_wrap_gtk_set_locale): fix typo.

2001-02-13  James Henstridge  <james@daa.com.au>

	Apply patch from Stephan R.A. Deibel <sdeibel@archaeopteryx.com>

	* GDK.py: add new constants.

	* gtkmodule.c (PyGdkColor_Alloc): implement
	(PyGdkWindow_Raise): rename GdkWindow._raise -> raise_.  Old name
	still works.  This is more consistent with other python modules to
	get rid of keyword conflicts.
	(PyGdkWindow_Show): added method.
	(PyGdkWindow_Hide): added method.
	(PyGdkWindow_Destroy): added method.
	(PyGdkWindow_GetAttr): add origin, deskrelative_origin and
	root_origin attributes, each of which is a tuple of integers.
	(_wrap_gdk_window_new): new function.

2001-02-11  James Henstridge  <james@daa.com.au>

	* gtk.py (GtkWidget.drag_get_source_widget): fix up wrapper.

	* gtkmodule.c (_wrap_gtk_drag_get_source_widget): guard against
	NULL return.

	* generate/gtkcontainers.defs (GtkSocket): fix parent type.

	* generate/gtkbase.defs (gtk_widget_get_extension_events): fix
	return value type.
	(gtk_widget_set_extension_events): fix argument type.

2000-09-20  James Henstridge  <james@daa.com.au>

	* gtkmodule.c: use shorts for the format string for arguments to
	GdkColormap.alloc so that they actually work on big endian
	machines.

2000-09-18  James Henstridge  <james@daa.com.au>

	* gtk.py (GtkCTree.node_get_cell_style): bug fix from Aaron
	Digulla.  Call gtk_ctree_node_[sg]et_cell_style for the
	node_[sg]et_cell_style methods.

2000-06-19  Frederic Gobry  <frederic.gobry@epfl.ch>

	* gdkimlibmodule.c: do an actual call to create_from_array instead
	of create_from_data, and fixed broken test on alpha channel

2000-04-15  James Henstridge  <james@daa.com.au>

	* gtkmodule.c: move gtk_set_locale here, and set LC_NUMERIC back to
	"C" after call.  Python's numeric locale should be fixed on C.

2000-04-07  James Henstridge  <james@daa.com.au>

	* NEWS: added news items.

	* pygtk.spec, configure.in: updated version number.

	* configure.in (enable_numpy): added --disable-numpy argument that
	disables numeric python support even if numpy is found.

	* gtkmodule.c (PyGdkWindow_{Pointer,Keyboard}{Grab,Ungrab}): new
	GdkWindow methods.

	* gtk.py (rc_reparse_all): fix spelling mistake.
	(GtkTreeItem.__getattr__): fix bug reported by Aaron Digulla.

	* generate/gtklists.defs (gtk_clist_get_selectable): fix bug in
	return type.

2000-04-06  James Henstridge  <james@daa.com.au>

	* (lots of files): switch over to using libtool and automake-1.4a.

2000-03-13  James Henstridge  <james@daa.com.au>

	* pyglade/__init__.py: remove python-1.4 ni stuff, and put in a
	warning message that you should think of switching over to libglade.

	* pygtk.spec: incremented version number.  Code gtk+ dependency into
	spec file.  Made auxillary packages depend on the pygtk package of
	the same version.

	* configure.in: incremented version number.  Incremented minimum
	required GTK+ so that when threading is compiled in we don't get
	problems caused by using old buggy versions of GTK+.

	* gtkmodule.c (PyGdkWindow_PropertyChange): fixed the 32 bit data
	part of the case statement correctly this time :)

2000-03-08  James Henstridge  <james@daa.com.au>

	* gtkmodule.c (PyGdkWindow_PropertyChange): fixed up problem in
	property_change method that could cause a crash if data of
	size 16 or 32 was set.
	(PyGtkStyleHelper_SetItem): added missing return that could cause
	a fallthrough to the g_assert_not_reached() call when setting a
	bg_pixmap element on a GtkStyle.

2000-03-03  James Henstridge  <james@daa.com.au>

	The following is from Paul Clifford <paul@plasma.demon.co.uk>

	* libglade.py (GladeXML.signal_autoconnect): pass all the extra
	arguments to autoconnect.

	* libglademodule.c (connect_many): don't exit if the handler is
	a tuple instead of a function.

	The following fixes are from John Ehresman <jpe@archaeopteryx.com>
	
	* gtk.py (GtkWidget.set_scroll_adjustments): return the value to
	user.

	* gtkmodule.c (GtkArg_AsPyObject): check if GtkObject is not NULL.
	(_wrap_gtk_clist_get_pixmap, _gtk_clist_get_pixtext): check that
	returned pixmap is not NULL.
	(_wrap_gtk_ctree_node_get_pixmap, _gtk_ctree_node_get_pixtext): check
	that returned pixmap is not NULL.

	* gtk.py (GtkToolbar): wrap callbacks when inserting a toolbar item.
	(GtkNotebook.set_menu_label_text): fixed typo
	(GtkTreeItem.__getattr__): wrap subtree attribute.

2000-03-01  Frederic Gobry  <gobry@lith.di.epfl.ch>

	* gtkmodule.c (PyGtkSelectionData_GetAttr): added .length field,
	so that it is possible to check for invalid selection during
	copy/paste.
	
2000-02-23  Frederic Gobry  <gobry@lith.di.epfl.ch>
	
	* gtkmodule (GtkRet_FromPyObject): added missing break in switch.

2000-02-21  James Henstridge  <james@daa.com.au>

	* gtk.py (GtkTable.resize): added missing function.  Patch from
	wrobell <wrobell@posexperts.com.pl>.

	* generate/gtkcontainers.defs (gtk_table_resize): added missing
	function.

2000-02-20  James Henstridge  <james@daa.com.au>

	* gtk.py (GtkCList.get_[hv]adjustment): apply fix from Martin
	Preishuber.

2000-02-16  James Henstridge  <james@daa.com.au>

	* configure.in, pygtk.spec: updated version to 0.6.4

2000-01-27 Elliot Lee <sopwith@redhat.com>
	* gtk.py: s/sel/self/ in GtkSpinButton.get_adjustment()

2000-01-26  James Henstridge  <james@daa.com.au>

	* gtk.py (GtkObject.__hash__): use C level GtkObject for hash
	function.
	(GtkAccelGroup.__cmp__): use C level object for comparisons.
	(GtkAccelGroup.__hash__): use C level object for hashing.

	* gtkmodule.c: added hash functions for many object types.

2000-01-25  Kelly Lynn Martin  <kelly@poverty.bloomington.in.us>

	* gtk.py (gdk_beep): new wrapper
	* gtkmodule.c (_wrap_gdk_beep): new implementation

2000-01-21  Matt Wilson  <msw@redhat.com>

	* generate/generate.py: add a hack to allow a null-ok flag on the
	return type.  This lets us create wrappers which return None if
	the C function returns NULL.

	* generate/gtklists.defs (gtk_ctree_node_nth): return None when
	gtk_ctree_node_nth returns NULL.

2000-01-20  Matt Wilson  <msw@redhat.com>

	* gtkmodule.c (PyGtk_New): disable object sinking for now, until
	we rework the .def file and generation routines to know which
	functions are creators.

2000-01-20  Matt Wilson  <msw@redhat.com>

	* gtk.py (GtkCList.row_move): s/soure_row/source_row/g typo

2000-01-17  Matt Wilson  <msw@redhat.com>

	* gtkmodule.c: following changes from ChiDeok Hwang
	<cdhwang@sr.hei.co.kr>

	* gtkmodule.c (_wrap_gtk_adjustment_set_all): parse the 6 optional
	arguments.

	* gtkmodule.c (_wrap_gtk_widget_draw,
	_wrap_gtk_widget_size_allocate, _wrap_gtk_widget_intersect,
	_wrap_gdk_color_alloc): fix PyArg_ParseTuple format strings to use
	shorts instead of ints where necessary.

	* gtkmodule.c (_wrap_gtk_toolbar_insert_item): check to make sure
	callback isn't Py_None before Py_INCREF()

	* gtkmodule.c (_wrap_gtk_toolbar_insert_item,
	_wrap_gtk_toolbar_append_item, _wrap_gtk_toolbar_prepend_item):
	fix broken ParseTuple specification strings.

	* gtkmodule.c (_wrap_gtk_clist_get_selection): use
	GPOINTER_TO_UINT to get row.
	
2000-01-17  Matt Wilson  <msw@redhat.com>

	* libglademodule.c (connect_one, _wrap_glade_xml_signal_connect):
	don't INCREF objects passed into Py_BuildValue as they are
	INCREF'ed for you automatically.  Pass new PyObjects in with 'N'
	to consume the reference.

	* gtkmodule.c (PyGtk_New): sink the object upon creation.  We
	don't want floating GtkObjects.

	* gtkmodule.c: general cleanups, testing for success of PyObject
	creation, reference count fixes.  Several functions used
	Py_BuildValue with 'O' format strings.  This increfs the object
	passed into the tuple where.  When using Py*New in Py_BuildValue,
	use 'N' in the format string to consume the reference of the new
	object.

2000-01-05  Matt Wilson  <msw@redhat.com>

	* gdkimlibmodule.c, gtkglmodule.c, gtkmodule.c: Patch from ChiDeok
	Hwang <cdhwang@sr.hei.co.kr> to decref PyObjects retrieved by
	PySequence_GetItem.

1999-12-18  Matt Wilson  <msw@redhat.com>

	* gtkmodule.c (_wrap_gtk_clist_get_rows): removed function

	* generate/gtklists.defs (GtkCList): add field for rows

1999-12-16  Matt Wilson  <msw@redhat.com>

	* gtk.py (GtkCList.__getattr__): oops - left out the _gtk. part

1999-12-15  Matt Wilson  <msw@redhat.com>

	* gtk.py (GdkColor): added a function to create a GdkColor
	object.  You should use this if you don't want to allocate a color
	before passing it into functions that don't need an allocated
	color.

	* gtkmodule.c (_wrap_gdk_color_new, PyGdkColor_GetAttr): add a
	functions to create and modify a GdkColor object.

1999-12-15  Matt Wilson  <msw@redhat.com>

	* gtk.py (GtkCList.__getattr__): added 'rows' attribute.

	* gtkmodule.c (_wrap_gtk_clist_get_rows): added wrapper to get
	number of rows in a clist

	* gtkmodule.c (PyGtkStyle_New): If the GtkStyle passed in is NULL,
	return a None object.  This is a bit of a hack, but without it
	you'll fail NULL assertions when you attach to the style_set
	signal.

	* generate/gtkmisc.defs (gtk_pixmap_new): mask is null-ok.

	* generate/gtklists.defs (gtk_clist_set_pixmap): likewise.

	* pygtk.h (PyGdkBitmap_Check): define PyGdkBitmap_Check to be the
	same as PyGdkWindow_Check.

	* gtkmodule.c: -Wall cleanups

	* libglademodule.c (init_libglade): removed unused variable

	* gdkimlibmodule.c (_wrap_gdk_imlib_init): s/static/static int/

1999-12-12  Matt Wilson  <msw@redhat.com>

	* generate/generate.py (FunctionDefsParser.define_func): added new
	string_or_null type to check for NULL when passing strings back

1999-09-30  James Henstridge  <james@daa.com.au>

	* pygtk.spec: updated spec file.
	
	* NEWS: added news items
	
	* configure.in: updated version number.

	* libglademodule.c: don't segfault when a widget name does not exist.

1999-09-28  James Henstridge  <james@daa.com.au>

	* libglade.py: enable gnome functionality if it is available.

	* gtk.py (GtkEditable.__getattr__): added accessors to GtkEditable.

	* generate/gtkedit.defs (GtkEditable): added accessors for some
	fields of the GtkEditable.

	* gtkmodule.c: added _raise, lower and input_get_pointer methods to
	the GdkWindow wrapper.

	* gtk.py (GtkAspectFrame.__init__): fixed prototype for GtkAspectFrame

1999-08-25  Matt Wilson  <msw@redhat.com>

	* gtkmodule.c (_wrap_gdk_char_width): added wrapper for gdk_char_width
	* gtk.py (gdk_char_width): added wrapper for gdk_char_width

1999-08-09  James Henstridge  <james@daa.com.au>

	* pygtk.spec: updated spec file, and added subpackages pygtk-glarea
	and pygtk-libglade.  Also incremented version number.

1999-08-08  James Henstridge  <james@daa.com.au>

	* NEWS: updated news file.

	* configure.in: increased version number to 0.6.2.

	* gdkimlibmodule.c (_wrap_gdk_imlib_image_get_array): make sure that
	the image data is not freed while the returned array is in use, so
	that we don't get into an inconsistent state.

	* gtk.py: added gdkrgb functions to this file.

	* gtkmodule.c: added the gdkrgb functions for drawing rgb and greyscale
	images.
	(gdk_draw_array): a new function that will draw a numpy array to a
	drawable with gdkrgb.  It is written so that it can handle slicing
	on the first two axes -- it does not handle non contiguous data on
	the third axis.

1999-08-04  Matt Wilson  <msw@redhat.com>

	* GdkImlib.py (create_image_from_xpm): new wrapper for creating
	imlib images from xpm data
	
	* gdkimlibmodule.c (_wrap_gdk_imlib_create_image_from_xpm): New
	wrapper

1999-08-03  James Henstridge  <james@daa.com.au>

	* description.py (GdkWindow): added descriptions of the new routines.

	* gtkmodule.c (GdkWindow.property_{get,change,delete}): new functions
	for manipulating the properties on a window.
	
	* gtk.py (_window_foreign_new, _root_window): added wrappers for
	the new functions.

	* gtkmodule.c: added xid attribute to GdkWindow's, and added functions
	gdk_window_foreign_new and gdk_get_root_win.  The second function is
	simply a wrapper that returns a GdkWindow for the root window.

1999-08-02  James Henstridge  <james@daa.com.au>

	* libglade.py: new file that wraps the _libglade module.

	* libglademodule.c: handle connecting to another object correctly.

	* gtkmodule.c: added support for passing an object for
	gtk_signal_connect_object type behaviour.
	(_wrap_gtk_signal_connect_object)
	(_wrap_gtk_signal_connect_object_after): new wrappers.

	* gtk.py (idle_add, timeout_add, quit_add): pass extra arguments to
	the callback.

	* libglademodule.c (_wrap_glade_xml_signal_connect): fixed a small
	problem with reference counting here.

	* gtkmodule.c: added support for passing arguments to timeout, quit
	and idle functions.

1999-08-01  James Henstridge  <james@daa.com.au>

	* pyglade/build.py (optionmenu_new): a small fix from David Cole.

	* configure.in: added tests to see if libglade is installed.

	* libglademodule.c: the rest of the libglade module

	* generate/libglade.defs: a .defs file for libglade.

1999-07-31  James Henstridge  <james@daa.com.au>

	* gtkmodule.c: put in Paul Fisher's enhancements to the threading
	code.  It should now work better with multiple threads calling
	GTK+ routines (remember to use threads_enter/threads_leave), and
	doesn't reintroduce the global interpreter lock problems that
	Duncan's original code worked around.

	* configure.in: added a check for the numpy header.
	
	* GdkImlib.py: added wrappers for the numpy routines.

	* gdkimlibmodule.c: added Travis Oliphant's Numeric python stuff to
	the imlib module.

1999-07-20  Matt Wilson  <msw@redhat.com>

	* gtk.py (gdk_flush): new wrapper
	* gtkmodule.c (_wrap_gdk_flush): new implementation

1999-07-19  James Henstridge  <james@daa.com.au>

	* gtk.py (GtkAdjustment.set_all): a wrapper for the new function.

	* gtkmodule.c (_wrap_gtk_adjustment_set_all): simple wrapper for
	setting values on an adjustment.

	* gtk.py (GtkCList.get_column_width): a wrapper for this new function.

	* gtkmodule.c (_wrap_gtk_clist_get_column_width): a function to get
	the column width for a column in a clist.

	* gtk.py (_filtprops): convert GtkAccelGroup and GdkImlibImage types
	back to the C equivalents.  This makes adding GnomeCanvasImage items
	to the GnomeCanvas easier.
	(GtkCTree.node_get_selectable): added wrapper function.

1999-07-18  James Henstridge  <james@daa.com.au>

	* gtkmodule.c (_wrap_gdk_threads_enter): don't use PyGTK_BLOCK_THREADS,
	since it should only be called outside the gtk main loop.  Instead
	use Py_BEGIN_ALLOW_THREADS.

	* examples/gl/*: new examples of use of gtkgl.
	
	* gtkgl.py: renamed from GtkGL.py.
	
	* gtkglmodule.c (_wrap_gtk_gl_area_new, _wrap_gtk_gl_area_share_new):
	fixed small typo.

	* GtkGL.py: added constants.

1999-07-15  James Henstridge  <james@daa.com.au>

	* configure.in, Makefile.am: added tests for gtkglarea.
	
	* GtkGL.py: python wrapper for the GtkGLArea widget, and a few extra
	functions for use with the widget.

	* generate/gtkgl.defs, gtkglmodule.c: added wrapper for gtkglarea.

1999-07-14  James Henstridge  <james@daa.com.au>

	* gdkimlibmodule.c: modified to use the pygdkimlib.h header.

	* pygdkimlib.h: new file similar to pygtk.h, but for _gdkimlib module.

	* gdkimlibmodule.c: modified to use the pygtk.h header.

	* gtkmodule.c: modified file to use the pygtk.h header, and set
	up the _gtk._PyGtk_API object correctly.

	* pygtk.h: a new file with a similar use to the arrayobject.h in
	numeric python.  I will convert over to using this in pygtk and
	gnome-python.

1999-07-13  James Henstridge  <james@daa.com.au>

	* gtkmodule.c (_wrap_gdk_threads_enter): unblock threads when waiting
	for the GDK lock.  This allows other threads to unlock it, and should
	prevent some deadlocks.

	* gtkmodule.c (gtk_main_iteration, gtk_events_pending): removed code
	to unlock gtk thread -- Owen fixed this properly in gtk.

1999-07-12  James Henstridge  <james@daa.com.au>

	* gtk.py: fixed a few bugs reported by Ville Lauriki.

	* generate/gtkmenus.defs (gtk_item_factory_add_foreign): fix a typo.

	* gtkmodule.c: fixed problems if gdk_atom_name returns NULL.
	
	(_wrap_gtk_main_iteration, _wrap_gtk_events_pending): added
	GDK_THREADS_LEAVE() and GDK_THREADS_ENTER() calls round these
	functions.  Without this, it deadlocks if threads are enabled.

	* generate/gtklists.defs (GtkTreeItem): added wrapper for
	treeitem->subtree attribute.

	* pyglade/build.py (text_new): small fix.

1999-05-19  James Henstridge  <james@daa.com.au>

	* NEWS: added news about changes in this version.

	* configure.in, pygtk.spec: updated version number to 0.6.1.

1999-05-13  James Henstridge  <james@daa.com.au>

	* gtkmodule.c (PyGtk_item_factory_cb): forgot to wrap the function
	call in PyGTK_{,UN}BLOCK_THREADS -- this was causing seg faults
	for people with threading built into their python.
	(PyGtk_MenuPosition): similar fix.

1999-04-25  James Henstridge  <james@daa.com.au>

	* gtk.py (GtkWidget.get_allocation): a wrapper for the new function.

	* gtkmodule.c: added a routine for getting the allocation of a widget.

1999-04-22  James Henstridge  <james@daa.com.au>

	* NEWS: added a summary of the new features.

	* pygtk.spec: upped version number.

	* configure.in: upped version number to 0.6.0.  I think thread support
	is a big enough feature to bump it up to 0.6.

1999-04-21  James Henstridge  <james@daa.com.au>

	* gtk.py (create_bitmap_from_data): added new wrapper.

	* gtkmodule.c: added gdk_bitmap_create_from_data function.  Also
	export PyGtk_BlockThreads and PyGtk_UnblockThreads through the
	_private dictionary, so they can be used from within other modules
	(gnome-python in particular).

1999-04-20  James Henstridge  <james@daa.com.au>

	* pygtk.spec: updated package version number.

	* configure.in: added a check for the python thread module.  If it
	is found, then also link _gtkmodule to the gthread library.
	Incremented minimum GTK version to 1.2.1.
	Incremented version to 0.5.13.

	* gtkmodule.c: call g_thread_init if python was built with thread
	support.  This is required to turn thread support on inside gdk/gtk.

	* gtk.py: added new functions.
	(GtkList.insert_items): this function wasn't looking at the internal
	GtkObject for the children to insert, so would fail.

	* generate/gtkbase.defs (gtk_widget_accelerators_locked): new func.

	* generate/gtkmenus.defs (gtk_item_factory_add_foreign): new func.
	(gtk_menu_get_accel_group): new func.
	(gtk_menu_reorder_child): new func.
	(gtk_menu_shell_deselect): new func.

	* gtkmodule.c (_wrap_gtk_combo_set_popdown_strings): accept any
	sequence for the second argument, rather than just lists.
	(_wrap_gtk_init): check the return value, and throw an exception
	when a connection to the X server could not be made, rather than
	exiting.

	* gtk.py: got rid of some warnings when pygtk is imported when
	DISPLAY is not set.  Not completely necessary, but it doesn't hurt.
	(GtkObject.remove_data) fixed small bug pointed out by Duncan Grisby.

1999-04-08  James Henstridge  <james@daa.com.au>

	* gtk.py (threads_enter,threads_leave): export these two new functions.

	* gtkmodule.c: applied a modified version of Duncan Grisby's threading
	patch.  The changes were mainly inlining some of the code with macros
	and making it so that the extra code was not added unless python
	was compiled with thread support.  Also added wrappers for
	gdk_thread_enter and gdk_thread_leave.

	* gtk.py (GtkList.{,un}select_item): fixed small bug reported by
	Ben Darnell.

	* gtkmodule.c: fixed some small bugs in gtk_ctree stuff.  Thanks go
	to Chi-Deok Hwang.  Also fixed the bug in gtk_clist where I copy
	and pasted from.

	* gtk.py (GtkNotebook.set_tab_label_text): Small typo.  Fix from
	Toby D. Reeves.

1999-03-13  James Henstridge  <james@daa.com.au>

	* examples/testgtk/testgtk.py: Applied some fixes from Chi-Deok Hwang
	to this example.  Mainly clean ups needed because of me not changing
	testgtk with the rest of pygtk.

1999-03-12  James Henstridge  <james@daa.com.au>

	* configure.in, pygtk.spec: increased version number to 0.5.12.
	
	* gtkmodule.c: added optional support for not catching exceptions in
	callbacks.  This way it should be a lot easier to debug a pygtk
	program with pdb.
	
	* gtkmodule.c, gtk.py: a few fixes for problems sent in by
	Chi-Deok Hwang.  This includes a fix to GtkWidget.event(),
	assignments to GtkStyle attributes throwing exceptions,
	font loading getting reference counting correct and throwing
	exceptions for bad font names and allowing None to be passed
	as a colour to GnomeCanvasItem.set() (the fix is in pygtk).

	* generate/gtklists.defs (gtk_ctree_new): I had missed this
	function in previous releases.

1999-02-24  James Henstridge  <james@daa.com.au>

	* gtk.py: made changes to match those in the defs files and _gtk.

	* description.py (GdkGC.set_dashes): describe new GdkGC method.

	* generate/gtkcontainers.defs: removed gtk_window_set{focus,default},
	since these are internal to GtkWindow.  Also added
	gtk_handle_box_set_handle_position and gtk_handle_box_set_snap_edge.

	* gtkmodule.c: added gtk_widget_get_child_requisition.
	(PyGdkGC_GetAttr): added method GdkGC.set_dashes to set the dash
	pattern for this GC.

1999-02-23  James Henstridge  <james@daa.com.au>

	* pyglade/build.py: added some code to get the option menu creation
	code working.

	* pyglade/xmlparse.py: check if xmllib is included in the standard
	python library, use it for the XML parser -- it is much more complete,
	and doesn't barf on some valid XML files like the old one does.  If
	xmllib is not found, the old parser is used.

	* README, Makefile.am, pygtk.spec: added references to the MAPPING
	file.

	* MAPPING: new file describing the mapping of GTK+ onto python as
	pygtk does it.

1999-02-22  James Henstridge  <james@daa.com.au>

	* description.py (GdkCursor): added information about this type.

	* gtk.py: commented out the __getattr__, __setattr__ and __delattr__
	methods of GtkObject.  There were too many things that broke because
	of these changes.  If I can get these to work correctly in the
	future, I will consider re-enabling it, but not till then.
	
	* examples/testgtk/testgtk.py (create_cursor_test): added a cursor
	test to the python testgtk.  It is adapted from the translation sent
	in by Osamu Tanimoto.

	* gtkmodule.c: fixed a bit of bad copy'n'paste in the GC part of the
	style wrapper code.  Thanks go to Osamu Tanimoto <tanimoto@rios.co.jp>.
	(PyGdkCursor_GetAttr): now GdkCursor objects have a type attribute
	that returns the type number for the object, and a name attribute
	that gives a string representation of that type number.

1999-02-20  James Henstridge  <james@daa.com.au>

	* gtk.py (GtkTooltips.set_tip): made tip_private argument optional.
	(GtkObject.__[gs]etattr__, GtkObject.__delattr__): added some more
	fixes to this code so that it shouldn't throw exceptions as much
	when it shouldn't.

	* gtkmodule.c: PyGdkEvent_New wasn't interpreting GDK_BUTTON_RELEASE
	events correctly.  Also some fix ups for gtk_menu_popup.

	* generate/gtkcontainers.defs (gtk_container_set_focus_child): allow
	null child argument.

1999-02-19  James Henstridge  <james@daa.com.au>

	* gtk.py: added __getattr__ and __setattr__ methods to GtkObject so
	that you can set data on a GtkObject directly in a persistent way
	(reference counting problems prevent pygtk from always passing the
	same python object to a callback).  These functions ignore attributes
	starting with an underscore.
	Also modified all the other __getattr__ methods to call their
	parent class's __getattr__ method when they fail instead of
	raising an exception.
	
	* gtk.py: some changes to make use of the new null-ok flags.
	
	* generate/*.defs: added some null-ok tags where appropriate.
	
	* gtkmodule.c: removed gtk_frame_new, as the null-ok change in
	generate.py makes it unnecessary.  Also gtk_spin_button_new_no_adj
	has been removed because it is no longer necessary.
	
	* generate/generate.py (FunctionDefsParser.define_func): altered the
	code generation routines so that they recognise the (null-ok) tag in
	the .defs file.  This should give a lot more flexibility to the
	generator, and allow me to move some of the special case code in
	gtkmodule.c back to the .defs files.  The null-ok tag is currently
	only recognised for string, object and boxed type arguments.

	* gtkmodule.c: fixes to the gtk_window_set_geometry_hints function to
	throw an exception for bad aspect values.  Also let it understand
	integers for aspect values.
	Also fixed up gtk_menu_popup so that you could give None for a few
	more arguments.

1999-02-16  James Henstridge  <james@daa.com.au>

	* description.py: added documentation about GtkStyle changes to this
	pseudo module.

	* gtkmodule.c: added a new python type GtkStyleHelper that is used
	by python GtkStyle objects as a sequence type that alows us to write
	back to the arrays in the GtkStyle object.  I have also made it
	possible to update the font and (black|white){,_gc}.  I also added
	a GtkStyle.copy() method.  This gives the user everything they need
	to alter styles inside their applications.  I still believe that
	rc files are better, but there seem to be a lot of people who want
	this functionality.
	
	* gtkmodule.c (_wrap_gtk_window_set_geometry_hints): made changes so
	apect ratios can be set to integers.  Also made it throw an exception
	for aspect ratios of zero, since this caused my X server to crash
	a few times.

1999-02-15  James Henstridge  <james@daa.com.au>

	* gtk.py (GtkPaned.set_position): added function.

	* generate/gtkcontainers.defs (gtk_paned_set_position): added new
	function

1999-02-14  James Henstridge  <james@daa.com.au>

	* gtk.py: added GtkWindow.set_geometry_hints to match below addition.
	
	* gtkmodule.c: added gtk_window_set_geometry_hints.

1999-02-08  James Henstridge  <james@daa.com.au>

	* description.py (GdkWindow.depth): documented presence of this
	attribute.

	* gtk.py (GtkFileSelection.complete): I had left out the argument in
	this prototype.  Fixed now.

1999-02-04  James Henstridge  <james@daa.com.au>

	* gtk.py (create_pixmap_from_xpm,create_pixmap_from_xpm_d): altered
	these functions to use the gdk_pixmap_colormap_create variants if
	the first argument is a GtkWidget or GtkStyle.  This means you
	don't have to realise the widget before creating pixmaps from it.
	(GtkCheckMenuItem.set_state, GtkToggleButton.set_state): removed
	these compatibility routines so they don't mask GtkWidget.set_state.

	* gtkmodule.c: moved gtk_item_factory_get_widget here so I can catch
	NULL returns and convert them to None returns.  Also added the
	depth attribute to GdkWindow objects.
	Also added gdk_pixmap_colormap_create_* variants.  These can be used
	if you only have a colormap reference, rather than a window.

	* GtkExtra.py: there were a couple of calls to
	GtkContainer.border_width which is deprecated.

	* examples/testgtk/testgtk.py: fixes to dnd code in this example.  I
	hadn't looked at it since Owen made the dnd changes.

	* examples/simple/tooltip2.py: fixed small bug pointed out by Markus
	Oberhumer.

	* pyglade/build.py (clist_new): fixes to make it parse after clist
	changes.

1999-02-02  James Henstridge  <james@daa.com.au>

	* generate/gtklists.defs, gtk.py: added GtkCList.focus_row.
	
	* _gdkimlibmodule.c, GdkImlib.py: added push_visual and pop_visual,
	that can be used to easily set GTK to use the imlib visual/colormap
	combination.

	* gtkmodule.c: the PyObject -> GtkArg conversion routines were not
	catching some exceptions that they generated.  This would cause
	wierd problems if you passed the wrong argument types to signal
	handlers.  This was found by Chi-Deok Hwang <cdhwang@sr.hei.co.kr>

	* examples/simple/dnd.py, examples/simple/dndpixmaps.py: and example
	of drag and drop contributed by Chi-Deok Hwang <cdhwang@sr.hei.co.kr>
	
	* gtkmodule.c: added gtk_ctree_get_selection, that returns nodes
	rather than pointers.

	* gtk.py: made changes to reflect those below.  Also added
	GtkWidget.get_colormap() (it was missing previously).

	* generate/gtkedit.defs (gtk_spin_button_update): added function.

	* generate/gtkmenus.defs (gtk_check_menu_item_set_active): function
	renaming.
	(gtk_menu_set_title): added function.

	* generate/gtkmisc.defs (gtk_toggle_button_[sg]et_active): added
	functions, and removed gtk_toggle_button_set_state.

1999-01-27  James Henstridge  <james@daa.com.au>

	* gtkmodule.c: fixed some typos in _wrap_gtk_ctree_get_row_data and
	_wrap_gtk_ctree_base_nodes.  This fix was sent to me by Jim
	Robinson <robinson@ipsg.mot.com>.

1999-01-26  James Henstridge  <james@daa.com.au>

	* gtk.py: fixed typo in GtkProgress.configure.

1999-01-22  James Henstridge  <james@daa.com.au>

	* gdkimlibmodule.c: (_wrap_gdk_imlib_create_image_from_data): function
	would raise an exception if there was a null in the data or alpha
	arguments.  Also added some sanity checks on the lengths of data
	and alpha.  This patch was submitted by Toby D. Reeves.

1999-01-21  James Henstridge  <james@daa.com.au>

	* examples/testgtk/testgtk.py (create_scrolled_windows): changed
	a call to GtkContainer.add to GtkScrolledWindow.add_with_viewport.

	* gtk.py (GtkPacker.add): Added defaults for the arguments.

1999-01-11  James Henstridge  <james@daa.com.au>

	* gtk.py (GtkProgress.get_current_percentage): fixed function call

	* gtk.py (GtkScrolledWindow): changed so it inherits from GtkBin
	instead of GtkContainer, to match changes in GTK.

	* GDK.py (DRAG_PROTO_ROOTWIN): Added the constant.

	* gtkmodule.c: forgot to include GTK_TYPE_DOUBLE in one of the GtkArg
	processing routines.  Also fixed a problem for events with a NULL
	window.

1998-12-24  James Henstridge  <james@daa.com.au>

	* gdkimlibmodule.c(_wrap_gdk_imlib_get_rgb_height): I accidentally
	returned rgb_width instead of rgb_height.  This bug report was from
	Osamu Tanimoto <tanimoto@rios.co.jp>.

1998-12-22  James Henstridge  <james@daa.com.au>

	* GtkExtra.py: modified the signal connect bit in the MenuFactory
	code so it is a bit more sane.

1998-12-21  James Henstridge  <james@daa.com.au>

	* pygtk.spec: updated version here as well.

	* README: updated required GTK version to 1.1.9

	* configure.in: Updated version for pygtk to 0.5.9, increased
	GTK version check to 1.1.9.

1998-12-20  James Henstridge  <james@daa.com.au>

	* gtkmodule.c, generate/gtkmisc.defs: moved gtk_preview_draw_row here
	because python's string conversion routines do not like nuls in a
	string, but you quite often want them in image data.

1998-12-17  James Henstridge  <james@daa.com.au>

	* examples/*/*.py: changed calls to GtkLabel.set to GtkLabel.set_text.
	
	* gtk.py: made changes to reflect those below.

	* generate/gtkbase.defs (gtk_widget_set_app_paintable): added this
	stub.

	* generate/gtkmisc.defs (gtk_label_set_text): renamed gtk_label_set to
	this, added gtk_label_set_line_wrap.

	* generate/gtkdnd.defs: Added gtk_drag_source_unset.

	* generate/gtklists.defs: moved reordering function stubs from ctree
	to clist.

	* generate/gtkcontainers.defs: removed GtkDrawWindow.  Added
	gtk_paned_pack[12]

	* GtkExtra.py (MenuFactory.create): wasn't passing extra arguments
	onto signal connect.  Bug fix from Sam Tannous <stannous@cisco.com>

	* gtkmodule.c: Applied some fixes to the ctree code from
	A.Hartgers@phys.tue.nl

1998-12-09  James Henstridge  <james@daa.com.au>

	* gtk.py, generate/gtkmisc.defs, GTK.py: Added
	gtk_toolbar_set_space_style and the required enum.

1998-12-08  James Henstridge  <james@daa.com.au>

	* gtkmodule.c: fixed up the toolbar functions, so they also use
	gtk_signal_connect_full, and now return the added child, like
	the C functions do.

	* examples/testgtk/testgtk.py: fixed up some stuff in the main
	function and clist test.

	* gtk.py, generate/gtkcontainers.defs: added
	gtk_window_set_transient_for and gtk_window_set_default_size.

	* gtkmodule.c: Changed to use _full functions instead of _interp
	functions.  Also made gtk_signal_connect and friends use the
	gtk_signal_connect_full function rather than the default marshaller
	method.

1998-12-07  James Henstridge  <james@daa.com.au>

	* generate/gtkcontainers.defs (gtk_viewport_new): Accept NULL
	arguments for adjustments of a viewport.  This is the correct
	fix for Michael's other patch.

	* examples/*/*.py: got rid of deprecation messages.  Put scrolled
	windows round all clists.
	
	* pyglade/build.py: Fixes a bug in scrolledwindow_new pointed out
	by Michael Hudson.  Also made some changes so that it doesn't use
	any deprecated functions.

	* gtkmodule.c: fixed two typos pointed out by Michael Hudson

1998-12-05  James Henstridge  <james@daa.com.au>

	* gtkmodule.c, generate/*.defs, gtk.py: updated to latest CVS.  This
	includes the function name changes Tim Janik introduced.  I have
	added backward compatibility wrappers for the old functions in gtk.py,
	which also print out a deprecation message.

1998-12-01  James Henstridge  <james@daa.com.au>

	* gtk.py (GtkLayout): I had left a few remnants from when this class
	was in gnome.ui.  This is now fixed.

1998-11-29  James Henstridge  <james@daa.com.au>

	* description.py: Added a description of the GtkCTreeNode type.

	* gtk.py (GtkCTree): Added the GtkCTree class to this layer.
	Hopefully I haven't made any mistakes.

1998-11-28  James Henstridge  <james@daa.com.au>

	* generate/gtklists.defs: added entries for GtkCTree.

	* gtkmodule.c: Added the GtkCTreeNode type.  It exports some of the
	attributes of the GtkCTreeRow associated with the node.  Specifically,
	the parent, next sibling links, and a list of children.  This should
	be enough attributes to make the type useful.
	Also added extra functions for GtkCTree.
	
1998-11-27  James Henstridge  <james@daa.com.au>

	* generate/gtk*.defs: updated for GTK+-1.1.5.
	
	* gtkmodule.c: added the PyGtk_RegisterBoxed function, exported through
	the _private dictionary.  This allows adding extra boxed types so they
	will be recognised in signal handlers and the like.
	
	* gtk.py: this file used to be Gtkinter.py.  People should make this
	change in their programs.  Also updated for changes to the API.
	
	* Gtkinter.py: new file.  Simply does a "from gtk import *", so old
	programs will still run properly.

	* examples/*/*.py, pyglade/*.py, GdkImlib.py, GtkExtra.py: changed
	occurences of Gtkinter to gtk.

1998-11-17  James Henstridge  <james@daa.com.au>
	
	* GdkImlib.py: missed a closing parenthesis.  This caused problems.
	
	* generate/gtk.defs(gtk_rc_add_*_style): removed these functions.
	They weren't exported by Gtkinter, and their declaration has changed
	in newer GTK+'s.  Now pygtk should compile with both GTK+-1.1.3 and
	CVS GTK (tested for a 1998-11-16 checkout).
	
	* configure.in, NEWS: bumped version up to 0.5.5, and made new release.
	
	* generate/gtkmisc.defs, Gtkinter.py: added the GtkCalendar widget.

1998-11-15  James Henstridge  <james@daa.com.au>
	
	* gtkmodule.c: added GdkCursor type.
	
	* gtkmodule.c(GdkWindow.set_cursor): function to set cursor for window
	
	* generate/gtk.defs (gtk_cursor_*): new functions to create cursors
	
	* gtkmodule.c(gtk_pixmap_create_from_xpm_d): new function to create
	a GdkPixmap from a list of strings (XPM data).  This allows you to
	store pixmaps inline with your program for distribution.
	
	* gdkimlibmodule.c: export the GdkImlibImageType, and a _private
	dictionary that holds exported functions.  I should be able to
	add the GdkImlibImage dependent functions to _gnomeui now.
	
	* GDK.py, GTK.py: updated with new constants.
	
	* examples/simple/*1.py: stopped importing _gtkbase, and don't call
	_gtk.pygtk_init().
	
	* pyglade/build.py: added menu widgets to the interface building code.
	
	* pygtk.spec: new file -- an RPM spec file for this package.
	
	* NEWS: add information about this new version.

1998-11-15  James Henstridge  <james@daa.com.au>
	
	* gtkmodule.c: added GdkAtom handling.  There is now a special type for
	GdkAtoms that can be cast to string and int with str() and int()
	respectively, and it supports coercions, so it should act like an
	int in most cases.  Functions that take GdkAtom's as arguments
	actually take ints, so backward compatibility is kept, but functions
	that return GdkAtoms now return this special type.
	
	* gtkmodule.c, generate/gtkdnd.defs, Gtkinter.py: added the new DnD
	code, and support for selections.  The gtk_selection_* functions have
	been mapped to GtkWidget.selection_*, and the gtk_drag_* functions
	have been mapped to GtkWidget.drag_*
	
	* GdkImlib.py: added function create_image_from_data, so you can
	create an image from raw RGB data.  Also added the Image.get_pixmap
	method, which is like Image.make_pixmap, except it returns the
	GdkPixmap,GdkBitmap pair, instead of a GtkPixmap widget.

1998-11-14  James Henstridge  <james@daa.com.au>

	* generate/*.defs: changes to bring pygtk up to date with GTK+-1.1.3

1998-11-13  James Henstridge  <james@daa.com.au>
	
	* gtkmodule.c: added wrappers for GdkDragContext and GtkSelectionData.
	Also removed all the old DnD GdkEvent mappings, and added the
	GdkEventDND mapping.  This should be enough to get the new Dnd signals
	working.
	
	* generate/gtkbase.defs, gtkmodule.c(_wrap_gtk_widget_dnd_*): removed
	the old gtk_widget_dnd_* functions from the bindings.

1998-11-10  James Henstridge  <james@daa.com.au>
	
	* build system: Converted over to using automake.  Note thay some
	modifications have been made to the original version of automake,
	so you will need to apply my patches if you want to modify pygtk.
	
	* swigsrc/*: removed.  I am now using some code generation tools
	that take .defs files as input.
	
	* gdkimlibmodule.c: got rid of all the swig stuff, and cleaned up the
	code a bit.  This has reduced the source code size by half.

1998-11-10  James Henstridge  <james@daa.com.au>
	
	* ChangeLog: started change log.  Old Changelog file has been moved
	to NEWS
	
	* NEWS: used to be Changelog
	
