<!-- ##### SECTION Title ##### -->
gconf-internals

<!-- ##### SECTION Short_Description ##### -->


<!-- ##### SECTION Long_Description ##### -->
<para>

</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### FUNCTION gconf_key_directory ##### -->
<para>

</para>

@key: 
@Returns: 


<!-- ##### FUNCTION gconf_key_key ##### -->
<para>

</para>

@key: 
@Returns: 


<!-- ##### FUNCTION gconf_file_test ##### -->
<para>

</para>

@filename: 
@test: 
@Returns: 


<!-- ##### FUNCTION gconf_file_exists ##### -->
<para>

</para>

@filename: 
@Returns: 


<!-- ##### FUNCTION gconf_value_from_corba_value ##### -->
<para>

</para>

@value: 
@Returns: 


<!-- ##### FUNCTION corba_value_from_gconf_value ##### -->
<para>

</para>

@value: 
@Returns: 


<!-- ##### FUNCTION fill_corba_value_from_gconf_value ##### -->
<para>

</para>

@value: 
@dest: 


<!-- ##### FUNCTION invalid_corba_value ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION fill_corba_schema_from_gconf_schema ##### -->
<para>

</para>

@sc: 
@dest: 


<!-- ##### FUNCTION corba_schema_from_gconf_schema ##### -->
<para>

</para>

@sc: 
@Returns: 


<!-- ##### FUNCTION gconf_schema_from_corba_schema ##### -->
<para>

</para>

@cs: 
@Returns: 


<!-- ##### FUNCTION gconf_value_type_to_string ##### -->
<para>

</para>

@type: 
@Returns: 


<!-- ##### FUNCTION gconf_value_type_from_string ##### -->
<para>

</para>

@str: 
@Returns: 


<!-- ##### FUNCTION gconf_load_source_path ##### -->
<para>

</para>

@filename: 
@err: 
@Returns: 


<!-- ##### FUNCTION gconf_shutdown_daemon ##### -->
<para>

</para>

@err: 


<!-- ##### FUNCTION gconf_ping_daemon ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION gconf_spawn_daemon ##### -->
<para>

</para>

@err: 
@Returns: 


<!-- ##### FUNCTION gconf_concat_dir_and_key ##### -->
<para>

</para>

@dir: 
@key: 
@Returns: 


<!-- ##### FUNCTION gconf_string_to_gulong ##### -->
<para>

</para>

@str: 
@Returns: 


<!-- ##### FUNCTION gconf_current_locale ##### -->
<para>

</para>

@Returns: 


<!-- ##### ENUM GConfLogPriority ##### -->
<para>

</para>

@GCL_EMERG: 
@GCL_ALERT: 
@GCL_CRIT: 
@GCL_ERR: 
@GCL_WARNING: 
@GCL_NOTICE: 
@GCL_INFO: 
@GCL_DEBUG: 

<!-- ##### FUNCTION gconf_log ##### -->
<para>

</para>

@pri: 
@format: 
@Varargs: 


<!-- ##### FUNCTION gconf_key_check ##### -->
<para>

</para>

@key: 
@err: 
@Returns: 


<!-- ##### FUNCTION gconf_value_new_from_string ##### -->
<para>
Tries to parse a string and create a primitive #GConfValue from
it. Only works on primitive types.
</para>

@type: 
@str: 
@err: 
@Returns: 


<!-- ##### FUNCTION gconf_value_new_list_from_string ##### -->
<para>
This function does not work. Don't use it.
</para>

@list_type: 
@str: 
@err: 
@Returns: 


<!-- ##### FUNCTION gconf_value_new_pair_from_string ##### -->
<para>
This function does not work. Don't use it.
</para>

@car_type: 
@cdr_type: 
@str: 
@err: 
@Returns: 


<!-- ##### FUNCTION gconf_quote_string ##### -->
<para>

</para>

@str: 
@Returns: 


<!-- ##### FUNCTION gconf_unquote_string ##### -->
<para>

</para>

@str: 
@end: 
@err: 
@Returns: 


<!-- ##### FUNCTION gconf_unquote_string_inplace ##### -->
<para>

</para>

@str: 
@end: 
@err: 


<!-- ##### FUNCTION gconf_value_decode ##### -->
<para>

</para>

@encoded: 
@Returns: 


<!-- ##### FUNCTION gconf_value_encode ##### -->
<para>

</para>

@val: 
@Returns: 


<!-- ##### FUNCTION gconf_quote_percents ##### -->
<para>

</para>

@src: 
@Returns: 


<!-- ##### FUNCTION gconf_value_list_from_primitive_list ##### -->
<para>

</para>

@list_type: 
@list: 
@Returns: 


<!-- ##### FUNCTION gconf_value_pair_from_primitive_pair ##### -->
<para>

</para>

@car_type: 
@cdr_type: 
@address_of_car: 
@address_of_cdr: 
@Returns: 


<!-- ##### FUNCTION gconf_value_list_to_primitive_list_destructive ##### -->
<para>

</para>

@val: 
@list_type: 
@err: 
@Returns: 


<!-- ##### FUNCTION gconf_value_pair_to_primitive_pair_destructive ##### -->
<para>

</para>

@val: 
@car_type: 
@cdr_type: 
@car_retloc: 
@cdr_retloc: 
@err: 
@Returns: 


<!-- ##### FUNCTION gconf_set_daemon_mode ##### -->
<para>

</para>

@setting: 


<!-- ##### FUNCTION gconf_handle_oaf_exception ##### -->
<para>

</para>

@ev: 
@err: 
@Returns: 


<!-- ##### FUNCTION gconf_engine_get_full ##### -->
<para>
This function is basically for internal use.
</para>

@conf: 
@key: 
@locale: 
@use_schema_default: 
@is_default_p: 
@is_writable_p: 
@err: 
@Returns: 
<!-- # Unused Parameters # -->
@value_is_default: 


