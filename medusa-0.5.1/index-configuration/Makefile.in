# Makefile.in generated automatically by automake 1.4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
APP_LIBS = @APP_LIBS@
AS = @AS@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
DATADIRNAME = @DATADIRNAME@
DB_LIB = @DB_LIB@
DLLTOOL = @DLLTOOL@
ENABLE_PROFILER = @ENABLE_PROFILER@
GENCAT = @GENCAT@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_CONFIG = @GLIB_CONFIG@
GLIB_LIBS = @GLIB_LIBS@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GNOMEUI_CFLAGS = @GNOMEUI_CFLAGS@
GNOMEUI_LIBS = @GNOMEUI_LIBS@
GNOME_CFLAGS = @GNOME_CFLAGS@
GNOME_CONFIG = @GNOME_CONFIG@
GNOME_LIBS = @GNOME_LIBS@
GNORBA_CFLAGS = @GNORBA_CFLAGS@
GNORBA_LIBS = @GNORBA_LIBS@
GTK_CFLAGS = @GTK_CFLAGS@
GTK_CONFIG = @GTK_CONFIG@
GTK_LIBS = @GTK_LIBS@
GT_NO = @GT_NO@
GT_YES = @GT_YES@
INCLUDE_LOCALE_H = @INCLUDE_LOCALE_H@
INSTOBJEXT = @INSTOBJEXT@
INTLDEPS = @INTLDEPS@
INTLLIBS = @INTLLIBS@
INTLOBJS = @INTLOBJS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MEDUSA_LOCALSTATEDIR = @MEDUSA_LOCALSTATEDIR@
MEDUSA_MAJOR_VERSION = @MEDUSA_MAJOR_VERSION@
MEDUSA_MICRO_VERSION = @MEDUSA_MICRO_VERSION@
MEDUSA_MINOR_VERSION = @MEDUSA_MINOR_VERSION@
MEDUSA_PREFIX = @MEDUSA_PREFIX@
MEDUSA_SYSCONFDIR = @MEDUSA_SYSCONFDIR@
MEDUSA_VERSION = @MEDUSA_VERSION@
MKINSTALLDIRS = @MKINSTALLDIRS@
OAF_CFLAGS = @OAF_CFLAGS@
OAF_LIBS = @OAF_LIBS@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
POFILES = @POFILES@
POSUB = @POSUB@
RANLIB = @RANLIB@
USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
VFS_CFLAGS = @VFS_CFLAGS@
VFS_LIBS = @VFS_LIBS@
XML_CFLAGS = @XML_CFLAGS@
XML_CONFIG = @XML_CONFIG@
XML_LIBS = @XML_LIBS@
X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
ZVT_LIBS = @ZVT_LIBS@
l = @l@

NULL = 

sbin_PROGRAMS = medusa-test-indexing-status

medusa_test_indexing_status_SOURCES =  	medusa-test-indexing-status.c 	$(NULL)


INCLUDES =  	$(GLIB_CFLAGS) 	$(GNOME_CFLAGS) 	$(NULL)	


medusa_test_indexing_status_LDADD =  	$(GLIB_LIBS) 	$(GNOME_LIBS) 	$(VFS_LIBS) 	$(XML_LIBS) 	$(top_builddir)/libmedusa/libmedusa.la 	$(NULL)


file_indexdir = $(sysconfdir)/medusa

file_index_DATA =  	file-index-stoplist 	mount-type-stoplist 	$(NULL)


medusacronconfdir = $(sysconfdir)/cron.daily

medusacronconf_DATA =  	medusa.cron 	$(NULL)


medusaidledconfdir = $(sysconfdir)/profile.d

medusaidledconf_DATA =  	medusa-idled.sh 	medusa-idled.csh 	$(NULL)


medusainitdir = $(prefix)/tmp

medusainit_DATA =  	medusa-init 	$(NULL)


# XXX There must be some better way than this to get automake to install
#     an empty directory.  I'm doing this cargo-cult style.

dummydir = $(localstatedir)/medusa

dummy_DATA =  	.dummy 	$(NULL)


medusa_conf_DATA =  	medusa.conf 	$(NULL)


medusa_confdir = $(sysconfdir)/medusa

EXTRA_DIST =  	$(file_index_DATA) 		$(medusacronconf_DATA) 		$(medusaidledconf_DATA) 	$(medusainit_DATA)		$(dummy_DATA)			$(medusa_conf_DATA)     	$(NULL)

mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES =  medusa.cron medusa-idled.sh medusa-idled.csh \
medusa-init
PROGRAMS =  $(sbin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
medusa_test_indexing_status_OBJECTS =  medusa-test-indexing-status.o
medusa_test_indexing_status_DEPENDENCIES =  \
$(top_builddir)/libmedusa/libmedusa.la
medusa_test_indexing_status_LDFLAGS = 
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DATA =  $(dummy_DATA) $(file_index_DATA) $(medusa_conf_DATA) \
$(medusacronconf_DATA) $(medusaidledconf_DATA) $(medusainit_DATA)

DIST_COMMON =  Makefile.am Makefile.in medusa-idled.csh.in \
medusa-idled.sh.in medusa-init.in medusa.cron.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(medusa_test_indexing_status_SOURCES)
OBJECTS = $(medusa_test_indexing_status_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps index-configuration/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

medusa.cron: $(top_builddir)/config.status medusa.cron.in
	cd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
medusa-idled.sh: $(top_builddir)/config.status medusa-idled.sh.in
	cd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
medusa-idled.csh: $(top_builddir)/config.status medusa-idled.csh.in
	cd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status
medusa-init: $(top_builddir)/config.status medusa-init.in
	cd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

mostlyclean-sbinPROGRAMS:

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)

distclean-sbinPROGRAMS:

maintainer-clean-sbinPROGRAMS:

install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(sbindir)
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(sbindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(sbindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(sbindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

.c.o:
	$(COMPILE) -c $<

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

medusa-test-indexing-status: $(medusa_test_indexing_status_OBJECTS) $(medusa_test_indexing_status_DEPENDENCIES)
	@rm -f medusa-test-indexing-status
	$(LINK) $(medusa_test_indexing_status_LDFLAGS) $(medusa_test_indexing_status_OBJECTS) $(medusa_test_indexing_status_LDADD) $(LIBS)

install-dummyDATA: $(dummy_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(dummydir)
	@list='$(dummy_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(dummydir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(dummydir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(dummydir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(dummydir)/$$p; \
	  fi; fi; \
	done

uninstall-dummyDATA:
	@$(NORMAL_UNINSTALL)
	list='$(dummy_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(dummydir)/$$p; \
	done

install-file_indexDATA: $(file_index_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(file_indexdir)
	@list='$(file_index_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(file_indexdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(file_indexdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(file_indexdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(file_indexdir)/$$p; \
	  fi; fi; \
	done

uninstall-file_indexDATA:
	@$(NORMAL_UNINSTALL)
	list='$(file_index_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(file_indexdir)/$$p; \
	done

install-medusa_confDATA: $(medusa_conf_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(medusa_confdir)
	@list='$(medusa_conf_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(medusa_confdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(medusa_confdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(medusa_confdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(medusa_confdir)/$$p; \
	  fi; fi; \
	done

uninstall-medusa_confDATA:
	@$(NORMAL_UNINSTALL)
	list='$(medusa_conf_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(medusa_confdir)/$$p; \
	done

install-medusacronconfDATA: $(medusacronconf_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(medusacronconfdir)
	@list='$(medusacronconf_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(medusacronconfdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(medusacronconfdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(medusacronconfdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(medusacronconfdir)/$$p; \
	  fi; fi; \
	done

uninstall-medusacronconfDATA:
	@$(NORMAL_UNINSTALL)
	list='$(medusacronconf_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(medusacronconfdir)/$$p; \
	done

install-medusaidledconfDATA: $(medusaidledconf_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(medusaidledconfdir)
	@list='$(medusaidledconf_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(medusaidledconfdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(medusaidledconfdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(medusaidledconfdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(medusaidledconfdir)/$$p; \
	  fi; fi; \
	done

uninstall-medusaidledconfDATA:
	@$(NORMAL_UNINSTALL)
	list='$(medusaidledconf_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(medusaidledconfdir)/$$p; \
	done

install-medusainitDATA: $(medusainit_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(medusainitdir)
	@list='$(medusainit_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(medusainitdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(medusainitdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(medusainitdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(medusainitdir)/$$p; \
	  fi; fi; \
	done

uninstall-medusainitDATA:
	@$(NORMAL_UNINSTALL)
	list='$(medusainit_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(medusainitdir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = index-configuration

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-sbinPROGRAMS
install-exec: install-exec-am

install-data-am: install-dummyDATA install-file_indexDATA \
		install-medusa_confDATA install-medusacronconfDATA \
		install-medusaidledconfDATA install-medusainitDATA
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-sbinPROGRAMS uninstall-dummyDATA \
		uninstall-file_indexDATA uninstall-medusa_confDATA \
		uninstall-medusacronconfDATA \
		uninstall-medusaidledconfDATA uninstall-medusainitDATA
uninstall: uninstall-am
all-am: Makefile $(PROGRAMS) $(DATA)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(sbindir) $(DESTDIR)$(dummydir) \
		$(DESTDIR)$(file_indexdir) $(DESTDIR)$(medusa_confdir) \
		$(DESTDIR)$(medusacronconfdir) \
		$(DESTDIR)$(medusaidledconfdir) \
		$(DESTDIR)$(medusainitdir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-sbinPROGRAMS mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-sbinPROGRAMS clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-sbinPROGRAMS distclean-compile \
		distclean-libtool distclean-tags distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-sbinPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-sbinPROGRAMS distclean-sbinPROGRAMS \
clean-sbinPROGRAMS maintainer-clean-sbinPROGRAMS uninstall-sbinPROGRAMS \
install-sbinPROGRAMS mostlyclean-compile distclean-compile \
clean-compile maintainer-clean-compile mostlyclean-libtool \
distclean-libtool clean-libtool maintainer-clean-libtool \
uninstall-dummyDATA install-dummyDATA uninstall-file_indexDATA \
install-file_indexDATA uninstall-medusa_confDATA \
install-medusa_confDATA uninstall-medusacronconfDATA \
install-medusacronconfDATA uninstall-medusaidledconfDATA \
install-medusaidledconfDATA uninstall-medusainitDATA \
install-medusainitDATA tags mostlyclean-tags distclean-tags clean-tags \
maintainer-clean-tags distdir info-am info dvi-am dvi check check-am \
installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
